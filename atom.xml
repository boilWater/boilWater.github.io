<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JackJin&#39;s 博客</title>
  <subtitle>一位脚踏实地，拥有梦想的90后，想要一直努力追上你！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-08T14:26:19.199Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>JackJin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS UI 优化 - Core Animation</title>
    <link href="http://yoursite.com/2019/01/06/iOS%20UI%20%E4%BC%98%E5%8C%96%20-%20Core%20Animation%20/"/>
    <id>http://yoursite.com/2019/01/06/iOS UI 优化 - Core Animation /</id>
    <published>2019-01-06T12:39:52.865Z</published>
    <updated>2019-01-08T14:26:19.199Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Core-Animation-实现探索&quot;&gt;&lt;a href=&quot;#Core-Animation-实现探索&quot; class=&quot;headerlink&quot; title=&quot;Core Animation 实现探索&quot;&gt;&lt;/a&gt;Core Animation 实现探索&lt;/h1&gt;&lt;p&gt;看资料需要了解的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、ModelLayer 和 PresentationLayer 分别是指什么？&lt;br&gt;2、隐式动画和显示动画实现原理是什么？&lt;br&gt;3、UIView 和 CALayer 两者之间如何实现事件传递和交互？&lt;br&gt;4、贝塞尔曲线在是如何实现绘制？  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决在实现中第 3 个问题：&lt;br&gt;UIView 和 CALayer 在具体实现中相关属性在初始化设置时设置 View 的 Frame、 Center 和 Size， OS 系统都会间接的设置 CALayer 中 position、bounds、position 和 bounds 对应的几个属性去做设置当前 View 显示具体详细内容和属性。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;换言之：我们对 View 初始化时在设置布局过程中采用 Frame 均是委托给当前 View 拥有的 Layer 层进行设置边界布局，在对属性进行读取操作实际上也是通过调用 Layer 相关属性来实现当前位置调用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;UIKit 框架特性是：我们在当前界面控件元素进行初始化，修改以及当前布局计算，渲染绘制和动画执行均在 main queue 来实现。而且在响应链反馈，手势识别等均切换在主线程中。当 Page 界面控件较多，布局较为复杂就可能会出现掉帧情况，出现界面展示出卡顿现象。&lt;/p&gt;
&lt;p&gt;发散思维：&lt;br&gt;UIKit 是我们在实现 APP 界面中所有控件的基础库，里面有我们在组建 APP 界面中所有的元素。&lt;/p&gt;
&lt;p&gt;在组建的控件布局采用 AutoLayout，然后控件做一些复杂的动画实现内容。&lt;br&gt;实际在控件绘制绘制生成我们可视化的每一帧图片时是使用 Core Animation、Core Graphics 和 Core Image 来使用 OpenGL ES 处理连接 GPU Driver 使用 GPU 来生成我们可以看到每一帧的图片内容。&lt;br&gt;在此过程中我们可以考虑想要提高当前页面帧数可以从上面控件初始化，布局计算，渲染以及相关素材解码显示原生图片渲染生成纹理图显示在 UI 屏幕上。&lt;/p&gt;
&lt;h2 id=&quot;隐式动画实现：&quot;&gt;&lt;a href=&quot;#隐式动画实现：&quot; class=&quot;headerlink&quot; title=&quot;隐式动画实现：&quot;&gt;&lt;/a&gt;隐式动画实现：&lt;/h2&gt;&lt;p&gt;在我们采用 UIView 初始化后进行修改其初始化 View 实例执行：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//没有相关的动画操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;view.center = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; animationWithDuration:&lt;span class=&quot;number&quot;&gt;1.20&lt;/span&gt; animations:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//在实际情况中出现相关动画效果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  view.center = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果要测试这个方式流程来验证我们在 animationWithDuration 的 block 之外设置 View 相关属性不产生动画，在 block 里面设置 View 的属性产生相关动画。&lt;/p&gt;
&lt;p&gt;可以采用下面方式来进行实现：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, [view.layer.delegate actionForLayer:view.layer forKey:&lt;span class=&quot;string&quot;&gt;@&quot;position&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; animationWithDuration:&lt;span class=&quot;number&quot;&gt;1.20&lt;/span&gt; animations:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, [view.layer.delegate actionForLayer:view.layer forKey:&lt;span class=&quot;string&quot;&gt;@&quot;position&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里可以通过打印的数据结果证明当前在 Block 之外实现回调当前返回的 Action 为 nil，在 Block 里面调用上面的方法就会返回当前设置位置的实际回调。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所谓的隐私动画就是我们在实际 UI 界面无法看到效果的动画效果，隐式就是看不到任何动画效果。在返回 NSNull 就不会产生任何的动画。在返回当前 View 实例类型 Action 就会生成动画效果。&lt;br&gt;或许就是我们在描述中展示的，View 在一个位置进行初始化显示。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当前在展示中我们如果采用 &lt;code&gt;animationWithDuration:forKey:&lt;/code&gt; 就是产生动画效果。&lt;/p&gt;
&lt;p&gt;解决在实现中第 1 个问题：&lt;/p&gt;
&lt;p&gt;ModelLayer 和 PresentationLayer 在实现过程中上面我们知道在实现过程中采用  &lt;code&gt;animationWithDuration:forKey:&lt;/code&gt;  采用 UIView 来实现这种操作，在动画实现过程中也可以采用 Layer 层 CAAnimation 动画操作。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CaBasicAnimation *animation = [CaBaseicAnimation animation];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animation.keyPath = &lt;span class=&quot;string&quot;&gt;@&quot;position&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animation.duration = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animation.formValue = [&lt;span class=&quot;built_in&quot;&gt;NSValue&lt;/span&gt; valueWithCGPoint:&lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animation.toValue = [&lt;span class=&quot;built_in&quot;&gt;NSValue&lt;/span&gt; valueWithCGPoint:&lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[view.layer addAnimation:animation forKey:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在上面展示效果中我们可以看到在 View 的实例变量 Layer 层在进行动画的过程中，ModelLayer 是来保存当前 View 的实例 Layer 的初始值 Frame 值。 PresentationLayer 主要的作用是在 CAAnimation 运动过程中运动指示标识。&lt;/p&gt;
&lt;h3 id=&quot;参考资料：&quot;&gt;&lt;a href=&quot;#参考资料：&quot; class=&quot;headerlink&quot; title=&quot;参考资料：&quot;&gt;&lt;/a&gt;参考资料：&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/CoreAnimation_guide/Introduction/Introduction.htmls&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Core Animation Programming Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;苹果的官方视频：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2012/217/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Layer-Backed Views: AppKit + Core Animation&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2014/419/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Advanced Graphics and Animations for iOS Apps&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2012/506/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Optimizing 2D Graphics and Animation Performance&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2015/803/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Designing with Animation&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者： JackJin Bai&lt;br&gt;第一次修改时间： 2019/1/6 20:37: 26&lt;br&gt;写于：广州市天河公园家里 &lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Core-Animation-实现探索&quot;&gt;&lt;a href=&quot;#Core-Animation-实现探索&quot; class=&quot;headerlink&quot; title=&quot;Core Animation 实现探索&quot;&gt;&lt;/a&gt;Core Animation 实现探索&lt;/h1&gt;&lt;p&gt;看资料需要了解的内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、ModelLayer 和 PresentationLayer 分别是指什么？&lt;br&gt;2、隐式动画和显示动画实现原理是什么？&lt;br&gt;3、UIView 和 CALayer 两者之间如何实现事件传递和交互？&lt;br&gt;4、贝塞尔曲线在是如何实现绘制？  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决在实现中第 3 个问题：&lt;br&gt;UIView 和 CALayer 在具体实现中相关属性在初始化设置时设置 View 的 Frame、 Center 和 Size， OS 系统都会间接的设置 CALayer 中 position、bounds、position 和 bounds 对应的几个属性去做设置当前 View 显示具体详细内容和属性。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS UI 界面" scheme="http://yoursite.com/tags/iOS-UI-%E7%95%8C%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>iOS UI 优化 - 总纲</title>
    <link href="http://yoursite.com/2019/01/06/iOS%20UI%20%E4%BC%98%E5%8C%96%20%E4%B8%80/"/>
    <id>http://yoursite.com/2019/01/06/iOS UI 优化 一/</id>
    <published>2019-01-06T12:23:44.435Z</published>
    <updated>2019-01-06T12:43:21.496Z</updated>
    
    <content type="html">&lt;h1 id=&quot;iOS-UI-优化-总纲&quot;&gt;&lt;a href=&quot;#iOS-UI-优化-总纲&quot; class=&quot;headerlink&quot; title=&quot;iOS UI 优化 - 总纲&quot;&gt;&lt;/a&gt;iOS UI 优化 - 总纲&lt;/h1&gt;&lt;p&gt;2019 年开年第一篇博文，今天先起个头。&lt;/p&gt;
&lt;p&gt;今年第一个主题是关于 UI 界面实现原理，UI 目前实现主要方式在其实现上相关缺陷。开始从 &lt;code&gt;Core Animation&lt;/code&gt; 框架总结以及实现方式上讲解，然后从 &lt;code&gt;Core Graphics&lt;/code&gt; 和 &lt;code&gt;Core Iamge&lt;/code&gt; 在绘制层面三者如何把 &lt;code&gt;UIKit&lt;/code&gt; 控件如何实现绘制交由 &lt;code&gt;OpenGL ES&lt;/code&gt; 来实现每一帧绘制。&lt;/p&gt;
&lt;p&gt;最后分析 &lt;code&gt;FB&lt;/code&gt; 开源的框架 &lt;code&gt;ASDK&lt;/code&gt; 和 &lt;code&gt;YYKit&lt;/code&gt; 实现 &lt;code&gt;UI&lt;/code&gt; 优化方式，对 &lt;code&gt;Core Text&lt;/code&gt; 进行最后封装来结束 &lt;code&gt;UI&lt;/code&gt; 专题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;同时也会对本文进行在每一博文更新！！！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;作者： JackJin Bai&lt;br&gt;第一次修改时间： 2019/1/6 20:37: 26&lt;br&gt;写于：广州市天河公园家里  &lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;iOS-UI-优化-总纲&quot;&gt;&lt;a href=&quot;#iOS-UI-优化-总纲&quot; class=&quot;headerlink&quot; title=&quot;iOS UI 优化 - 总纲&quot;&gt;&lt;/a&gt;iOS UI 优化 - 总纲&lt;/h1&gt;&lt;p&gt;2019 年开年第一篇博文，今天先起个头。&lt;/p&gt;
&lt;p&gt;今年第一个主题是关于 UI 界面实现原理，UI 目前实现主要方式在其实现上相关缺陷。开始从 &lt;code&gt;Core Animation&lt;/code&gt; 框架总结以及实现方式上讲解，然后从 &lt;code&gt;Core Graphics&lt;/code&gt; 和 &lt;code&gt;Core Iamge&lt;/code&gt; 在绘制层面三者如何把 &lt;code&gt;UIKit&lt;/code&gt; 控件如何实现绘制交由 &lt;code&gt;OpenGL ES&lt;/code&gt; 来实现每一帧绘制。&lt;/p&gt;
&lt;p&gt;最后分析 &lt;code&gt;FB&lt;/code&gt; 开源的框架 &lt;code&gt;ASDK&lt;/code&gt; 和 &lt;code&gt;YYKit&lt;/code&gt; 实现 &lt;code&gt;UI&lt;/code&gt; 优化方式，对 &lt;code&gt;Core Text&lt;/code&gt; 进行最后封装来结束 &lt;code&gt;UI&lt;/code&gt; 专题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;同时也会对本文进行在每一博文更新！！！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS UI 界面" scheme="http://yoursite.com/tags/iOS-UI-%E7%95%8C%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>iOS 内购注意事项</title>
    <link href="http://yoursite.com/2018/06/29/iOS%20%E5%86%85%E8%B4%AD%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://yoursite.com/2018/06/29/iOS 内购注意事项/</id>
    <published>2018-06-29T03:42:23.494Z</published>
    <updated>2018-06-29T03:45:27.191Z</updated>
    
    <content type="html">&lt;h1 id=&quot;iOS-内购注意事项&quot;&gt;&lt;a href=&quot;#iOS-内购注意事项&quot; class=&quot;headerlink&quot; title=&quot;iOS 内购注意事项&quot;&gt;&lt;/a&gt;iOS 内购注意事项&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;What do users obtain when purchasing the auto-renewable subscription?&lt;/li&gt;
&lt;li&gt;Is the content obtained through the auto-renewable In-App Purchase static or dynamically updated?&lt;/li&gt;
&lt;li&gt;If updated, how often is the content modified?&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;iOS-内购注意事项&quot;&gt;&lt;a href=&quot;#iOS-内购注意事项&quot; class=&quot;headerlink&quot; title=&quot;iOS 内购注意事项&quot;&gt;&lt;/a&gt;iOS 内购注意事项&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;What do users obtain when purcha
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS 内购" scheme="http://yoursite.com/tags/iOS-%E5%86%85%E8%B4%AD/"/>
    
  </entry>
  
  <entry>
    <title>StoreKit 框架使用和分析</title>
    <link href="http://yoursite.com/2018/06/25/StoreKit%20%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E5%92%8C%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2018/06/25/StoreKit 框架使用和分析/</id>
    <published>2018-06-25T06:46:08.670Z</published>
    <updated>2018-06-29T03:41:26.136Z</updated>
    
    <content type="html">&lt;p&gt;最近在公司做关于 &lt;code&gt;iOS&lt;/code&gt; 内购方面相关内容，所以本着如果使用到那块具体内容就要实现完全了解心态把 &lt;code&gt;StoreKit&lt;/code&gt; 框架相关接口了解和实现具体封装。&lt;/p&gt;
&lt;h2 id=&quot;StoreKit-接口分析&quot;&gt;&lt;a href=&quot;#StoreKit-接口分析&quot; class=&quot;headerlink&quot; title=&quot;StoreKit 接口分析&quot;&gt;&lt;/a&gt;&lt;code&gt;StoreKit&lt;/code&gt; 接口分析&lt;/h2&gt;&lt;h3 id=&quot;SKAdNetwork&quot;&gt;&lt;a href=&quot;#SKAdNetwork&quot; class=&quot;headerlink&quot; title=&quot;SKAdNetwork&quot;&gt;&lt;/a&gt;&lt;code&gt;SKAdNetwork&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;翻译不是非常准确，目前是定义为在广告展示和点击时来做为依据标准。&lt;/p&gt;
&lt;h3 id=&quot;SKCloudServiceController&quot;&gt;&lt;a href=&quot;#SKCloudServiceController&quot; class=&quot;headerlink&quot; title=&quot;SKCloudServiceController&quot;&gt;&lt;/a&gt;&lt;code&gt;SKCloudServiceController&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;来获取用户音乐文件管理的相关权限。&lt;/p&gt;
&lt;h3 id=&quot;SKCloudServiceSetupViewController&quot;&gt;&lt;a href=&quot;#SKCloudServiceSetupViewController&quot; class=&quot;headerlink&quot; title=&quot;SKCloudServiceSetupViewController&quot;&gt;&lt;/a&gt;&lt;code&gt;SKCloudServiceSetupViewController&lt;/code&gt;&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在公司做关于 &lt;code&gt;iOS&lt;/code&gt; 内购方面相关内容，所以本着如果使用到那块具体内容就要实现完全了解心态把 &lt;code&gt;StoreKit&lt;/code&gt; 框架相关接口了解和实现具体封装。&lt;/p&gt;
&lt;h2 id=&quot;StoreKit-接口分析&quot;&gt;&lt;a href=&quot;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS 内购" scheme="http://yoursite.com/tags/iOS-%E5%86%85%E8%B4%AD/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 学习总结</title>
    <link href="http://yoursite.com/2018/03/28/JavaScript%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2018/03/28/JavaScript学习总结/</id>
    <published>2018-03-27T16:14:28.000Z</published>
    <updated>2018-03-28T01:56:37.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;学习资源地址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;学习资源地址&lt;/a&gt;&lt;/
    
    </summary>
    
      <category term="前端开发" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>iOS 11 新特性</title>
    <link href="http://yoursite.com/2017/12/21/iOS%2011%20%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>http://yoursite.com/2017/12/21/iOS 11 新特性/</id>
    <published>2017-12-20T16:04:50.000Z</published>
    <updated>2018-01-15T08:58:27.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;iOS 11&lt;/code&gt; 的最新技术发布在 &lt;strong&gt;6月6号&lt;/strong&gt;，由于小编在工作上的原因只能在今天把 &lt;code&gt;iOS 11&lt;/code&gt;的相关信息整理出来对后面的开发便利以及在实际开发过程中可以更好的避免踩过的坑。&lt;/p&gt;
&lt;h1 id=&quot;新增的框架&quot;&gt;&lt;a href=&quot;#新增的框架&quot; class=&quot;headerlink&quot; title=&quot;新增的框架&quot;&gt;&lt;/a&gt;新增的框架&lt;/h1&gt;&lt;p&gt;对于上一个版本总体来说新增加两个主要大的框架 &lt;code&gt;Core ML&lt;/code&gt; 和 &lt;code&gt;ARKit&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Core-ML-框架&quot;&gt;&lt;a href=&quot;#Core-ML-框架&quot; class=&quot;headerlink&quot; title=&quot;Core ML 框架&quot;&gt;&lt;/a&gt;&lt;code&gt;Core ML&lt;/code&gt; 框架&lt;/h2&gt;&lt;p&gt;只从去年的时候 &lt;code&gt;AlphaGo&lt;/code&gt; 打败李世石，今年的升级版的 &lt;code&gt;AlphaGo&lt;/code&gt; 也战胜中国的柯洁，到最近前端时间升级版的 &lt;code&gt;AlphaZero&lt;/code&gt; 也战胜了前代的 &lt;code&gt;AlphaGo&lt;/code&gt;。感觉后面 &lt;code&gt;AI&lt;/code&gt; 只能是最近最火的科技，而且目前也可以看出来后面科技更新替代可能是对&lt;strong&gt;依据重复性训练获取技能重复单样工作的人员&lt;/strong&gt;优化（这是后话）。&lt;/p&gt;
&lt;p&gt;不过 &lt;code&gt;Core ML&lt;/code&gt; 是 &lt;code&gt;Apple&lt;/code&gt; 提供的已经训练好的模型，也就是说是根据数据进行相关训练好可以直接使用的一个数据匣子。小编讲的直白一点，就是你往匣子中输入数据然后获取相应的结果数据。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Core ML&lt;/code&gt; 背后是对 &lt;code&gt;iOS&lt;/code&gt; 的视觉识别 &lt;code&gt;Vision&lt;/code&gt; 框架和 &lt;code&gt;Foundation&lt;/code&gt; 中语义相关分析的 &lt;code&gt;API&lt;/code&gt;。一般移动端的开发者可以使用相关的接口来获取相关人脸识别或者是文字的识别结果。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;ARKit-框架&quot;&gt;&lt;a href=&quot;#ARKit-框架&quot; class=&quot;headerlink&quot; title=&quot;ARKit 框架&quot;&gt;&lt;/a&gt;&lt;code&gt;ARKit&lt;/code&gt; 框架&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/arkit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;ARKit&lt;/code&gt;&lt;/a&gt; 在小编的上一家公司是做产品公司，对一些新技术都有自己的积累。对 &lt;code&gt;ARKit&lt;/code&gt; 在 &lt;code&gt;Apple&lt;/code&gt; 上发布感觉还是听好玩的。因为在刚刚毕业时候和好室友一起做视频播放器，由于播放内容来源的版权问题被 &lt;code&gt;App Stroe&lt;/code&gt; 拒接上架，接着我们开始做 &lt;code&gt;AR&lt;/code&gt; 相关 &lt;code&gt;App&lt;/code&gt; 因为技术原因在模型上搁置。就这一样大半年过去（囧）。&lt;br&gt;不过苹果正式发布之后，反应平平，最后沦落为家居相关 &lt;code&gt;APP&lt;/code&gt;。&lt;br&gt;在 &lt;code&gt;ARKit&lt;/code&gt; 中使用的 &lt;code&gt;View&lt;/code&gt; 均是作为 &lt;code&gt;SceneKit&lt;/code&gt; 相关的延伸，在开发过程中我们见到的真实的世界都是归于系统来进行相关处理。作为开发者只需要界面相框中事物放到合适的位置，并且让他们进行相关的互动即可。&lt;/p&gt;
&lt;h1 id=&quot;新增的功能&quot;&gt;&lt;a href=&quot;#新增的功能&quot; class=&quot;headerlink&quot; title=&quot;新增的功能&quot;&gt;&lt;/a&gt;新增的功能&lt;/h1&gt;&lt;p&gt;&lt;code&gt;iOS 11&lt;/code&gt;除在框架外有所更新相关的内容，在功能的方面也做了些相关升级和更改。比如在网络方面、&lt;code&gt;Xcode 9&lt;/code&gt;、32 位处理器支持和 &lt;code&gt;WebKit&lt;/code&gt; 的特性等。&lt;/p&gt;
&lt;h2 id=&quot;网络部分&quot;&gt;&lt;a href=&quot;#网络部分&quot; class=&quot;headerlink&quot; title=&quot;网络部分&quot;&gt;&lt;/a&gt;网络部分&lt;/h2&gt;&lt;h3 id=&quot;ECN-显示拥堵通知&quot;&gt;&lt;a href=&quot;#ECN-显示拥堵通知&quot; class=&quot;headerlink&quot; title=&quot;ECN (显示拥堵通知)&quot;&gt;&lt;/a&gt;ECN (显示拥堵通知)&lt;/h3&gt;&lt;p&gt;网络拥堵发生时因为发送方无法及时知晓网络情况，在发现丢包时就会不断的重新重发，间接导致网络会更加拥堵使网络情况更加糟糕。目前 &lt;code&gt;ECN&lt;/code&gt; 的出现就解决此问题， &lt;code&gt;ECN&lt;/code&gt; 作为 &lt;code&gt;TCP&lt;/code&gt; 和 &lt;code&gt;IP&lt;/code&gt; 的协议扩展，存在于 &lt;code&gt;IP&lt;/code&gt; 的头文件中 &lt;code&gt;1 bit&lt;/code&gt; 的拥塞值的状态值，是由接收方回复给发送方，发送方接受到此消息的请求后停止继续发送数据包，直到拥塞的状态停止才开始继续发送数据。&lt;/p&gt;
&lt;p&gt;不过是实际情况中使用时 &lt;code&gt;ECN&lt;/code&gt; 需要结合客户端、服务端和网络端三个方面的支持，目前 &lt;code&gt;ECN&lt;/code&gt; 属于 &lt;code&gt;Linux&lt;/code&gt; 内核，只需要升级 &lt;code&gt;Linux&lt;/code&gt; 就可以获取支持，&lt;code&gt;Apple&lt;/code&gt; 给出了 &lt;code&gt;Server&lt;/code&gt; 对 &lt;code&gt;ECN&lt;/code&gt; 的支持率：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-f28899d2fc311282.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2018-01-15 11.58.23.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;客户端方面， &lt;code&gt;iOS 10.3&lt;/code&gt; 开始，有过半的通过 &lt;code&gt;wifi&lt;/code&gt; 和少量通过移动网络进行的 &lt;code&gt;TCP&lt;/code&gt; 连接已经打开了 &lt;code&gt;ECN&lt;/code&gt;，没有收到相关的问题报告。&lt;/p&gt;
&lt;p&gt;下面是搜集的一些国家网络拥堵的数据：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-b4f2f7bde92d7e13.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2018-01-15 12.02.25.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;客户端从 &lt;code&gt;iOS 11&lt;/code&gt; 开始，所有 &lt;code&gt;TCP&lt;/code&gt; 请求都会支持 &lt;code&gt;EC&lt;/code&gt;N（全部 &lt;code&gt;Wifi&lt;/code&gt; 和部分白名单移动运营商）；服务端有 &lt;code&gt;74%&lt;/code&gt; 的网站支持了 &lt;code&gt;ECN&lt;/code&gt;，也会有越来越多的网络服务商开始支持 &lt;code&gt;ECN&lt;/code&gt; 来进一步提升用户体验；（服务商只需要在你的网络接入点支持 &lt;code&gt;ECN&lt;/code&gt; 即可）。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;ECN&lt;/code&gt; 实现标记连接拥塞，可以更加高效：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减少重发次数；&lt;/li&gt;
&lt;li&gt;降低延迟；&lt;/li&gt;
&lt;li&gt;提升用户体验。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在使用 &lt;code&gt;ECN&lt;/code&gt; 的同时，需要在结合使用 &lt;a href=&quot;https://wiki.openwrt.org/doc/uci/sqm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;SQM&lt;/code&gt;(Smart Queue Management)&lt;/a&gt; 来实现数据缓存，这样可以实现提前告知发送者当前的网络zhekuai，可以最大程度上实现避免拥塞出现。&lt;/p&gt;
&lt;h2 id=&quot;WKWebView-Cookie-管理&quot;&gt;&lt;a href=&quot;#WKWebView-Cookie-管理&quot; class=&quot;headerlink&quot; title=&quot;WKWebView Cookie 管理&quot;&gt;&lt;/a&gt;&lt;code&gt;WKWebView Cookie&lt;/code&gt; 管理&lt;/h2&gt;&lt;h3 id=&quot;URLSession-Adaptable-Connectivity-API&quot;&gt;&lt;a href=&quot;#URLSession-Adaptable-Connectivity-API&quot; class=&quot;headerlink&quot; title=&quot;URLSession Adaptable Connectivity API&quot;&gt;&lt;/a&gt;&lt;code&gt;URLSession Adaptable Connectivity API&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;现在可以通过 &lt;code&gt;urlSession(_:taskIsWaitingForConnectivity:)&lt;/code&gt; 让请求等待网络正常后再自动尝试。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79gy1fjoxl26swrj315o0n6q3o.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;URLSessionTask-Scheduling-API&quot;&gt;&lt;a href=&quot;#URLSessionTask-Scheduling-API&quot; class=&quot;headerlink&quot; title=&quot;URLSessionTask Scheduling API&quot;&gt;&lt;/a&gt;&lt;code&gt;URLSessionTask Scheduling API&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;通过 &lt;code&gt;URLSessionTask Scheduling API&lt;/code&gt; 可以在 &lt;code&gt;App&lt;/code&gt; 没有运行的时候下载内容，而手机也会结合实际电量，使用状态去决定是否执行。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79gy1fjoxl1y1z1j315o0n9wfy.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;iOS-11开发新特性之-WebKit-支持-WebRTC&quot;&gt;&lt;a href=&quot;#iOS-11开发新特性之-WebKit-支持-WebRTC&quot; class=&quot;headerlink&quot; title=&quot;iOS 11开发新特性之 WebKit 支持 WebRTC&quot;&gt;&lt;/a&gt;&lt;code&gt;iOS 11&lt;/code&gt;开发新特性之 &lt;code&gt;WebKit&lt;/code&gt; 支持 &lt;code&gt;WebRTC&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;iOS 11&lt;/code&gt; 的 &lt;code&gt;WebKit&lt;/code&gt; 中支持了 &lt;code&gt;WebRTC&lt;/code&gt; 相关的接口：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79gy1fjp0ig1bgij31800pg7bu.jpg&quot; alt=&quot;WebRTC&quot;&gt; &lt;/p&gt;
&lt;p&gt;目前 &lt;code&gt;WKWebView&lt;/code&gt; 还没有支持 &lt;code&gt;getUserMedia&lt;/code&gt; 无法获取 &lt;code&gt;MediaStream&lt;/code&gt;，无法传输音视频流，所以 &lt;code&gt;App&lt;/code&gt; 嵌套的 &lt;code&gt;WebView&lt;/code&gt; 还无法使用 &lt;code&gt;WebRTC&lt;/code&gt;，必须得用 &lt;code&gt;Safrai App&lt;/code&gt; 才可以。&lt;/p&gt;
&lt;p&gt;一旦 &lt;code&gt;WKWebView&lt;/code&gt; 支持 &lt;code&gt;MediaStream&lt;/code&gt; (&lt;code&gt;getUserMedia&lt;/code&gt;)，之后朋友圈里面的 &lt;code&gt;Web&lt;/code&gt; 会有更多可能性，比如直接音视频的合成，还有实时视频通信、&lt;code&gt;WebAR&lt;/code&gt; 的东西进行传播。借助小程序的入口，想象空间还是比较多的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考资料：&lt;/strong&gt;   &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ChenYilong/WebRTC/tree/master/WebRTC&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《WebRTC在iOS端的实现》&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://geek.csdn.net/news/detail/201894?spm=5176.100239.blogcont221561.55.4cb1f06dZvDWv3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《苹果终于入伙 WebRTC，新一代移动 Web 应用爆发路上还有哪些坑？》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;iOS-11-开发新特性-Xcode9-新特性&quot;&gt;&lt;a href=&quot;#iOS-11-开发新特性-Xcode9-新特性&quot; class=&quot;headerlink&quot; title=&quot;iOS 11 开发新特性 Xcode9 新特性&quot;&gt;&lt;/a&gt;&lt;code&gt;iOS 11&lt;/code&gt; 开发新特性 &lt;code&gt;Xcode9&lt;/code&gt; 新特性&lt;/h2&gt;&lt;h3 id=&quot;添加-GitHub-功能&quot;&gt;&lt;a href=&quot;#添加-GitHub-功能&quot; class=&quot;headerlink&quot; title=&quot;添加 GitHub 功能&quot;&gt;&lt;/a&gt;添加 &lt;code&gt;GitHub&lt;/code&gt; 功能&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;Xcode 9&lt;/code&gt; 引入了 &lt;code&gt;Github&lt;/code&gt; 源代码的管理，可以展示在开发过程中 &lt;code&gt;Branch&lt;/code&gt; 和 &lt;code&gt;Tag&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-86d87d764dc4bef1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2018-01-15 15.06.20.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;双击可以看出 &lt;code&gt;Commit&lt;/code&gt; 的具体内容：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-585e13685c4e651e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2018-01-15 15.12.03.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以直接查看本次具体提交的内容：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-00bf3028c1d92fc5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2018-01-15 15.12.49.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建新的颜色-Asset-Catalog&quot;&gt;&lt;a href=&quot;#创建新的颜色-Asset-Catalog&quot; class=&quot;headerlink&quot; title=&quot;创建新的颜色 Asset Catalog&quot;&gt;&lt;/a&gt;创建新的颜色 &lt;code&gt;Asset Catalog&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;可以 zai &lt;code&gt;Asset Catalog&lt;/code&gt; 中使用颜色来创建图片，然后根据颜色填充来实现图片展示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/006tKfTcgy1fjolad575yj30z50fe74h.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;iOS-开发新特性-Tips&quot;&gt;&lt;a href=&quot;#iOS-开发新特性-Tips&quot; class=&quot;headerlink&quot; title=&quot;iOS 开发新特性 Tips&quot;&gt;&lt;/a&gt;&lt;code&gt;iOS 开发新特性 Tips&lt;/code&gt;&lt;/h2&gt;&lt;h3 id=&quot;DeviceCheck&quot;&gt;&lt;a href=&quot;#DeviceCheck&quot; class=&quot;headerlink&quot; title=&quot;DeviceCheck&quot;&gt;&lt;/a&gt;&lt;code&gt;DeviceCheck&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;DeviceCheck&lt;/code&gt; 允许开发者可以通过公司自己的服务器和 &lt;code&gt;Apple&lt;/code&gt; 服务器通讯，并为两个设备设置两个 &lt;code&gt;Bit&lt;/code&gt; 数据。&lt;/p&gt;
&lt;p&gt;在设备上使用 &lt;code&gt;DeviceCheck API&lt;/code&gt; 来生成 &lt;code&gt;token&lt;/code&gt;，然后把此 &lt;code&gt;token&lt;/code&gt; 发送给公司的服务器，在由公司的服务器发送到 &lt;code&gt;Apple&lt;/code&gt; 的 &lt;code&gt;API&lt;/code&gt; 进行通讯，可以来做更新或者是查询该设备的值。根据这两个字节的数据可以用来追踪用户。&lt;/p&gt;
&lt;p&gt;根据此功能，可以用在发欺诈的领域：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 7 天；&lt;/li&gt;
&lt;li&gt;使用者封号后防止重新注册账号接单；&lt;/li&gt;
&lt;li&gt;手机 &lt;code&gt;App&lt;/code&gt; 用户是否是第一次领取红包；&lt;/li&gt;
&lt;li&gt;防止用户打开多个 &lt;code&gt;App&lt;/code&gt;，例如：在同一款手机上开 5 个 App;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在 &lt;code&gt;iOS 10.3&lt;/code&gt; 正式版本之后，&lt;code&gt;App&lt;/code&gt; 删除后 &lt;code&gt;keychain&lt;/code&gt; 不会被清理。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;iOS-11-开发新特性停止支持-32-位-App&quot;&gt;&lt;a href=&quot;#iOS-11-开发新特性停止支持-32-位-App&quot; class=&quot;headerlink&quot; title=&quot;iOS 11 开发新特性停止支持 32 位 App&quot;&gt;&lt;/a&gt;&lt;code&gt;iOS 11&lt;/code&gt; 开发新特性停止支持 32 位 &lt;code&gt;App&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;iOS11 放弃支持 iPhone5、iPhone5c、iPad4 ，标志着在硬件层面，32位设备退出了历史舞台，iOS 系统不再兼容32位设备。&lt;/p&gt;
&lt;p&gt;同时 iOS11 也将不再支持 32位 APP 运行, 32位 APP 在 APPStore 无法被搜到，已经下载的 APP 无法在“已购”项目中安装。&lt;/p&gt;
&lt;p&gt;iOS 11 只兼容 64-bit 设备，也就是搭载 A7 以上处理器的设备。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;iOS 11&lt;/code&gt; 的最新技术发布在 &lt;strong&gt;6月6号&lt;/strong&gt;，由于小编在工作上的原因只能在今天把 &lt;code&gt;iOS 11&lt;/code&gt;的相关信息整理出来对后面的开发便利以及在实际开发过程中可以更好的避免踩过的坑。&lt;/p&gt;
&lt;h1 id=&quot;新增的框架&quot;&gt;&lt;a href=&quot;#新增的框架&quot; class=&quot;headerlink&quot; title=&quot;新增的框架&quot;&gt;&lt;/a&gt;新增的框架&lt;/h1&gt;&lt;p&gt;对于上一个版本总体来说新增加两个主要大的框架 &lt;code&gt;Core ML&lt;/code&gt; 和 &lt;code&gt;ARKit&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Core-ML-框架&quot;&gt;&lt;a href=&quot;#Core-ML-框架&quot; class=&quot;headerlink&quot; title=&quot;Core ML 框架&quot;&gt;&lt;/a&gt;&lt;code&gt;Core ML&lt;/code&gt; 框架&lt;/h2&gt;&lt;p&gt;只从去年的时候 &lt;code&gt;AlphaGo&lt;/code&gt; 打败李世石，今年的升级版的 &lt;code&gt;AlphaGo&lt;/code&gt; 也战胜中国的柯洁，到最近前端时间升级版的 &lt;code&gt;AlphaZero&lt;/code&gt; 也战胜了前代的 &lt;code&gt;AlphaGo&lt;/code&gt;。感觉后面 &lt;code&gt;AI&lt;/code&gt; 只能是最近最火的科技，而且目前也可以看出来后面科技更新替代可能是对&lt;strong&gt;依据重复性训练获取技能重复单样工作的人员&lt;/strong&gt;优化（这是后话）。&lt;/p&gt;
&lt;p&gt;不过 &lt;code&gt;Core ML&lt;/code&gt; 是 &lt;code&gt;Apple&lt;/code&gt; 提供的已经训练好的模型，也就是说是根据数据进行相关训练好可以直接使用的一个数据匣子。小编讲的直白一点，就是你往匣子中输入数据然后获取相应的结果数据。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Core ML&lt;/code&gt; 背后是对 &lt;code&gt;iOS&lt;/code&gt; 的视觉识别 &lt;code&gt;Vision&lt;/code&gt; 框架和 &lt;code&gt;Foundation&lt;/code&gt; 中语义相关分析的 &lt;code&gt;API&lt;/code&gt;。一般移动端的开发者可以使用相关的接口来获取相关人脸识别或者是文字的识别结果。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>WCDB</title>
    <link href="http://yoursite.com/2017/11/20/WCDB%20%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97%E7%BB%8F/"/>
    <id>http://yoursite.com/2017/11/20/WCDB 学习使用心得经/</id>
    <published>2017-11-20T09:11:10.000Z</published>
    <updated>2017-11-20T10:17:44.000Z</updated>
    
    <content type="html">&lt;p&gt;之所以在关注到 &lt;code&gt;WCDB&lt;/code&gt; 是因为在新的一家公司重构数据库来解决胶水代码问题，换而言之在使用 &lt;code&gt;SQLite&lt;/code&gt; 数据中尽量减少 &lt;code&gt;SQL&lt;/code&gt; 中增、删、改和查语句的使用。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;WCDB&lt;/code&gt; 是腾讯微信开源在 2017/06/09 号开源的一种变种数据库，本质也是基于 &lt;code&gt;SQLite&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&quot;WCDB-简介&quot;&gt;&lt;a href=&quot;#WCDB-简介&quot; class=&quot;headerlink&quot; title=&quot;WCDB 简介&quot;&gt;&lt;/a&gt;&lt;code&gt;WCDB&lt;/code&gt; 简介&lt;/h2&gt;&lt;p&gt;WCDB 本质上对 &lt;code&gt;SQLite&lt;/code&gt; 数据库 OC++ 的组件，采用的方式是：&lt;br&gt;（1）使用 &lt;code&gt;ORM&lt;/code&gt; 映射来完成自定义数据表和相关的索引，这里就解决公司胶水代码问题&lt;br&gt;（2）使用 &lt;code&gt;WING&lt;/code&gt; 来解决 &lt;code&gt;SQL&lt;/code&gt; 查询过程中经常使用查询过程中字符串的拼装问题&lt;br&gt;（3）多线程实现读取数据时的并发操作，在修改或者插入数据时执行串行操作&lt;br&gt;（4）在数据库发生顺怀时实现修复功能&lt;br&gt;（5）可以实现在执行 &lt;code&gt;SQL&lt;/code&gt; 消耗的时间，可以帮助性能的监控&lt;br&gt;（6）采用防注入的 &lt;code&gt;SQL&lt;/code&gt; 语句，避免恶意输入损坏数据。&lt;/p&gt;
&lt;p&gt;下面简单的介绍上面在 &lt;code&gt;WCDB&lt;/code&gt; 具体实现&lt;/p&gt;
&lt;h3 id=&quot;ORM-实现原理&quot;&gt;&lt;a href=&quot;#ORM-实现原理&quot; class=&quot;headerlink&quot; title=&quot;ORM 实现原理&quot;&gt;&lt;/a&gt;&lt;code&gt;ORM&lt;/code&gt; 实现原理&lt;/h3&gt;&lt;p&gt;于数据库表和索引采用的&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之所以在关注到 &lt;code&gt;WCDB&lt;/code&gt; 是因为在新的一家公司重构数据库来解决胶水代码问题，换而言之在使用 &lt;code&gt;SQLite&lt;/code&gt; 数据中尽量减少 &lt;code&gt;SQL&lt;/code&gt; 中增、删、改和查语句的使用。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;WCDB&lt;
    
    </summary>
    
      <category term="WCDB" scheme="http://yoursite.com/categories/WCDB/"/>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>SQLite 学习-多表查询</title>
    <link href="http://yoursite.com/2017/11/18/SQLite%20%E5%AD%A6%E4%B9%A0-%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2&%E8%BF%90%E7%AE%97&%E8%A1%A8%E8%BE%BE/"/>
    <id>http://yoursite.com/2017/11/18/SQLite 学习-多表查询&运算&表达/</id>
    <published>2017-11-18T15:57:40.000Z</published>
    <updated>2017-11-22T16:15:24.000Z</updated>
    
    <content type="html">&lt;p&gt;前篇博文小编写了基本的 &lt;code&gt;SQLite&lt;/code&gt; 操作方式，如果只是对数据库采取基本的操作看完小编第一篇博文就可以。后面小编将会讲述一些数据的相对来说比较复杂的操作方式。&lt;/p&gt;
&lt;p&gt;本篇将会列出下面的数据库相关知识：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多表查询&lt;/li&gt;
&lt;li&gt;运算符&lt;/li&gt;
&lt;li&gt;表达式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;多表查询&quot;&gt;&lt;a href=&quot;#多表查询&quot; class=&quot;headerlink&quot; title=&quot;多表查询&quot;&gt;&lt;/a&gt;多表查询&lt;/h2&gt;&lt;p&gt;接着上篇文章小编把数据库中查询使用的多表查询给大家做讲解。&lt;/p&gt;
&lt;p&gt;在多表查询过程中需要用到的关键词是: &lt;code&gt;join&lt;/code&gt;，而且在多表连接查询过程中有三种情况。&lt;/p&gt;
&lt;p&gt;分别是：交叉连接、内连接和外连接。&lt;/p&gt;
&lt;p&gt;一下操作均以 &lt;code&gt;Employee&lt;/code&gt; 和 &lt;code&gt;Programmer&lt;/code&gt; 两个表格为基础来实现使用用例。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;内容是乱取的，上次取名可能气到在意的人，后面名字均是乱取！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-2dfc0cb76093a392.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-20 01.14.27.png&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;交叉连接-CROSS-JION&quot;&gt;&lt;a href=&quot;#交叉连接-CROSS-JION&quot; class=&quot;headerlink&quot; title=&quot;交叉连接(CROSS JION)&quot;&gt;&lt;/a&gt;交叉连接(CROSS JION)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;（1）&lt;/strong&gt;交叉连接特点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在实现交叉连接过程中数据库中每一行和每一行会做对比，生成一张查找出来内容很大的数据。例如：如果一个表格有 a 行，另一个表格有 b 行，生成的表格大小为 &lt;strong&gt;a * b&lt;/strong&gt; 行内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;（2）&lt;/strong&gt;使用格式：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//主要实现 SELECT 具体行 FROM 数据库1 CROSS JION 数据库2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT column_one, column_two, ... FROM tableName_one CROSS JION tableName_two;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（3）&lt;/strong&gt;操作实例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-d2f9875f3f82c169.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-19 23.43.21.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;内连接-INNER-JION&quot;&gt;&lt;a href=&quot;#内连接-INNER-JION&quot; class=&quot;headerlink&quot; title=&quot;内连接(INNER JION)&quot;&gt;&lt;/a&gt;内连接(INNER JION)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;（1）&lt;/strong&gt;内连接特点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在内连接中可以实现根据相关的条件实现表中符合条件的数据两行进行匹配形成一个结果行。显示的数据内容没有交叉连接大。&lt;strong&gt;也是数据库多表查询的默认实现方式。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;（2）&lt;/strong&gt;使用格式：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.1&lt;/strong&gt; 连表查询过程三种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;INNER JION : 默认链接方式， &lt;code&gt;INNER&lt;/code&gt; 可以省略&lt;/li&gt;
&lt;li&gt;JION … USING : 解决较长条件，保持节俭来声明内连接方式&lt;/li&gt;
&lt;li&gt;NATURAL JOIN : 类似于 USING 方法，但是会自动检测一列值是否相等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2.2&lt;/strong&gt; 连表查询标准格式&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//采用 INNER JION 方式查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//SELECT 具体行 FROM 数据库1 INNER（可以省略）JOIN 数据库2 ON 数据行描述;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT column_one, column_two, ... FROM tableName_one INNER JION tableName_two ON Condition_Expression;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//采用 JION...USING 相等连接查询方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT * FROM tableName_one JION tableName_two USING(column_one, ...);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//采用 NATURAL JION 自然连接查询方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT * FROM tableName_one NATURAL JION tableName_two;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（3）&lt;/strong&gt;操作实例：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.1&lt;/strong&gt;采用 &lt;code&gt;INNER JION&lt;/code&gt; 连表查询&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-0a55fba6da7b1789.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-20 00.10.57.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.2&lt;/strong&gt; 采用 &lt;code&gt;JION...USING()&lt;/code&gt; 连表查询&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-7685938dc35e7563.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-22 22.05.44.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.3&lt;/strong&gt; 采用 &lt;code&gt;NATURE&lt;/code&gt; 连表查询&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-1d1d594962201b69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-22 22.12.18.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;三种查询方式特点小结&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有上面连表查询实例可以看出：&lt;br&gt;&lt;strong&gt;&lt;code&gt;INNER JION&lt;/code&gt; &lt;/strong&gt; 在实现多条件查询过程中需要使用多个 Condations 情况，使用更加灵活可以有 &lt;code&gt;&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;&lt;/code&gt;、等&lt;br&gt;&lt;strong&gt;&lt;code&gt;JION...USING()&lt;/code&gt;&lt;/strong&gt; 在实现完全的等于的基础上可以实用，这样不需要写具体的 &lt;code&gt;=&lt;/code&gt; 语句&lt;br&gt;&lt;strong&gt;&lt;code&gt;NATURE&lt;/code&gt;&lt;/strong&gt;可以实现列的相等，但是使用场景是在表格中&lt;strong&gt;仅有一列是相等的&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;外连接-OUTER-JOIN&quot;&gt;&lt;a href=&quot;#外连接-OUTER-JOIN&quot; class=&quot;headerlink&quot; title=&quot;外连接(OUTER JOIN)&quot;&gt;&lt;/a&gt;外连接(OUTER JOIN)&lt;/h3&gt;&lt;p&gt;在外连接多表查询中有三种情况：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（1）&lt;/strong&gt;外连接特点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 外连接可以说是内连接的衍生，在此基础上可以实现在条件没有符合的基础上也会把数据列举出来。而且外连接分为：LEFT、RIGHT 和 FULL 连接三种情况，&lt;strong&gt;&lt;code&gt;SQLite&lt;/code&gt;仅仅支持 &lt;code&gt;LEFT&lt;/code&gt; 链接方式&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;（2）&lt;/strong&gt;使用格式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;INNER JION : 默认链接方式， &lt;code&gt;INNER&lt;/code&gt; 可以省略&lt;/li&gt;
&lt;li&gt;JION … USING : 解决较长条件，保持节俭来声明内连接方式&lt;/li&gt;
&lt;li&gt;NATURAL JOIN : 类似于 USING 方法，但是会自动检测一列值是否相等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2.1&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//SELECT 具体行 FROM 数据库1 INNER（可以省略）JOIN 数据库2 ON 数据行描述;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT column_one, column_two, ... FROM tableName_one LEFT OUTER JION tableName ON Condition_Expression;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（3）&lt;/strong&gt;操作实例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-f591c5239159984c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-20 00.23.21.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;发布时间：11/19/2017 00:12:12&lt;br&gt;版本第一次修改：11/20/2017 00:33:37&lt;br&gt;不行扛不住了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;前篇博文小编写了基本的 &lt;code&gt;SQLite&lt;/code&gt; 操作方式，如果只是对数据库采取基本的操作看完小编第一篇博文就可以。后面小编将会讲述一些数据的相对来说比较复杂的操作方式。&lt;/p&gt;
&lt;p&gt;本篇将会列出下面的数据库相关知识：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多表查询&lt;/li&gt;
&lt;li&gt;运算符&lt;/li&gt;
&lt;li&gt;表达式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;多表查询&quot;&gt;&lt;a href=&quot;#多表查询&quot; class=&quot;headerlink&quot; title=&quot;多表查询&quot;&gt;&lt;/a&gt;多表查询&lt;/h2&gt;&lt;p&gt;接着上篇文章小编把数据库中查询使用的多表查询给大家做讲解。&lt;/p&gt;
&lt;p&gt;在多表查询过程中需要用到的关键词是: &lt;code&gt;join&lt;/code&gt;，而且在多表连接查询过程中有三种情况。&lt;/p&gt;
&lt;p&gt;分别是：交叉连接、内连接和外连接。&lt;/p&gt;
&lt;p&gt;一下操作均以 &lt;code&gt;Employee&lt;/code&gt; 和 &lt;code&gt;Programmer&lt;/code&gt; 两个表格为基础来实现使用用例。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;内容是乱取的，上次取名可能气到在意的人，后面名字均是乱取！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-2dfc0cb76093a392.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-20 01.14.27.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="SQLite" scheme="http://yoursite.com/tags/SQLite/"/>
    
  </entry>
  
  <entry>
    <title>SQLite 学习-基础知识</title>
    <link href="http://yoursite.com/2017/11/14/SQLite%20%E5%AD%A6%E4%B9%A0-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2017/11/14/SQLite 学习-基本知识/</id>
    <published>2017-11-14T12:24:13.000Z</published>
    <updated>2017-11-22T16:15:20.000Z</updated>
    
    <content type="html">&lt;p&gt;几天得闲，上周一想把数据库相关知识整理一份当做在看到数据库后续，但是一直都在看公司的项目重构工作。今天终于把相关的技术问题解决，打算重新整理一份新知识点。&lt;/p&gt;
&lt;h1 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h1&gt;&lt;p&gt;小编在这里提出一个问题：为什么要使用数据库？&lt;/p&gt;
&lt;p&gt;在系统编译或者运行期间同时使用内存或者相关变量储存在堆中可以实现相关数据保存。但是在占用的内存或者是堆中的相关内容在程序 &lt;code&gt;KILL&lt;/code&gt; 之后，相关的数据也会被系统回收。我们为了保存相关的数据实现永久性的储存的，就是考虑磁盘的储存能力。这时文件储存和数据库储存就会是我们选择的对象。&lt;/p&gt;
&lt;p&gt;小编这里就以 &lt;code&gt;SQLite&lt;/code&gt; 来讲解相关数据基本原理和操作。&lt;/p&gt;
&lt;h2 id=&quot;SQLite&quot;&gt;&lt;a href=&quot;#SQLite&quot; class=&quot;headerlink&quot; title=&quot;SQLite&quot;&gt;&lt;/a&gt;SQLite&lt;/h2&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;首先要明白 &lt;code&gt;SQLite&lt;/code&gt; 数据库的使用不需要进行相关的配置，也不需要相关的以来关系就是通过 &lt;code&gt;API&lt;/code&gt; 的调用就可以实现基本的操作。&lt;/p&gt;
&lt;p&gt;在数据操作过程中经常使用的就是：增、删、改和查四中基本的操作。&lt;/p&gt;
&lt;h3 id=&quot;关键字&quot;&gt;&lt;a href=&quot;#关键字&quot; class=&quot;headerlink&quot; title=&quot;关键字&quot;&gt;&lt;/a&gt;关键字&lt;/h3&gt;&lt;p&gt;首先是数据库表创建、插入新的一行和删除：&lt;code&gt;CREATE&lt;/code&gt;、&lt;code&gt;ALTER&lt;/code&gt; 和 &lt;code&gt;DROP&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;具体每一行的增删改查：&lt;code&gt;INSERT&lt;/code&gt;、&lt;code&gt;DELETE&lt;/code&gt;、&lt;code&gt;SELECT&lt;/code&gt; 和 &lt;code&gt;UPDATE&lt;/code&gt;。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h3 id=&quot;操作实例&quot;&gt;&lt;a href=&quot;#操作实例&quot; class=&quot;headerlink&quot; title=&quot;操作实例&quot;&gt;&lt;/a&gt;操作实例&lt;/h3&gt;&lt;h4 id=&quot;1）数据表中列的相关操作和实例&quot;&gt;&lt;a href=&quot;#1）数据表中列的相关操作和实例&quot; class=&quot;headerlink&quot; title=&quot;1）数据表中列的相关操作和实例&quot;&gt;&lt;/a&gt;1）数据表中列的相关操作和实例&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;小编一下操作是在 &lt;code&gt;MAC&lt;/code&gt; 上操作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在终端数据的创建：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(1)&lt;/strong&gt;数据库创建&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//创建数据库 JackJin.db &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sqlite3 JackJin.db&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;(2)&lt;/strong&gt;创建数据库表&lt;/p&gt;
&lt;p&gt;创建数据库的基本的语法是：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//数据库表格创建的基本的语法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE TABLE table_name(column_one type, column_two type, ...);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//create table 表名(行名 当前行数据类型, ...);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;小编以公司为例在终端操作：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-cf01782ef4981d1f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-14 20.16.10.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;小插曲&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(2.1)&lt;/strong&gt;数据库表格查询&lt;/p&gt;
&lt;p&gt;数据库相关操作的语法：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//简单表格查询 -- 只列出表格名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.tables&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//详细表格查询 -- 列出表格名称和相关创建执行语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.schme&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在终端的基本操作：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-547fdedc07179652.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-14 21.27.54.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(3)&lt;/strong&gt;对表现有的列操作&lt;/p&gt;
&lt;p&gt;现有表格中的列操作分为三种情况：新增列、删除已有的列和修改现有列的属性。&lt;/p&gt;
&lt;p&gt;操作的基本语法结构：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//新增 基本的语法结构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ALTER TABLE table_name ADD column &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//删除 基本的语法结构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ALTER TABLE table_name DROP COLUMN column;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//修改列字段的属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ALTER TABLE table_name ALTER COLUMN column &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在终端的基本操作：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.1&lt;/strong&gt; 对数据表新增列&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-bc3c0b6014f5352e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-14 21.41.07.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.2&lt;/strong&gt; 对数据表删除列&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-20278094efeb67e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-14 21.51.55.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.3&lt;/strong&gt; 对数据修改相关列属性&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-d9a5593f194d23af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-14 21.55.28.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在上面的表格中可以看出在操作过程中 &lt;strong&gt;新增加的列成功&lt;/strong&gt;， 但在实现数据表删除和修改列的相关信息中失败。 小编找了下资料：&lt;code&gt;Sqlite3&lt;/code&gt; 值支持相关增加和重名民操作。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;2）数据表中行的相关操作和实例&quot;&gt;&lt;a href=&quot;#2）数据表中行的相关操作和实例&quot; class=&quot;headerlink&quot; title=&quot;2）数据表中行的相关操作和实例&quot;&gt;&lt;/a&gt;2）数据表中行的相关操作和实例&lt;/h4&gt;&lt;p&gt;在数据库中行的操作有增、删、改和查，四中基本操作的方式：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(1)&lt;/strong&gt;插入数据&lt;/p&gt;
&lt;p&gt;在数据表插入数据两种方式:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.1 数据表&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//对现有表格插入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INSERT INTO table_name VALUES (param_one, param_two, ...);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;这种方式是要对所有的参数进行数据表的插入！！！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.2 局部的参数选择插入&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//实现数据表数据的局部数据插入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INSERT INTO table_name(column_one, column_two, ...) VALUES (param_one, param_two, ...);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;终端的实例操作：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-c274918e872d9441.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-14 22.29.39.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;小插曲&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由上面看出小编在查看数据输出进行相关格式化操作：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在输出时包括行头&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlite&amp;gt; .header on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlite&amp;gt; .mode colum&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;(2)&lt;/strong&gt;删除数据&lt;/p&gt;
&lt;p&gt;删除数据也有两种操作方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.1 删除数据按照条件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//数据库操作的基本语法 condition 是删除的条件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DELETE FROM table_name WHERE condition;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;2.1 删除全部数据&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//删除数据库中的全部数据内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DELETE FROM table_name;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;删除数据的实力操作：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-1f4ae7490d89e45e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-14 23.06.16.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上面可以看出小编为了更好的展示数据 &lt;code&gt;DELETE&lt;/code&gt; 效果就在原来的基础又增加一条数据，更好展示删除过程中效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;(3)&lt;/strong&gt;修改数据&lt;/p&gt;
&lt;p&gt;数据修改基本语法：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//数据修改的基本语法类型 condation 是数据修改条件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UPDATE table_name SET column_one = value1, column_two = value2, ... WHERE condation;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数据修改的实例操作：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-0924ab7dde94b7a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-14 23.16.47.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(4)&lt;/strong&gt;查询数据&lt;/p&gt;
&lt;p&gt;数据查询的基本操作基本分为两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单个表格数据查询&lt;/li&gt;
&lt;li&gt;多个表格数据查询&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4.1 单标数据查询&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;单标的数据查询过程中一般分为两种情况：&lt;br&gt;查询所有的数据和按条件数据查询。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a.&lt;/strong&gt;查询所有的数据  &lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//**a.**查询所有的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT * FROM table_name;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;b.&lt;/strong&gt;按条件查询数据  &lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//**b.**按条件查询数据 column1 是要查询列名 &amp;amp;condation 是要查询的条件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT column1, column2, ... FROM table_name WHERE condation;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-cdd0cd24fa746483.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-14 23.31.54.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;目前小编对 &lt;code&gt;SQLite&lt;/code&gt; 的基本操作博文到这里的，可以看出在多条件查询过程中操作失败的小案例。&lt;/p&gt;
&lt;p&gt;后面会整理数据之间比较复杂的关系操作。&lt;/p&gt;
&lt;p&gt;发布于：2017/11/14 23:34:40&lt;br&gt;地点：讯美科技广场 1 座 10 楼&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;几天得闲，上周一想把数据库相关知识整理一份当做在看到数据库后续，但是一直都在看公司的项目重构工作。今天终于把相关的技术问题解决，打算重新整理一份新知识点。&lt;/p&gt;
&lt;h1 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h1&gt;&lt;p&gt;小编在这里提出一个问题：为什么要使用数据库？&lt;/p&gt;
&lt;p&gt;在系统编译或者运行期间同时使用内存或者相关变量储存在堆中可以实现相关数据保存。但是在占用的内存或者是堆中的相关内容在程序 &lt;code&gt;KILL&lt;/code&gt; 之后，相关的数据也会被系统回收。我们为了保存相关的数据实现永久性的储存的，就是考虑磁盘的储存能力。这时文件储存和数据库储存就会是我们选择的对象。&lt;/p&gt;
&lt;p&gt;小编这里就以 &lt;code&gt;SQLite&lt;/code&gt; 来讲解相关数据基本原理和操作。&lt;/p&gt;
&lt;h2 id=&quot;SQLite&quot;&gt;&lt;a href=&quot;#SQLite&quot; class=&quot;headerlink&quot; title=&quot;SQLite&quot;&gt;&lt;/a&gt;SQLite&lt;/h2&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="SQLite" scheme="http://yoursite.com/tags/SQLite/"/>
    
  </entry>
  
  <entry>
    <title>SQLite 数据库基本操作</title>
    <link href="http://yoursite.com/2017/11/07/SQLite%20%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2017/11/07/SQLite 基本操作/</id>
    <published>2017-11-06T16:49:29.000Z</published>
    <updated>2017-11-12T16:41:44.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;Sqlite&lt;/code&gt; 学习总结&lt;/p&gt;
&lt;h3 id=&quot;SQLite-的安装&quot;&gt;&lt;a href=&quot;#SQLite-的安装&quot; class=&quot;headerlink&quot; title=&quot;SQLite 的安装&quot;&gt;&lt;/a&gt;&lt;code&gt;SQLite&lt;/code&gt; 的安装&lt;/h3&gt;&lt;p&gt;一般在 &lt;code&gt;MAC&lt;/code&gt; 上面系统会自带 &lt;code&gt;Sqlite&lt;/code&gt; 的数据库版本的。&lt;/p&gt;
&lt;p&gt;查看本地的数据库版本号呢，可以在终端输入执行下面的语句（以 &lt;code&gt;mac&lt;/code&gt; 为例）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;小编的 &lt;code&gt;MAC&lt;/code&gt; 上输出的内容是：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SQLite version &lt;span class=&quot;number&quot;&gt;3.16&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-11&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-04&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;39&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//可以看到 SQLite 的版本信息和安装时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter &lt;span class=&quot;string&quot;&gt;&quot;.help&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; usage hints.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Connected to a transient &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;-memory database.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Use &lt;span class=&quot;string&quot;&gt;&quot;.open FILENAME&quot;&lt;/span&gt; to reopen on a persistent database.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;SQLite-语法基本操作&quot;&gt;&lt;a href=&quot;#SQLite-语法基本操作&quot; class=&quot;headerlink&quot; title=&quot;SQLite 语法基本操作&quot;&gt;&lt;/a&gt;SQLite 语法基本操作&lt;/h3&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;（1）创建表格&lt;br&gt;创建数据表格基本操作语法是：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CREATE TABLE datebase_name(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;column_1 datetype PRIMARY-KEY, &lt;span class=&quot;comment&quot;&gt;//可以有多个KEY（主）键&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;column_2 datetype,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;column_3 datetype,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如创建班级的 &lt;code&gt;Table&lt;/code&gt; 表格，以 &lt;code&gt;ID&lt;/code&gt; 为主键。实例如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CREATE TABLE ClassRoom(RoomID &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; perimary key, StudentNumber &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;, Grade &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查询数据库创建是否成功：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlite&amp;gt; .table &lt;span class=&quot;comment&quot;&gt;//终端输入语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ClassRoom&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果查询数据库细节：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sqlite&amp;gt; .schema &lt;span class=&quot;comment&quot;&gt;//查询数据内容具体细节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlite&amp;gt; .schema&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE TABLE ClassRoom(RoomID &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; perimary key, StudentNumber &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;, Grade &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE TABLE Person(StudentID &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;, name &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;, age &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;, address &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;, sex &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlite&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-0cbae91e21960869.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-09 00.47.12.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;（2）表格删除&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;drop table &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; exist Person;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在开始时对数据表格进行删除，得到下面的结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-823005bd8316d1a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-09 00.47.24.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;经过小编翻看资料，原来是在创建数据库时只是创建表格。并没有创建数据 &lt;code&gt;Table&lt;/code&gt; 所放的数据库。而且在 &lt;code&gt;sqlite3&lt;/code&gt; 使用过程中每个语句后面的结尾需要添加 &lt;strong&gt;&lt;code&gt;;&lt;/code&gt;&lt;/strong&gt; 来结尾。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面👇是使用终端对表格进行删除的正确操作：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-d49a8edb2ff9f6ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-09 09.38.41.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;（3）数据插入  &lt;/p&gt;
&lt;p&gt;对创建好的数据库 &lt;code&gt;Table&lt;/code&gt;进行数据库的插入操作实现有两种：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//方式一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into table_name(colum1, colum2, ...) values (param1, param2, ...);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//方式二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into table_name values(param1, param2, ...);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;具体实例如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-592676815750a18a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;1877765-0ee21d54775d5afa.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;（4）数据增加&lt;br&gt;（5）数据修改&lt;br&gt;（6）数据查找  &lt;/p&gt;
&lt;p&gt;在数据查找过程中我们比较常用的查找方式是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查询所有数据&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取数据库中所有的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;select * from table_name;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;具体实例如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-a8d6824986b306b8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-09 09.52.36.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;在数据显示的过程中可以使数据清楚的罗列出来，具体实现：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.header on &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.mode colum&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;具体实例如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-82d28393caab51f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-09 09.56.02.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按条件查询数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-a5f1beaa1ce3c512.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;1877765-e896caf5ebdd870a.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-dac9d62e5bc97abf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;1877765-a6b05887d4902804.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;SQLite-表达式&quot;&gt;&lt;a href=&quot;#SQLite-表达式&quot; class=&quot;headerlink&quot; title=&quot;SQLite 表达式&quot;&gt;&lt;/a&gt;SQLite 表达式&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-b9d54e53707bdc24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-11-09 10.05.51.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SQLite&lt;/code&gt; 索引的实现&lt;/p&gt;
&lt;p&gt;版本提交时间：&lt;/p&gt;
&lt;p&gt;第一次提交：11/7/2017 00:45:30&lt;br&gt;第二次提交：11/10/2017 00:19:35&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.runoob.com/sqlite/sqlite-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.runoob.com/sqlite/sqlite-tutorial.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Sqlite&lt;/code&gt; 学习总结&lt;/p&gt;
&lt;h3 id=&quot;SQLite-的安装&quot;&gt;&lt;a href=&quot;#SQLite-的安装&quot; class=&quot;headerlink&quot; title=&quot;SQLite 的安装&quot;&gt;&lt;/a&gt;&lt;code&gt;SQLite&lt;/code&gt; 的安装&lt;/h3&gt;&lt;p&gt;一般在 &lt;code&gt;MAC&lt;/code&gt; 上面系统会自带 &lt;code&gt;Sqlite&lt;/code&gt; 的数据库版本的。&lt;/p&gt;
&lt;p&gt;查看本地的数据库版本号呢，可以在终端输入执行下面的语句（以 &lt;code&gt;mac&lt;/code&gt; 为例）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;小编的 &lt;code&gt;MAC&lt;/code&gt; 上输出的内容是：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SQLite version &lt;span class=&quot;number&quot;&gt;3.16&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-11&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-04&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;39&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//可以看到 SQLite 的版本信息和安装时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter &lt;span class=&quot;string&quot;&gt;&quot;.help&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; usage hints.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Connected to a transient &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;-memory database.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Use &lt;span class=&quot;string&quot;&gt;&quot;.open FILENAME&quot;&lt;/span&gt; to reopen on a persistent database.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;SQLite-语法基本操作&quot;&gt;&lt;a href=&quot;#SQLite-语法基本操作&quot; class=&quot;headerlink&quot; title=&quot;SQLite 语法基本操作&quot;&gt;&lt;/a&gt;SQLite 语法基本操作&lt;/h3&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="SQLite" scheme="http://yoursite.com/tags/SQLite/"/>
    
  </entry>
  
  <entry>
    <title>开发架构设计</title>
    <link href="http://yoursite.com/2017/09/01/%E5%BC%80%E5%8F%91%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    <id>http://yoursite.com/2017/09/01/开发架构设计/</id>
    <published>2017-09-01T09:42:32.000Z</published>
    <updated>2018-01-16T02:23:57.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="架构" scheme="http://yoursite.com/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="移动开发" scheme="http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>iOS-镜头采集(AVCaptureDevice)</title>
    <link href="http://yoursite.com/2017/08/17/iOS-%E9%95%9C%E5%A4%B4%E9%87%87%E9%9B%86(AVCaptureDevice)/"/>
    <id>http://yoursite.com/2017/08/17/iOS-镜头采集(AVCaptureDevice)/</id>
    <published>2017-08-17T09:42:32.000Z</published>
    <updated>2017-08-25T09:29:18.000Z</updated>
    
    <content type="html">&lt;p&gt;承接上一篇博文小编讲述在镜头采集过程所需知识点和 &lt;code&gt;AVCaptureSession&lt;/code&gt; 基本使用方法，本篇博文将要讲述 &lt;code&gt;AVCaptureDevice&lt;/code&gt; 相关使用方法。&lt;/p&gt;
&lt;p&gt;下图为本博文写作思路：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-02f3ce2f37fba73c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;AVCaptureDevice博文写作思维导图.png&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;AVCaptureDevice&quot;&gt;&lt;a href=&quot;#AVCaptureDevice&quot; class=&quot;headerlink&quot; title=&quot;AVCaptureDevice&quot;&gt;&lt;/a&gt;AVCaptureDevice&lt;/h1&gt;&lt;p&gt;AVCaptureDevice 在这个采集过程中相当于在发电过程中“发电设备”，提供实现摄像头和麦克风相关初始化。而且可以对摄像头进行一些基本设置，例如：闪光灯、手电筒、聚焦、曝光、白平衡等一些基本设置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AVCaptureDevice 实现摄像头初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 &lt;code&gt;AVCaptureDevice&lt;/code&gt; 初始化前需要对镜头申请权限，具体实现如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; ([&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; authorizationStatusForMediaType:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeVideo&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;AVAuthorizationStatusAuthorized&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//获取授权成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;AVAuthorizationStatusNotDetermined&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//目前用户为选择&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dispatch_suspend(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.sessionQueue);&lt;span class=&quot;comment&quot;&gt;//self.seaaionQueue 是串行线程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; requestAccessForMediaType:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeVideo&lt;/span&gt; completionHandler:^(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; granted) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!granted) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.setupResult = FYCameraCaptureSetupResultNotAuthorized;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dispatch_resume(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.sessionQueue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;//处理其余情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;请求硬件的获取状态，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVAuthorizationStatusNotDetermined&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//用户暂时没有做相关选着&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVAuthorizationStatusRestricted&lt;/span&gt;    = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//没有改媒体类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVAuthorizationStatusDenied&lt;/span&gt;        = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//用户拒绝&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVAuthorizationStatusAuthorized&lt;/span&gt;    = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//用户允许&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在获取对 &lt;code&gt;AVCaptureDevice&lt;/code&gt; 使用允许的情况中，可以获取上面四中情况。可以依次对上面三种情况进行处理。下面👇列出初始方法。 &lt;/p&gt;
&lt;p&gt;1） &lt;code&gt;AVCaptureDevice&lt;/code&gt;基本初始方法&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//方法(1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; *videoDevice = [&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; defaultDeviceWithMediaType:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeVideo&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//方法(2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; *videoDevice = [&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; defaultDeviceWithDeviceType:&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceTypeBuiltInDuoCamera&lt;/span&gt; mediaType:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeVideo&lt;/span&gt; position:&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevicePositionBack&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2）&lt;code&gt;AVCaptureDevice&lt;/code&gt; 实现镜头自动变焦&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceType&lt;/span&gt;&amp;gt; *deviceType = @[&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceTypeBuiltInWideAngleCamera&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceTypeBuiltInDualCamera&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceDiscoverySession&lt;/span&gt; *videoDeviceDiscoverySession = [&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceDiscoverySession&lt;/span&gt; discoverySessionWithDeviceTypes:deviceType mediaType:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeVideo&lt;/span&gt; position:&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevicePositionUnspecified&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取 devices &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; *&amp;gt; *devices = videoDeviceDiscoverySession.devices;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在使用 &lt;code&gt;AVCaptureDeviceDiscoverySession&lt;/code&gt; 获取 &lt;code&gt;AVCaptureDevice&lt;/code&gt; 过程中，使用 &lt;code&gt;AVCaptureDeviceType&lt;/code&gt;。&lt;br&gt;下面列出 &lt;code&gt;AVCaptureDeviceType&lt;/code&gt; 种类：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//AVCaptureDeviceType 种类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceTypeBuiltInMicrophone&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//创建麦克风&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceTypeBuiltInWideAngleCamera&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//创建广角相机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceTypeBuiltInTelephotoCamera&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//创建比广角相机更长的焦距。只有使用 AVCaptureDeviceDiscoverySession 可以使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceTypeBuiltInDualCamera&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//创建变焦的相机，可以实现广角和变焦的自动切换。使用同AVCaptureDeviceTypeBuiltInTelephotoCamera 一样。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceTypeBuiltInDuoCamera&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//iOS 10.2 被 AVCaptureDeviceTypeBuiltInDualCamera 替换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注释：&lt;code&gt;iOS 10.2&lt;/code&gt; 之后添加自动变焦功能, 而且在查找自动变焦镜头时需要采用 &lt;code&gt;AVCaptureDeviceDiscoverySession&lt;/code&gt; 进行查找。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AVCaptureDevice&lt;/code&gt; 实现的通知&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面👇列出通知的类型：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Notification type &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceWasConnectedNotification&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//设备被链接时发出通知&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceWasDisconnectedNotification&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//设备被去去除时发出通知&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceSubjectAreaDidChangeNotification&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//设备中场景改变时发出通知，既预览发生变化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AVCaptureDevice&lt;/code&gt; 的位置&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevicePositionUnspecified&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//不确定&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevicePositionBack&lt;/span&gt;        = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//后置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevicePositionFront&lt;/span&gt;       = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//前置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 如果初始的 AVMediaType 是 AVMediaTypeVideo 表示前置和后置摄像头&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;AVCaptureDeviceFlash-闪光灯&quot;&gt;&lt;a href=&quot;#AVCaptureDeviceFlash-闪光灯&quot; class=&quot;headerlink&quot; title=&quot;AVCaptureDeviceFlash(闪光灯)&quot;&gt;&lt;/a&gt;AVCaptureDeviceFlash(闪光灯)&lt;/h4&gt;&lt;p&gt;在光线不足的情况下，需要开启屏幕的闪光灯来进行补光。便于镜头可以捕捉更好的场景，拍摄出好的照片和视频。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;iOS 10_0&lt;/code&gt;之前闪光灯设置&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; *device = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *inputs = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.session.inputs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; *input &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; inputs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device.deviceType isEqual:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeVideo&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        device = input.device;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *errorProperty = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device hasFlash]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device isFlashAvailable]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device isFlashModeSupported:&lt;span class=&quot;built_in&quot;&gt;AVCaptureFlashModeOn&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; result = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = [device lockForConfiguration:&amp;amp;errorProperty];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                [device setFlashMode:&lt;span class=&quot;built_in&quot;&gt;AVCaptureFlashModeOn&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ERROR : CONFIGURATION CAPTURE DEVICE FLASH FAILURE, ERROR CODE:%ld&quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)errorProperty.code);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [device unlockForConfiguration];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ERROR : FLASH IS UNAVAILABLE BECAUSE THE DEVCICE OVERHEATS&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ERROR : SOFTWARE DEVICE HAVE NO FLASH&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;iOS 10_0&lt;/code&gt;之后设置&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *outputs = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.session.outputs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;AVCaptureOutput&lt;/span&gt; *output &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; outputs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([output isMemberOfClass:[&lt;span class=&quot;built_in&quot;&gt;AVCapturePhotoOutput&lt;/span&gt; class]]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;AVCapturePhotoOutput&lt;/span&gt; *photoOutput = (&lt;span class=&quot;built_in&quot;&gt;AVCapturePhotoOutput&lt;/span&gt; *)output;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; flashSupported = [[photoOutput supportedFlashModes] containsObject:@(&lt;span class=&quot;built_in&quot;&gt;AVCaptureFlashModeAuto&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flashSupported) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;AVCapturePhotoSettings&lt;/span&gt; *photoSettings = photoOutput.photoSettingsForSceneMonitoring;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            photoSettings.flashMode = &lt;span class=&quot;built_in&quot;&gt;AVCaptureFlashModeAuto&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ERROR : PHOTOOUTPUT CAN NOT SUPPORT AVCAPTUREMODE TYPE&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面👇列出闪光灯类型：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureFlashModeOff&lt;/span&gt;  = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//闪光灯关闭&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureFlashModeOn&lt;/span&gt;   = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//闪光灯开启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureFlashModeAuto&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//闪光灯自动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;太困了，晚上跑 10 公里。目前👁都睁不开。&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 iPhone 6s 开始，如果是前置摄像头并且开启闪光灯，可以实现屏幕闪光灯补光。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;AVCaptureDeviceTorch-手电筒&quot;&gt;&lt;a href=&quot;#AVCaptureDeviceTorch-手电筒&quot; class=&quot;headerlink&quot; title=&quot;AVCaptureDeviceTorch(手电筒)&quot;&gt;&lt;/a&gt;AVCaptureDeviceTorch(手电筒)&lt;/h4&gt;&lt;p&gt;在光线不是很暗的情况下我们可以用手机的 LED 灯当做手电筒使用，具体实现如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; *device = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *inputs = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.session.inputs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; *input &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; inputs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device.deviceType isEqual:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeVideo&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        device = input.device;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device hasTorch]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device isFlashAvailable]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device isTorchModeSupported:&lt;span class=&quot;built_in&quot;&gt;AVCaptureTorchModeOn&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; result = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = [device lockForConfiguration:&amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                [device setTorchMode:&lt;span class=&quot;built_in&quot;&gt;AVCaptureTorchModeOn&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ERROR : CONFIGURATION DEVICE TORCH FAIL AND ERROR CODE %ld&quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)error.code);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            error = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Torch light&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = [device setTorchModeOnWithLevel:&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt; error:&amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!result) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ERROR : DEVICE SET TORCH FAILURE AND ERROR CODE %ld&quot;&lt;/span&gt;, error.code);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [device unlockForConfiguration];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ERROR : DEVICE CAN NO SUPPORT TORCH&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ERROR : SOFTHARE DEVICE TORCH IS UNAVAILABLE BECAUSE OVERHEATS&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ERROR : SOFFHARE DEVICE HAS NO TORCH&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面列出 &lt;code&gt;Torch&lt;/code&gt; 类型，使用方法和闪关灯类型：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureTorchModeOff&lt;/span&gt;  = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//关闭&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureTorchModeOn&lt;/span&gt;   = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//打开&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureTorchModeAuto&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//自动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;AVCaptureDeviceFocus-聚焦&quot;&gt;&lt;a href=&quot;#AVCaptureDeviceFocus-聚焦&quot; class=&quot;headerlink&quot; title=&quot;AVCaptureDeviceFocus(聚焦)&quot;&gt;&lt;/a&gt;AVCaptureDeviceFocus(聚焦)&lt;/h4&gt;&lt;p&gt;实现摄像头聚焦有两种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;镜头位置(AVCaptureFocusMode)&lt;/li&gt;
&lt;li&gt;范围烧苗(AVCaptureAutoFocusRangeRestriction)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1）镜头位置(AVCaptureFocusMode)&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; *device = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *inputs = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.session.inputs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; *input &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; inputs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device.deviceType isEqual:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeVideo&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        device = input.device;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device isFocusModeSupported:&lt;span class=&quot;built_in&quot;&gt;AVCaptureFocusModeAutoFocus&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device lockForConfiguration:&amp;amp;error]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [device setFocusMode:&lt;span class=&quot;built_in&quot;&gt;AVCaptureFocusModeAutoFocus&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//设置聚焦在设备坐标的中点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (device.focusPointOfInterestSupported) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            device.focusPointOfInterest = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [device unlockForConfiguration];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上述代码实现聚焦在设备坐标 中心位置。&lt;/p&gt;
&lt;p&gt;下面👇列出实现聚焦设置类型：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureFocusModeLocked&lt;/span&gt;              = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//锁定当前镜头位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureFocusModeAutoFocus&lt;/span&gt;           = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//镜头自动调焦&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureFocusModeContinuousAutoFocus&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//镜头连续自动调焦&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;AVCaptureDeviceExposure-曝光&quot;&gt;&lt;a href=&quot;#AVCaptureDeviceExposure-曝光&quot; class=&quot;headerlink&quot; title=&quot;AVCaptureDeviceExposure(曝光)&quot;&gt;&lt;/a&gt;AVCaptureDeviceExposure(曝光)&lt;/h4&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; *device = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *inputs = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.session.inputs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; *input &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; inputs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device.deviceType isEqual:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeVideo&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         device = input.device;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device isExposureModeSupported:&lt;span class=&quot;built_in&quot;&gt;AVCaptureExposureModeAutoExpose&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device lockForConfiguration:&amp;amp;error]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         [device setExposureMode:&lt;span class=&quot;built_in&quot;&gt;AVCaptureExposureModeAutoExpose&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     [device unlockForConfiguration];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述代码实现自动调节曝光。&lt;/p&gt;
&lt;p&gt;下面列出相关曝光设置类型：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureExposureModeLocked&lt;/span&gt;                            = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//锁定&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureExposureModeAutoExpose&lt;/span&gt;                        = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//自动对焦&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureExposureModeContinuousAutoExposure&lt;/span&gt;            = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//实现连续自动对焦&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureExposureModeCustom&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;_0) = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//通过 ISO 和 曝光时间实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;AVCaptureDeviceWhiteBalance-白平衡&quot;&gt;&lt;a href=&quot;#AVCaptureDeviceWhiteBalance-白平衡&quot; class=&quot;headerlink&quot; title=&quot;AVCaptureDeviceWhiteBalance(白平衡)&quot;&gt;&lt;/a&gt;AVCaptureDeviceWhiteBalance(白平衡)&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;类型设置(AVCaptureWhiteBalanceMode)&lt;/li&gt;
&lt;li&gt;RGB具体值(AVCaptureWhiteBalanceGains)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1）类型设置白平衡&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; *device = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *inputs = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.session.inputs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; *input &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; inputs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device.deviceType isEqual:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeVideo&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         device = input.device;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device isWhiteBalanceModeSupported:&lt;span class=&quot;built_in&quot;&gt;AVCaptureWhiteBalanceModeAutoWhiteBalance&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device lockForConfiguration:&amp;amp;error]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         [device setWhiteBalanceMode:&lt;span class=&quot;built_in&quot;&gt;AVCaptureWhiteBalanceModeAutoWhiteBalance&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     [device unlockForConfiguration];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上述实现白平衡自动调整设置，下面👇列出白平衡类型：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureWhiteBalanceModeLocked&lt;/span&gt;                     = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureWhiteBalanceModeAutoWhiteBalance&lt;/span&gt;           = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureWhiteBalanceModeContinuousAutoWhiteBalance&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2）RGB 值设置白平衡&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; *device = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *inputs = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.session.inputs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; *input &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; inputs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([device.deviceType isEqual:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeVideo&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         device = input.device;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; maxWhiteBalance = device.maxWhiteBalanceGain;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; redGain =  MIN(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;, maxWhiteBalance);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; greenGain = MIN(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;, maxWhiteBalance);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; blueGain = MIN(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;, maxWhiteBalance);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;AVCaptureWhiteBalanceGains&lt;/span&gt; whiteBalanceGains = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     redGain,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     greenGain,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     blueGain&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [device setWhiteBalanceModeLockedWithDeviceWhiteBalanceGains:whiteBalanceGains completionHandler:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;额外附加功能&quot;&gt;&lt;a href=&quot;#额外附加功能&quot; class=&quot;headerlink&quot; title=&quot;额外附加功能&quot;&gt;&lt;/a&gt;额外附加功能&lt;/h4&gt;&lt;p&gt;附加功能：可以获取 &lt;code&gt;AVCaptureDevice&lt;/code&gt; 一些相关的参数。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;视频录制过程中 &lt;code&gt;min&lt;/code&gt; 和 &lt;code&gt;max&lt;/code&gt; 的帧率和帧时间间隔。 &lt;/li&gt;
&lt;li&gt;曝光 &lt;code&gt;ISO&lt;/code&gt; 的 &lt;code&gt;min&lt;/code&gt; 和 &lt;code&gt;max&lt;/code&gt; 值和曝光时间的 &lt;code&gt;min&lt;/code&gt; 和 &lt;code&gt;max&lt;/code&gt; 值等。&lt;/li&gt;
&lt;li&gt;输入的独一的 &lt;code&gt;ID&lt;/code&gt; 和输入源的设备 名字（&lt;code&gt;localizedName&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考资料：&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/documentation/avfoundation/avcapturedevice?changes=latest_minor&amp;amp;language=objc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AVCaptureDevice&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/documentation/avfoundation/avcapturedeviceposition&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AVCaptureDevicePosition&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/documentation/avfoundation/avcapturetorchmode?language=objc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AVCaptureTorchMode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/documentation/avfoundation/avcaptureflashmode?language=objc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AVCaptureFlashMode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/documentation/avfoundation/avcapturefocusmode?language=objc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AVCaptureFocusMode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/documentation/avfoundation/avcaptureexposuremode?language=objc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AVCaptureExposureMode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/documentation/avfoundation/avcapturewhitebalancemode?language=objc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AVCaptureWhiteBalanceMode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://support.vsco.co/hc/en-us/articles/203226980-Advanced-Camera-Controls-for-iOS-Setting-Manual-White-Balance&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Advanced Camera Controls for iOS: Setting Manual White Balance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第一次发布：2017/8/15 23:16:32 星期二&lt;br&gt;第二次发布：2017/8/16 00:17:59 星期三&lt;br&gt;第三次发布：2017/8/16 20:53:56 星期三&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;承接上一篇博文小编讲述在镜头采集过程所需知识点和 &lt;code&gt;AVCaptureSession&lt;/code&gt; 基本使用方法，本篇博文将要讲述 &lt;code&gt;AVCaptureDevice&lt;/code&gt; 相关使用方法。&lt;/p&gt;
&lt;p&gt;下图为本博文写作思路：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-02f3ce2f37fba73c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;AVCaptureDevice博文写作思维导图.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-镜头采集(Camera capture &amp; AVCaptureSession)</title>
    <link href="http://yoursite.com/2017/08/11/iOS-Camera%20Capture%20(iOS%20%E9%95%9C%E5%A4%B4%E9%87%87%E9%9B%86)/"/>
    <id>http://yoursite.com/2017/08/11/iOS-Camera Capture (iOS 镜头采集)/</id>
    <published>2017-08-10T16:07:15.000Z</published>
    <updated>2017-08-25T09:26:48.000Z</updated>
    
    <content type="html">&lt;p&gt;iPhone 手机在图片拍照和视频录制方面有很强大的功能，小编认为如果很好使用 iPhone 拍摄出很好照片 &amp;amp; 录制很有趣的视频。本章将详细讲解 &lt;code&gt;AVCaptureSession&lt;/code&gt; ，并最后给出 &lt;code&gt;FYCameraKit&lt;/code&gt; 项目Demo。&lt;br&gt;下面小编为大家讲解 iOS 拍照和视频录制功能实现，下图是镜头采集需要的类：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-b727b7f54b3df9bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-Camera Capture (iOS 镜头采集).png&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;总体介绍&quot;&gt;&lt;a href=&quot;#总体介绍&quot; class=&quot;headerlink&quot; title=&quot;总体介绍&quot;&gt;&lt;/a&gt;总体介绍&lt;/h2&gt;&lt;p&gt;在整个镜头采集过程小编把整个过程比作我们常见发电过程：均是通过特定的步骤实现得到最后的产物。下面👇做详细解释：&lt;/p&gt;
&lt;h3 id=&quot;AVCaptureSession-发电机&quot;&gt;&lt;a href=&quot;#AVCaptureSession-发电机&quot; class=&quot;headerlink&quot; title=&quot;AVCaptureSession (发电机)&quot;&gt;&lt;/a&gt;AVCaptureSession (发电机)&lt;/h3&gt;&lt;p&gt;&lt;code&gt;AVCaptureSession&lt;/code&gt; ：作为音视频捕捉会话，把镜头和麦克风捕捉到的音视频源输出到设备中。&lt;br&gt;提示：可以有多个输入和输出。&lt;/p&gt;
&lt;h3 id=&quot;AVCaptureDevice-发电设备&quot;&gt;&lt;a href=&quot;#AVCaptureDevice-发电设备&quot; class=&quot;headerlink&quot; title=&quot;AVCaptureDevice (发电设备)&quot;&gt;&lt;/a&gt;AVCaptureDevice (发电设备)&lt;/h3&gt;&lt;p&gt;&lt;code&gt;AVCaptureDevice&lt;/code&gt;：输入设备，包括：摄像头和麦克风。可以通过设置一些参数来调节设备采集效果（例如：曝光，白平衡和聚焦等）。&lt;/p&gt;
&lt;h3 id=&quot;AVCaptureInput-水风能源&quot;&gt;&lt;a href=&quot;#AVCaptureInput-水风能源&quot; class=&quot;headerlink&quot; title=&quot;AVCaptureInput (水风能源)&quot;&gt;&lt;/a&gt;AVCaptureInput (水风能源)&lt;/h3&gt;&lt;p&gt;&lt;code&gt;AVCaptureInput&lt;/code&gt;：输入数据管理对象，经过 AVCaptureDevice 实现初始化，然后添加到 AVCaptureSession (发电机) 中进行相应的输出。&lt;br&gt;子类：&lt;code&gt;AVCaptureDeviceInput&lt;/code&gt;、&lt;code&gt;AVCaptureScreenInput&lt;/code&gt;和&lt;code&gt;AVCaptureMetadataInput&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;AVCaptureOutput-电力&quot;&gt;&lt;a href=&quot;#AVCaptureOutput-电力&quot; class=&quot;headerlink&quot; title=&quot;AVCaptureOutput (电力)&quot;&gt;&lt;/a&gt;AVCaptureOutput (电力)&lt;/h3&gt;&lt;p&gt;&lt;code&gt;AVCaptureOut&lt;/code&gt;：数据输出管理，通过 AVCaptureSession 中输出。可以通过相关的协议实对应的数据输出。&lt;br&gt;子类：&lt;code&gt;AVCaptureFileOutput&lt;/code&gt;、&lt;code&gt;AVCapturePhotoOutput&lt;/code&gt;、&lt;code&gt;AVCaptureStillImageOutput&lt;/code&gt;、&lt;code&gt;AVCaptureVideoDataOutput&lt;/code&gt;、&lt;code&gt;AVCaptureAudioDataOutput&lt;/code&gt;、&lt;code&gt;AVCaptureAudioPreviewOutput&lt;/code&gt;、&lt;code&gt;AVCaptureDepthDataOutput&lt;/code&gt;和&lt;code&gt;AVCaptureMetadataOutput&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;AVCaptureVideoPreviewLayer-发电预览&quot;&gt;&lt;a href=&quot;#AVCaptureVideoPreviewLayer-发电预览&quot; class=&quot;headerlink&quot; title=&quot;AVCaptureVideoPreviewLayer (发电预览)&quot;&gt;&lt;/a&gt;AVCaptureVideoPreviewLayer (发电预览)&lt;/h3&gt;&lt;p&gt;&lt;code&gt;AVCaptureVideoPreviewLayer&lt;/code&gt;：可以支持在拍摄过程中进行相关的预览，只需要在初始时实现对应的 AVCaptureSession 即可。&lt;/p&gt;
&lt;h2 id=&quot;视频录制&quot;&gt;&lt;a href=&quot;#视频录制&quot; class=&quot;headerlink&quot; title=&quot;视频录制&quot;&gt;&lt;/a&gt;视频录制&lt;/h2&gt;&lt;p&gt;下面展示在苹果官方开发文档给出的图：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-4cbf9ba736afdb69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-Video Capture(iOS 视频录制).png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;视频录制总概&quot;&gt;&lt;a href=&quot;#视频录制总概&quot; class=&quot;headerlink&quot; title=&quot;视频录制总概&quot;&gt;&lt;/a&gt;视频录制总概&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建 &lt;code&gt;AVCaptureSession&lt;/code&gt; 对象&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;AVCaptureDevice&lt;/code&gt; 静态方法获取设备常使用设备，例如：拍照和录像需要的摄像头，录音所需的麦克风&lt;/li&gt;
&lt;li&gt;利用输入设备 &lt;code&gt;AVCaptureDevice&lt;/code&gt; 初始化 &lt;code&gt;AVCaptureDeviceInput&lt;/code&gt; 对象&lt;/li&gt;
&lt;li&gt;初始化输出数据管理对象，拍照进行初始化 &lt;code&gt;AVCaptureStillImageOutput&lt;/code&gt; 对象，拍照初始化 &lt;code&gt;AVCaptureMovieFileOutput&lt;/code&gt; 对象&lt;/li&gt;
&lt;li&gt;将数据输入对象 &lt;code&gt;AVCaptureDeviceInput&lt;/code&gt;  和数据输出对象   &lt;code&gt;AVCaptureDeviceOutput&lt;/code&gt;  添加到媒体会话管理对象   &lt;code&gt;AVCaptureSession&lt;/code&gt; 中&lt;/li&gt;
&lt;li&gt;创建预览的图层   &lt;code&gt;AVCaptureVideoPreviewLayer&lt;/code&gt;   指定媒体会话，添加图层到容器，调用  &lt;code&gt;AVCaptureSession&lt;/code&gt;  中的 &lt;code&gt;StartRunning&lt;/code&gt;  方法开始捕捉&lt;/li&gt;
&lt;li&gt;将捕捉到内容保存到指定文件中&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;详解镜头采集类&quot;&gt;&lt;a href=&quot;#详解镜头采集类&quot; class=&quot;headerlink&quot; title=&quot;详解镜头采集类&quot;&gt;&lt;/a&gt;详解镜头采集类&lt;/h2&gt;&lt;h3 id=&quot;AVCaptureSession&quot;&gt;&lt;a href=&quot;#AVCaptureSession&quot; class=&quot;headerlink&quot; title=&quot;AVCaptureSession&quot;&gt;&lt;/a&gt;AVCaptureSession&lt;/h3&gt;&lt;p&gt;小编查看 &lt;code&gt;AVCaptureSession.h&lt;/code&gt;文件看到，在镜头采集的过程中有两种实现方式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;使用系统 &lt;code&gt;AVCaptureSession&lt;/code&gt;自动配置输入和输出&lt;/li&gt;
&lt;li&gt;手动配置输入和输出之间的对应关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;（1） AVCaptureSession 初始化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;AVCaptureSession&lt;/code&gt; 自动配置输入和输出之间对应关系&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureSession&lt;/span&gt; *captureSession = [[&lt;span class=&quot;built_in&quot;&gt;AVCaptureSession&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; *audioCaptureDevice = [&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; defaultDeviceWithMediaType:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeAudio&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; *audioInput = [&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; deviceInputWithDevice:audioCaptureDevice error:&amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[captureSession beginConfiguration];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (audioInput) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//// Handle the failure.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [captureSession commitConfiguration];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([captureSession canAddInput:audioInput]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [captureSession addInput:audioInput];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Handle the failure.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [captureSession commitConfiguration];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码是 &lt;code&gt;AVCaptureSession&lt;/code&gt; 进行初始化并且实现初始化麦克风进行相关音频录制，并添加到 &lt;code&gt;AVCaptureSession&lt;/code&gt;中。&lt;br&gt;&lt;code&gt;beginConfiguration&lt;/code&gt; &amp;amp; &lt;code&gt;commitConfiguration&lt;/code&gt; 在进行配置 &lt;code&gt;AVCaptureSession&lt;/code&gt; 的相关属性值时需要对这两个函数调用，并且这两个函数是成对出现。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;手动配置 &lt;code&gt;AVCaptureSession&lt;/code&gt; 输入和输出之间对应关系&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureSession&lt;/span&gt; *session = [[&lt;span class=&quot;built_in&quot;&gt;AVCaptureSession&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [session beginConfiguration];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; *videoDevice = [&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; defaultDeviceWithMediaType:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeVideo&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; *videoInput = [&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; deviceInputWithDevice:videoDevice error:&amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!videoInput) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//handle configuration video device&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureInputPort&lt;/span&gt; *videoPort = videoInput.ports[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    error = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; *audioDevice = [&lt;span class=&quot;built_in&quot;&gt;AVCaptureDevice&lt;/span&gt; defaultDeviceWithMediaType:&lt;span class=&quot;built_in&quot;&gt;AVMediaTypeAudio&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; *audioInput = [&lt;span class=&quot;built_in&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; deviceInputWithDevice:audioDevice error:&amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!videoInput) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//handle configuration audio device&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureInputPort&lt;/span&gt; *audioPort = audioInput.ports[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureInputPort&lt;/span&gt; *&amp;gt; *inputPorts = @[videoPort, audioPort];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureVideoDataOutput&lt;/span&gt; *videoDataOutput = [[&lt;span class=&quot;built_in&quot;&gt;AVCaptureVideoDataOutput&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureConnection&lt;/span&gt; *connection = [&lt;span class=&quot;built_in&quot;&gt;AVCaptureConnection&lt;/span&gt; connectionWithInputPorts:inputPorts output:videoDataOutput];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([session canAddConnection:connection]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [session addConnection:connection];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//handle session can not add AVCaptureConnection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [session commitConfiguration];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [session commitConfiguration];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面👆代码是使用 &lt;code&gt;AVCaptureConnection&lt;/code&gt;实现在 &lt;code&gt;AVCaptureSession&lt;/code&gt; 使输入和输出进行自己配置。&lt;br&gt;详细的细节会在 &lt;code&gt;FYCameraKit&lt;/code&gt; 进行详细的讲解。 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注释：&lt;br&gt;1）只有在调用 &lt;code&gt;beginConfiguration&lt;/code&gt; 时我们对 &lt;code&gt;AVCaptureSession&lt;/code&gt; 配置才会被真正开始修改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;（2） AVCaptureSession 中断&lt;/p&gt;
&lt;p&gt;在音视频录制过程中可能对因为电话导致中断，开发过程中提供中断结束后获取中断产生的原因。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注册中断监听 &amp;amp; 删除监听&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//监听注册&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] addObserver:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; selector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(handleCaptureSession:) name:&lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionEndedNotification&lt;/span&gt; object:_session];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//监听清除   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] removeObserver:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; name:&lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionEndedNotification&lt;/span&gt; object:_session];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;从传递的 &lt;code&gt;userInfo&lt;/code&gt; 通过关键 &lt;code&gt;key&lt;/code&gt; 获取原因：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionReasonKey&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;获取具体的中断原因：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionReason&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionReasonVideoDeviceNotAvailableInBackground&lt;/span&gt;               = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//从后台运行开启 camera，不够 iOS 9.0 之后不提供中断 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionReasonAudioDeviceInUseByAnotherClient&lt;/span&gt;                   = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//音频软软件被占用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionReasonVideoDeviceInUseByAnotherClient&lt;/span&gt;                   = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//视频软件被占用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionReasonVideoDeviceNotAvailableWithMultipleForegroundApps&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//全屏或者是录制屏幕变化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;监听事件的处理&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)handleCaptureSession:(&lt;span class=&quot;built_in&quot;&gt;NSNotification&lt;/span&gt; *)notification &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionReason&lt;/span&gt; reason = [[notification.userInfo objectForKey:&lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionReasonKey&lt;/span&gt;] unsignedIntegerValue];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (reason) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionReasonVideoDeviceNotAvailableInBackground&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//handle device not available background&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionReasonAudioDeviceInUseByAnotherClient&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//handle that audio was occupied  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionReasonVideoDeviceInUseByAnotherClient&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//handle that video was occupied  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;AVCaptureSessionInterruptionReasonVideoDeviceNotAvailableWithMultipleForegroundApps&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//handle that UI was multiple&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实现拍照和视频录制的 &lt;code&gt;FYCameraKit&lt;/code&gt; 的下载地址： &lt;a href=&quot;https://github.com/boilWater/FYCameraKit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FYCameraKit&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;参考资料：&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/documentation/avfoundation/avcapturesession?changes=latest_minor&amp;amp;language=objc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AVCaptureSession&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/documentation/avfoundation/avcapturedevice&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AVCaptureDevice&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/documentation/avfoundation/avcaptureconnection?changes=latest_minor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AVCaptureConnection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第一次发布：2017/8/10 20:49:21 星期四&lt;br&gt;第二次发布：2017/8/10 23:36:34 星期四&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;iPhone 手机在图片拍照和视频录制方面有很强大的功能，小编认为如果很好使用 iPhone 拍摄出很好照片 &amp;amp; 录制很有趣的视频。本章将详细讲解 &lt;code&gt;AVCaptureSession&lt;/code&gt; ，并最后给出 &lt;code&gt;FYCameraKit&lt;/code&gt; 项目Demo。&lt;br&gt;下面小编为大家讲解 iOS 拍照和视频录制功能实现，下图是镜头采集需要的类：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-b727b7f54b3df9bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-Camera Capture (iOS 镜头采集).png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-视频大纲总结</title>
    <link href="http://yoursite.com/2017/06/09/iOS-%E8%A7%86%E9%A2%91%E5%A4%A7%E7%BA%B2%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/06/09/iOS-视频大纲总结/</id>
    <published>2017-06-08T16:31:48.000Z</published>
    <updated>2017-06-13T15:30:57.000Z</updated>
    
    <content type="html">&lt;p&gt;本次博客思路来自与公司的一次技术分享。前段时间被公司委派做视频相关的开发，就把视频总体内容梳理一下当做备忘。&lt;/p&gt;
&lt;p&gt;下面是本博文的写作思路：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-bbdb773a30fc44a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-视频大纲总结.png&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;流媒体数据接收到播放&quot;&gt;&lt;a href=&quot;#流媒体数据接收到播放&quot; class=&quot;headerlink&quot; title=&quot;流媒体数据接收到播放&quot;&gt;&lt;/a&gt;流媒体数据接收到播放&lt;/h2&gt;&lt;p&gt;在网络传输过程中我们接收到相关媒体数据要经过一些列的处理来实现对媒体数据的播放，具体过程如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-aab07b57fde17c34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS 视频播放流程图.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看出我们在获取流媒体协议需要经过一下处理方式：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;解协议 —&amp;gt; 解封装  —&amp;gt; 音视频的解码 （实现音视频同步 &amp;amp; 播放）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;流媒体数据解析&quot;&gt;&lt;a href=&quot;#流媒体数据解析&quot; class=&quot;headerlink&quot; title=&quot;流媒体数据解析&quot;&gt;&lt;/a&gt;流媒体数据解析&lt;/h3&gt;&lt;p&gt;在获取流媒体数据后，要对其进行协议的解析来获取封装的媒体数据进行播放。我们常见的协议：&lt;code&gt;HTTP&lt;/code&gt;、&lt;code&gt;RTMP&lt;/code&gt;和&lt;code&gt;MMS&lt;/code&gt;媒体协议&lt;/p&gt;
&lt;h4 id=&quot;协议简介&quot;&gt;&lt;a href=&quot;#协议简介&quot; class=&quot;headerlink&quot; title=&quot;协议简介&quot;&gt;&lt;/a&gt;协议简介&lt;/h4&gt;&lt;ul&gt;&lt;br&gt;&lt;li&gt;HTTP：超文本传输协议（HyperText Transfer Protocol）是一个客户端（用户）和服务端（网站）请求和应答的标准。&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/超文本传输协议&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考地址：&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;br&gt;&lt;br&gt;&lt;li&gt;RTMP：实时信息传输协议（Real Time Message Protocol）基于TCP实现持久链接和低延迟通信。流分解成片，客户端和服务端可设置大小（音：64，视频：128）。&lt;br&gt;&lt;a href=&quot;http://mingyangshang.github.io/2016/03/06/RTMP协议/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考地址1：&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://translate.google.co.jp/translate?hl=zh-CN&amp;amp;sl=en&amp;amp;u=https://en.wikipedia.org/wiki/Real-Time_Messaging_Protocol&amp;amp;prev=search&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考地址2：&lt;/a&gt;&lt;/li&gt;&lt;br&gt;&lt;br&gt;&lt;li&gt;MMS：串流媒体传送协议（Microsoft Media Server）用来访问并流式接受 Windows Media 服务器中 .asf 文件协议。&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/MMS_(协议&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考地址：&lt;/a&gt;)&lt;/li&gt;&lt;br&gt;&lt;br&gt;&lt;li&gt;HLS：流媒体网络传输协议（HTTP Live Streaming）把数据源分解为基于 HTTP 的片段，每次下载一些。下载数据之前需要一个包含数据的 m3u8 playlist文件来查找可用的媒体流。&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/HTTP_Live_Streaming&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考地址：&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;br&gt;&lt;br&gt;&lt;li&gt;RTP：实时传输协议（Real-time Transport Protocol）被设置为多播协议，和 RTP 协议、RTP 控制协议一起使用。&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/实时传输协议&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考地址：&lt;/a&gt;&lt;/li&gt;&lt;br&gt;&lt;br&gt;&lt;li&gt;RTCP：实时传输控制协议（Real-time Transport Protocol）搜集媒体链接统计信息，为 RTP 提供服务质量反馈。&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/实时传输控制协议&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考地址：&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;br&gt;&lt;br&gt;&lt;li&gt;RTSP：实时流协议，用于建立和控制终端之间的媒体会话，和 RTP 、RTCP 结合的，媒体流传输。&lt;br&gt;&lt;a href=&quot;https://translate.google.co.jp/translate?hl=zh-CN&amp;amp;sl=en&amp;amp;u=https://en.wikipedia.org/wiki/Real_Time_Streaming_Protocol&amp;amp;prev=search&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考地址：&lt;/a&gt;&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;

&lt;h3 id=&quot;媒体封装格式&quot;&gt;&lt;a href=&quot;#媒体封装格式&quot; class=&quot;headerlink&quot; title=&quot;媒体封装格式&quot;&gt;&lt;/a&gt;媒体封装格式&lt;/h3&gt;&lt;p&gt;媒体封装就是把视频数据和音频数据进行按照一定的格式进行封装。我们常见的封装格式：&lt;code&gt;AVI&lt;/code&gt;、&lt;code&gt;MP4&lt;/code&gt;、&lt;code&gt;TS&lt;/code&gt;、&lt;code&gt;FLV&lt;/code&gt;、&lt;code&gt;MKV&lt;/code&gt;和&lt;code&gt;RMVB&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;媒体封装格式简介&quot;&gt;&lt;a href=&quot;#媒体封装格式简介&quot; class=&quot;headerlink&quot; title=&quot;媒体封装格式简介&quot;&gt;&lt;/a&gt;媒体封装格式简介&lt;/h4&gt;&lt;p&gt;下面是对媒体封装格式的整理和简介：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-0491caa322fa42c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;媒体封装格式整理.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;音视频编码格式&quot;&gt;&lt;a href=&quot;#音视频编码格式&quot; class=&quot;headerlink&quot; title=&quot;音视频编码格式&quot;&gt;&lt;/a&gt;音视频编码格式&lt;/h3&gt;&lt;p&gt;在音视频录制完成后为方便传输需要对其进行编码压缩处理，我们常见的音视频编码格式：&lt;/p&gt;
&lt;p&gt;视频编码格式：&lt;code&gt;H.264&lt;/code&gt;、&lt;code&gt;H.265(HEVC)&lt;/code&gt;、&lt;code&gt;MPEG4&lt;/code&gt;、&lt;code&gt;MPEG2&lt;/code&gt;、&lt;code&gt;VP9&lt;/code&gt;、&lt;code&gt;VP8&lt;/code&gt;和&lt;code&gt;VC-1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;音频编码格式：&lt;code&gt;AAC&lt;/code&gt;、&lt;code&gt;AC-3&lt;/code&gt;、&lt;code&gt;MP3&lt;/code&gt;和&lt;code&gt;WMP&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;视音频编码格式&quot;&gt;&lt;a href=&quot;#视音频编码格式&quot; class=&quot;headerlink&quot; title=&quot;视音频编码格式&quot;&gt;&lt;/a&gt;视音频编码格式&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-1e3ce321225f5706.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;视音频编码格式.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;编码格式地址&quot;&gt;&lt;a href=&quot;#编码格式地址&quot; class=&quot;headerlink&quot; title=&quot;编码格式地址&quot;&gt;&lt;/a&gt;编码格式地址&lt;/h4&gt;&lt;p&gt;下面是编码格式地址：&lt;/p&gt;
&lt;p&gt;H.264 :&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;地址&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;链接        &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;地址1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/H.264/MPEG-4_AVC&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zh.wikipedia.org/wiki/H.264/MPEG-4_AVC&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;地址2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://abson.github.io/2016/11/15/深入浅出理解视频编码H264结构/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://abson.github.io/2016/11/15/深入浅出理解视频编码H264结构/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;H.265 :&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;地址&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;链接        &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;地址1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;www.4k123.com/thread-6369-1-1.html&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;AAC：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;地址&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;链接        &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;地址1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;www.4k123.com/thread-6369-1-1.html&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;AC-3：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;地址&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;链接        &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;地址1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;blog.csdn.net/leixiaohua1020/article/details/11822737&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;MP3：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;地址&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;链接        &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;地址1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/MP3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zh.wikipedia.org/zh-hans/MP3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;解码简介&quot;&gt;&lt;a href=&quot;#解码简介&quot; class=&quot;headerlink&quot; title=&quot;解码简介&quot;&gt;&lt;/a&gt;解码简介&lt;/h3&gt;&lt;p&gt;在视频播放过程中我们需要对视频进行解码处理，常见的解码方式：硬解码和软解码。&lt;/p&gt;
&lt;h4 id=&quot;解码方式简介&quot;&gt;&lt;a href=&quot;#解码方式简介&quot; class=&quot;headerlink&quot; title=&quot;解码方式简介&quot;&gt;&lt;/a&gt;解码方式简介&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-b70e26b3769a95c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;软解码&amp;amp;硬解码对比.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;编码资料地址&quot;&gt;&lt;a href=&quot;#编码资料地址&quot; class=&quot;headerlink&quot; title=&quot;编码资料地址&quot;&gt;&lt;/a&gt;编码资料地址&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;框架名称&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;资料地址-1&lt;/th&gt;
&lt;th&gt;资料地址-2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AVFoundation&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;http://yoferzhang.com/post/20160803AVFoundation01Introduction/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://yoferzhang.com/post/20160803AVFoundation01Introduction/&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.superqq.com/blog/2015/08/24/avfoundation-gpuimage-find/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.superqq.com/blog/2015/08/24/avfoundation-gpuimage-find/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VideoToolBox&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;http://www.4k123.com/thread-6369-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.4k123.com/thread-6369-1-1.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FFMpeg&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;blog.csdn.net/leixiaohua1020/article/category/1360795&lt;/td&gt;
&lt;td&gt;www.tuicool.com/articles/22A7na3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;CPU&lt;/code&gt; &amp;amp; &lt;code&gt;GPU&lt;/code&gt; 的参考：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;框架名称&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;资料地址-1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/中央处理器&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zh.wikipedia.org/wiki/中央处理器&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GPU&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh/圖形處理器&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zh.wikipedia.org/zh/圖形處理器&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;AVFoundation-框架介绍&quot;&gt;&lt;a href=&quot;#AVFoundation-框架介绍&quot; class=&quot;headerlink&quot; title=&quot;AVFoundation 框架介绍&quot;&gt;&lt;/a&gt;AVFoundation 框架介绍&lt;/h3&gt;&lt;p&gt;AVFoundation 可以用来播放和创建基于时间视听媒体的框架之一，提供基于时间的视听数据详细的 Objective-C上的接口。&lt;/p&gt;
&lt;h4 id=&quot;AVFoundation-功能介绍&quot;&gt;&lt;a href=&quot;#AVFoundation-功能介绍&quot; class=&quot;headerlink&quot; title=&quot;AVFoundation 功能介绍&quot;&gt;&lt;/a&gt;AVFoundation 功能介绍&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;AVFoundation&lt;/code&gt; 可以实现视频的播放、编辑、静态媒体的捕捉、输出和时间媒体的表现等功能，如果仅仅是播放电影的话可以使用 &lt;code&gt;AVKit&lt;/code&gt;框架。 &lt;/p&gt;
&lt;h4 id=&quot;AVFoundation-接口介绍&quot;&gt;&lt;a href=&quot;#AVFoundation-接口介绍&quot; class=&quot;headerlink&quot; title=&quot;AVFoundation 接口介绍&quot;&gt;&lt;/a&gt;AVFoundation 接口介绍&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-c3069ae787712d75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-AVFoundation-AVMutableComposition-AVAssetTrack.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-ed13785f38e3a77c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-AVFoundation-AVMutableComposition-AVMutableAudioMix.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-1ee84500bda738b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-AVFoundation-AVMutableComposition-AVMutableVideoComposition.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-9993bccb095d6642.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-AVFoundation-AVMutableComposition-AVAssetExportSession.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;AVFoundation-类继承关系&quot;&gt;&lt;a href=&quot;#AVFoundation-类继承关系&quot; class=&quot;headerlink&quot; title=&quot;AVFoundation 类继承关系&quot;&gt;&lt;/a&gt;AVFoundation 类继承关系&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/boilWater/boilWater.github.io/tree/master/Images/PPT&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;公司分享 PPT 下载地址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本次博客思路来自与公司的一次技术分享。前段时间被公司委派做视频相关的开发，就把视频总体内容梳理一下当做备忘。&lt;/p&gt;
&lt;p&gt;下面是本博文的写作思路：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-bbdb773a30fc44a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-视频大纲总结.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-开发过程中的错误处理</title>
    <link href="http://yoursite.com/2017/05/31/NSError(%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF)/"/>
    <id>http://yoursite.com/2017/05/31/NSError(错误信息)/</id>
    <published>2017-05-31T06:35:13.000Z</published>
    <updated>2017-06-01T09:51:07.000Z</updated>
    
    <content type="html">&lt;p&gt;开发过过程中我们经常会遇到异常问题&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-ebec37c09e21ba91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS异常.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;iOS-开发过程中的错误处理&quot;&gt;&lt;a href=&quot;#iOS-开发过程中的错误处理&quot; class=&quot;headerlink&quot; title=&quot;iOS-开发过程中的错误处理&quot;&gt;&lt;/a&gt;iOS-开发过程中的错误处理&lt;/h1&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;我们在程序开发过程中经常会遇到异常，对异常的处理一般采用打印或者直接抛出。这样也可以很方便我们调试过程有所参考，而且方便我们查看异常产生的位置信息&lt;/p&gt;
&lt;h3 id=&quot;NSError-错误信息&quot;&gt;&lt;a href=&quot;#NSError-错误信息&quot; class=&quot;headerlink&quot; title=&quot;NSError(错误信息)&quot;&gt;&lt;/a&gt;NSError(错误信息)&lt;/h3&gt;&lt;h4 id=&quot;采用NSError的情况&quot;&gt;&lt;a href=&quot;#采用NSError的情况&quot; class=&quot;headerlink&quot; title=&quot;采用NSError的情况&quot;&gt;&lt;/a&gt;采用NSError的情况&lt;/h4&gt;&lt;p&gt;  使用 &lt;code&gt;NSError&lt;/code&gt; 的形式可以把程序中导致错误原因回报给调用者，而且使程序正常运行不会造成奔溃的后果&lt;/p&gt;
&lt;h4 id=&quot;NSError包含的内容&quot;&gt;&lt;a href=&quot;#NSError包含的内容&quot; class=&quot;headerlink&quot; title=&quot;NSError包含的内容&quot;&gt;&lt;/a&gt;NSError包含的内容&lt;/h4&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NSError&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt; &amp;lt;&lt;span class=&quot;title&quot;&gt;NSCopying&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;NSSecureCoding&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;@private&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *_reserved;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; _code;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *_domain;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *_userInfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NSError _code&lt;/code&gt;（错误码， 类型 &lt;code&gt;NSInteger&lt;/code&gt;)  ： 独有的错误代码，指明在某个范围内具体发生的错误。可能是一系列的错误的集合，所以可以使用 Enum 来定义。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NSError *_domain&lt;/code&gt; (错误范围，类型 &lt;code&gt;NSString&lt;/code&gt;) ：错误发生范围，通常使用一个特有的全局变量来定义。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NSError *_userInfo&lt;/code&gt; (用户信息，类型 &lt;code&gt;NSDictionary&lt;/code&gt;) ：有关错误的额外信息，其中包含一段“本地化的描述”，还可能包含导致此错误发生的另一个错误。userInfo 可以描述为一条错误的链条&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;NSError使用的两种情况&quot;&gt;&lt;a href=&quot;#NSError使用的两种情况&quot; class=&quot;headerlink&quot; title=&quot;NSError使用的两种情况&quot;&gt;&lt;/a&gt;NSError使用的两种情况&lt;/h4&gt;&lt;p&gt;   在方法实现或者是 API 设计时，我们对 &lt;code&gt;NSError&lt;/code&gt; 的使用情形有两种：在协议中传递和“输出参数”返回给调用者&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过委托协议来传递错误&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)connection:(&lt;span class=&quot;built_in&quot;&gt;NSURLConnection&lt;/span&gt; *)connection withError:(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *)error;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过代理协议的方式可以把错误报告信息传递&lt;/p&gt;
&lt;p&gt;  2.“输出参数”返回给调用者&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)doSomething:(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; **)error;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;错误的信息作为一个指向指针的指针（也就是说一个指针指向错误的对象）&lt;/p&gt;
&lt;h3 id=&quot;throw-NSException-异常抛出&quot;&gt;&lt;a href=&quot;#throw-NSException-异常抛出&quot; class=&quot;headerlink&quot; title=&quot;@throw NSException (异常抛出)&quot;&gt;&lt;/a&gt;@throw NSException (异常抛出)&lt;/h3&gt;&lt;h4 id=&quot;采用-throw-情况&quot;&gt;&lt;a href=&quot;#采用-throw-情况&quot; class=&quot;headerlink&quot; title=&quot;采用 @throw 情况&quot;&gt;&lt;/a&gt;采用 @throw 情况&lt;/h4&gt;&lt;p&gt;在 APP 运行期间遇到问题，需要对问题进行操作终止程序抛出异常，可以使用 &lt;code&gt;@throw&lt;/code&gt; 来进行&lt;/p&gt;
&lt;h4 id=&quot;采用-throw-可能产生问题&quot;&gt;&lt;a href=&quot;#采用-throw-可能产生问题&quot; class=&quot;headerlink&quot; title=&quot;采用 @throw 可能产生问题&quot;&gt;&lt;/a&gt;采用 @throw 可能产生问题&lt;/h4&gt;&lt;p&gt;在异常抛出实例中，如果抛出异常。在实现抛出异常的代码后面的执行释放资源就不会执行，这样末尾的对象就不会被释放。如果想要生成“异常安全”的代码，可以设置编译器的标志 &lt;code&gt;-fobjc-arc-exceptions&lt;/code&gt; 来进行实现。不过将要一如加一些额外的代码，在不抛出异常时也会执行代码。&lt;br&gt;在不使用 ARC 时也很难实现异常抛出情况下对内存进行释放。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; * error = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; success = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; doSomething:&amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(error &amp;amp;&amp;amp; success) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;@throw&lt;/span&gt;[&lt;span class=&quot;built_in&quot;&gt;NSException&lt;/span&gt; …];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[success release];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按照上面👆实现当在异常抛出的过程时，success 还来不及释放。所以要解决上面的问题可以在异常抛出之前对 success 进行释放，但是当需要释放的资源有很多的情况下，这样操作起来就比较复杂。&lt;/p&gt;
&lt;p&gt;在开发过程中异常抛出可以使用在 抽象的基类 实例方法中进行调用。如果基类中的方法不被 &lt;code&gt;override&lt;/code&gt; 就设置抛出异常，这样可以保证实例方法被重写。&lt;/p&gt;
&lt;h3 id=&quot;try-catch-finally-异常捕捉&quot;&gt;&lt;a href=&quot;#try-catch-finally-异常捕捉&quot; class=&quot;headerlink&quot; title=&quot;@try @catch @finally (异常捕捉)&quot;&gt;&lt;/a&gt;@try @catch @finally (异常捕捉)&lt;/h3&gt;&lt;h4 id=&quot;采用-try-catch-finally-情况&quot;&gt;&lt;a href=&quot;#采用-try-catch-finally-情况&quot; class=&quot;headerlink&quot; title=&quot;采用 @try @catch @finally 情况&quot;&gt;&lt;/a&gt;采用 @try @catch @finally 情况&lt;/h4&gt;&lt;p&gt;个人感觉 @try @catch @finally 是 @throw NSException 的加强版。前者可以实现对异常的捕捉，相关异常的输出，和异常输出后执行的 @finally 相关的具体操作。后者是对具体整理 NSExpection 抛出，并没有前者比较完善的流程化操作步骤。&lt;/p&gt;
&lt;p&gt;如果在基类中实现 @throw 进行设置 必须 override 基类中的实例方法，那么捕获异常的方法中使用 @try @catch @finally。例如：NSArray，NSDictionary 初始变量使用字面量来获取值时，需要判断返回数据是否为 nil 来防止 APP Crash。 &lt;/p&gt;
&lt;h4 id=&quot;产生问题和解决方式&quot;&gt;&lt;a href=&quot;#产生问题和解决方式&quot; class=&quot;headerlink&quot; title=&quot;产生问题和解决方式&quot;&gt;&lt;/a&gt;产生问题和解决方式&lt;/h4&gt;&lt;p&gt;当使用 &lt;code&gt;@try @catch @finally&lt;/code&gt; 时，有两种情况 &lt;code&gt;MRC&lt;/code&gt; 和 &lt;code&gt;ARC&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MRC&lt;/code&gt;（iOS 5 之前） 的环境中，上面的代码可以展示为：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SomeClass *someClass = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       someClass = [[SomeClass alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [someClass doSomeThingsThatMayThrow];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@catch&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(… …);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     [someClass release];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 ARC 的环境中，上面的代码展示为：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SomeClass *someClass = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       someClass = [[SomeClass alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [someClass doSomeThingsThatMayThrow];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@catch&lt;/span&gt;( … ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(… …);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;可以看出在 MRC 的情形下可以实现对于内存的释放，在 ARC 的情形下会系统会实现对内存的释放? 这样向正确吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;答案是：ARC 不会自动处理，因为如果要实现自动处理可能要加入大量的代码，才可以清楚对象实现抛出异常时将其清理。但是如果加入代码就会影响运行时的性能，在正常运行时也会如此。&lt;br&gt;如果在当前实现中开启 &lt;code&gt;-fobjc-arc-exception&lt;/code&gt; 的模式可以实现在 &lt;code&gt;@try @catch @finally&lt;/code&gt; 在异常情况下实现对未释放的对象进行内存的释放管理&lt;/p&gt;
&lt;h4 id=&quot;try-catch-finally-的-C-源码&quot;&gt;&lt;a href=&quot;#try-catch-finally-的-C-源码&quot; class=&quot;headerlink&quot; title=&quot;@try@catch@finally 的 C++ 源码&quot;&gt;&lt;/a&gt;@try@catch@finally 的 C++ 源码&lt;/h4&gt;&lt;p&gt;查看异常抛出的源码：&lt;br&gt;建立项目在 &lt;code&gt;main.m&lt;/code&gt; 文件中实现下面代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * argv[]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;@try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;@catch&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSException&lt;/span&gt; *exception) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;@finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开终端在 &lt;code&gt;main.m&lt;/code&gt; 终端的文件夹路径执行下面的语句&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;clang -x objective-c -rewrite-objc -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk main.m&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;会生成文件 &lt;code&gt;main.cpp&lt;/code&gt; 的文件，可以打开查看文 &lt;code&gt;@try @catch @fianlly&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;NSExpection-属性内容&quot;&gt;&lt;a href=&quot;#NSExpection-属性内容&quot; class=&quot;headerlink&quot; title=&quot;NSExpection 属性内容&quot;&gt;&lt;/a&gt;NSExpection 属性内容&lt;/h5&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;__attribute__((__objc_exception__))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#ifndef _REWRITER_typedef_NSException&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define _REWRITER_typedef_NSException&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_object &lt;span class=&quot;built_in&quot;&gt;NSException&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&amp;#125; _objc_exc_NSException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSException_IMPL&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSObject_IMPL&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSObject_IVARS&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//实例变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *name;                      &lt;span class=&quot;comment&quot;&gt;//exception 的名字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *reason;                    &lt;span class=&quot;comment&quot;&gt;//exception 产生的原因&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *userInfo;              &lt;span class=&quot;comment&quot;&gt;//exception 展示使用详细的信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; reserved;                         &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;NSError-属性内容&quot;&gt;&lt;a href=&quot;#NSError-属性内容&quot; class=&quot;headerlink&quot; title=&quot;NSError 属性内容&quot;&gt;&lt;/a&gt;NSError 属性内容&lt;/h5&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#ifndef _REWRITER_typedef_NSError&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define _REWRITER_typedef_NSError&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_object &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&amp;#125; _objc_exc_NSError;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSError_IMPL&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSObject_IMPL&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSObject_IVARS&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//实例变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *_reserved;                     &lt;span class=&quot;comment&quot;&gt;//实例调用的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; _code;                     &lt;span class=&quot;comment&quot;&gt;//error 错误码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *_domain;                   &lt;span class=&quot;comment&quot;&gt;//error 错误发生范围&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *_userInfo;             &lt;span class=&quot;comment&quot;&gt;//error 错误描述的具体信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面在 &lt;code&gt;main.m&lt;/code&gt; 中使用 &lt;code&gt;Clang&lt;/code&gt; 解析 &lt;code&gt;@try @catch @finally&lt;/code&gt; 在 C++ 环境中解析&lt;/p&gt;
&lt;ul&gt;&lt;br&gt;&lt;li&gt;没有参数&lt;br&gt;&lt;/li&gt;&lt;br&gt;&lt;br&gt;&lt;li&gt;有参数&lt;br&gt;&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;

&lt;h5 id=&quot;没有参数&quot;&gt;&lt;a href=&quot;#没有参数&quot; class=&quot;headerlink&quot; title=&quot;没有参数&quot;&gt;&lt;/a&gt;没有参数&lt;/h5&gt;&lt;p&gt;在没有参数的情况下&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;@try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;@catch&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSException&lt;/span&gt; *exception) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;@finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;经过 Clang 解析后源码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; _rethrow = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		         &lt;span class=&quot;comment&quot;&gt;//异常捕获&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    &amp;#125; catch (_objc_exc_NSException *_exception) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		         &lt;span class=&quot;built_in&quot;&gt;NSException&lt;/span&gt; *exception = (&lt;span class=&quot;built_in&quot;&gt;NSException&lt;/span&gt;*)_exception; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		         &lt;span class=&quot;comment&quot;&gt;//捕获异常，并进行抛出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	catch (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     _rethrow = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _FIN &amp;#123; _FIN(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; reth) : rethrow(reth) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		~_FIN() &amp;#123; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (rethrow) objc_exception_throw(rethrow); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; rethrow;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; _fin_force_rethow(_rethrow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		   &lt;span class=&quot;comment&quot;&gt;//异常抛出后执行的 finally 的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; IMAGE_INFO &amp;#123; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; version; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; flag; &amp;#125; _OBJC_IMAGE_INFO = &amp;#123; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;有参数&quot;&gt;&lt;a href=&quot;#有参数&quot; class=&quot;headerlink&quot; title=&quot;有参数&quot;&gt;&lt;/a&gt;有参数&lt;/h5&gt;&lt;p&gt;在有参数的情况下&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dic = @&amp;#123;&lt;span class=&quot;string&quot;&gt;@&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;@&quot;liang&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;string&quot;&gt;@&quot;last name&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;@&quot;bai&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;string&quot;&gt;@&quot;dream&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;@&quot;to be a bussinessman&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;string&quot;&gt;@&quot;work&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;@&quot;IT&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *salaryLiterals = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *salaryAtIndex = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;@try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        salaryAtIndex = [dic objectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;salary&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        salaryLiterals = dic[&lt;span class=&quot;string&quot;&gt;@&quot;salary&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;@catch&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSException&lt;/span&gt; *exception) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;error name is %@, reason : %@, userInfo : %@&quot;&lt;/span&gt;, exception.name, exception.reason, exception.userInfo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;@finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;经过 Clang 解析后源码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dic = ((&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *(*)(Class, SEL, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ObjectType *, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; *, &lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt;))(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)objc_msgSend)(objc_getClass(&lt;span class=&quot;string&quot;&gt;&quot;NSDictionary&quot;&lt;/span&gt;), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sel_registerName(&lt;span class=&quot;string&quot;&gt;&quot;dictionaryWithObjects:forKeys:count:&quot;&lt;/span&gt;), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; *)__NSContainer_literal(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;U, (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)&amp;amp;__NSConstantStringImpl__var_folders_tv_4c43vcqx24vcxx6d51n4ntc00000gn_T_main_753a25_mi_1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)&amp;amp;__NSConstantStringImpl__var_folders_tv_4c43vcqx24vcxx6d51n4ntc00000gn_T_main_753a25_mi_3, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)&amp;amp;__NSConstantStringImpl__var_folders_tv_4c43vcqx24vcxx6d51n4ntc00000gn_T_main_753a25_mi_5, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)&amp;amp;__NSConstantStringImpl__var_folders_tv_4c43vcqx24vcxx6d51n4ntc00000gn_T_main_753a25_mi_7).arr,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; *)__NSContainer_literal(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;U, (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)&amp;amp;__NSConstantStringImpl__var_folders_tv_4c43vcqx24vcxx6d51n4ntc00000gn_T_main_753a25_mi_0, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)&amp;amp;__NSConstantStringImpl__var_folders_tv_4c43vcqx24vcxx6d51n4ntc00000gn_T_main_753a25_mi_2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)&amp;amp;__NSConstantStringImpl__var_folders_tv_4c43vcqx24vcxx6d51n4ntc00000gn_T_main_753a25_mi_4,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)&amp;amp;__NSConstantStringImpl__var_folders_tv_4c43vcqx24vcxx6d51n4ntc00000gn_T_main_753a25_mi_6).arr, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;U);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *salary = __null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; _rethrow = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//使用 volatile 修饰的 _rethrow 记录异常的局部变量 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			        salary = ((&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;  _Nullable (*)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;, SEL, KeyType))(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)objc_msgSend)((&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)dic, sel_registerName(&lt;span class=&quot;string&quot;&gt;&quot;objectForKeyedSubscript:&quot;&lt;/span&gt;), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			  (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)&amp;amp;__NSConstantStringImpl__var_folders_tv_4c43vcqx24vcxx6d51n4ntc00000gn_T_main_753a25_mi_8);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    catch (_objc_exc_NSException *_exception) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		     &lt;span class=&quot;built_in&quot;&gt;NSException&lt;/span&gt; *exception = (&lt;span class=&quot;built_in&quot;&gt;NSException&lt;/span&gt;*)_exception; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		     &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;((&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)&amp;amp;__NSConstantStringImpl__var_folders_tv_4c43vcqx24vcxx6d51n4ntc00000gn_T_main_753a25_mi_9,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		            ((&lt;span class=&quot;built_in&quot;&gt;NSExceptionName&lt;/span&gt; (*)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;, SEL))(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)objc_msgSend)((&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)exception, sel_registerName(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;)), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		            ((&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * _Nullable (*)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;, SEL))(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)objc_msgSend)((&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)exception, sel_registerName(&lt;span class=&quot;string&quot;&gt;&quot;reason&quot;&lt;/span&gt;)), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		            ((&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; * _Nullable (*)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;, SEL))(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)objc_msgSend)((&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)exception, sel_registerName(&lt;span class=&quot;string&quot;&gt;&quot;userInfo&quot;&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		catch (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    _rethrow = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _FIN &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    _FIN(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; reth) : rethrow(reth) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				~_FIN() &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (rethrow) objc_exception_throw(rethrow); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; rethrow;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 _fin_force_rethow(_rethrow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    salary = __null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; IMAGE_INFO &amp;#123; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; version; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; flag; &amp;#125; _OBJC_IMAGE_INFO = &amp;#123; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;总结：&quot;&gt;&lt;a href=&quot;#总结：&quot; class=&quot;headerlink&quot; title=&quot;总结：&quot;&gt;&lt;/a&gt;总结：&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;（1）遇到奔溃问题或者是错误问题，优先使用 &lt;code&gt;NSError&lt;/code&gt; 来对奔溃和错误进行封装，然后使用 &lt;code&gt;NSLog&lt;/code&gt; 对其进行打印&lt;/p&gt;
&lt;p&gt;（2）&lt;code&gt;@try @catch @finally&lt;/code&gt; 在使用的过程中很方便，但是 &lt;code&gt;MRC&lt;/code&gt; 中如果变量较多可能会漏掉局部变量内存释放问题和 &lt;code&gt;ARC&lt;/code&gt; 中如果抛出问题，不会自动对局部变量释放（开启 &lt;code&gt;-fobjc-arc-expections&lt;/code&gt; 模式会进行释放，但是引入代码对性能有所影响）&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;开发过过程中我们经常会遇到异常问题&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-ebec37c09e21ba91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS异常.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;iOS-开发过程中的错误处理&quot;&gt;&lt;a href=&quot;#iOS-开发过程中的错误处理&quot; class=&quot;headerlink&quot; title=&quot;iOS-开发过程中的错误处理&quot;&gt;&lt;/a&gt;iOS-开发过程中的错误处理&lt;/h1&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS-Responder Chain (响应链)</title>
    <link href="http://yoursite.com/2017/05/15/iOS-Responder%20Chain/"/>
    <id>http://yoursite.com/2017/05/15/iOS-Responder Chain/</id>
    <published>2017-05-14T16:12:14.000Z</published>
    <updated>2017-06-01T07:48:51.000Z</updated>
    
    <content type="html">&lt;p&gt;工作接近一年，很久没有更新博客。工作中学到很多知识点后面将花时间整理，作为对一年知识学习的总结：&lt;/p&gt;
&lt;p&gt;下面是本篇博客的写作思路：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-56a34538a5ab0e6b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-Responder Chain.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;iOS-Responder-Chain-响应链&quot;&gt;&lt;a href=&quot;#iOS-Responder-Chain-响应链&quot; class=&quot;headerlink&quot; title=&quot;iOS-Responder Chain (响应链)&quot;&gt;&lt;/a&gt;iOS-Responder Chain (响应链)&lt;/h1&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;人与计算机交互&quot;&gt;&lt;a href=&quot;#人与计算机交互&quot; class=&quot;headerlink&quot; title=&quot;人与计算机交互&quot;&gt;&lt;/a&gt;人与计算机交互&lt;/h2&gt;&lt;p&gt;目前计算机在我们生活中扮演很重要的角色，我们与计算机之间的交互也很普遍。多数情况使用最多的是 PC 和 移动端，而两种交互方式有很大的不同&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PC 与人的交互&lt;/li&gt;
&lt;li&gt;移动端与人的交互&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;a)  在 PC 端我们通过键盘、鼠标等来对界面的内容进行操作和完成相关的任务&lt;/p&gt;
&lt;p&gt;b）在移动端我们可以通过手指对界面内容进行点击控件和实现相应的操作&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里提出一个疑问，PC 端我们通过点击可以实现控件的相关操作。但是移动端我们手指点击控件是怎么被检测点击的位置、传递信息和做出相应的操作呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里引入一个概念：Responder Chain (响应者链)&lt;/p&gt;
&lt;h2 id=&quot;Responder-Chain-响应者链&quot;&gt;&lt;a href=&quot;#Responder-Chain-响应者链&quot; class=&quot;headerlink&quot; title=&quot;Responder Chain (响应者链)&quot;&gt;&lt;/a&gt;Responder Chain (响应者链)&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;NSResponder.h 头文件的源码&lt;/li&gt;
&lt;li&gt;UIKit 控件之间的继承关系&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;NSResponder-h-头文件的源码&quot;&gt;&lt;a href=&quot;#NSResponder-h-头文件的源码&quot; class=&quot;headerlink&quot; title=&quot;NSResponder.h 头文件的源码&quot;&gt;&lt;/a&gt;NSResponder.h 头文件的源码&lt;/h5&gt;&lt;p&gt;在我们点击手机屏幕的一个控件时，与 Responder Chain (响应者链)之间联系紧密。下面是小编在 &lt;code&gt;UIKit&lt;/code&gt; 框架中找到相应相关的代码，如下：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIResponder&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt; &amp;lt;&lt;span class=&quot;title&quot;&gt;UIResponderStandardEditActions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;readonly&lt;/span&gt;, nullable) &lt;span class=&quot;built_in&quot;&gt;UIResponder&lt;/span&gt; *nextResponder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (nullable &lt;span class=&quot;built_in&quot;&gt;UIResponder&lt;/span&gt;*)nextResponder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;readonly&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; canBecomeFirstResponder;    &lt;span class=&quot;comment&quot;&gt;// default is NO&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)canBecomeFirstResponder;    &lt;span class=&quot;comment&quot;&gt;// default is NO&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)becomeFirstResponder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;readonly&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; canResignFirstResponder;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)canResignFirstResponder;    &lt;span class=&quot;comment&quot;&gt;// default is YES&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resignFirstResponder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;readonly&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; isFirstResponder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isFirstResponder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesBegan:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches withEvent:(nullable &lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesMoved:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches withEvent:(nullable &lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesEnded:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches withEvent:(nullable &lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesCancelled:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches withEvent:(nullable &lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesEstimatedPropertiesUpdated:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;_1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)pressesBegan:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UIPress&lt;/span&gt; *&amp;gt; *)presses withEvent:(nullable &lt;span class=&quot;built_in&quot;&gt;UIPressesEvent&lt;/span&gt; *)event &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;_0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)pressesChanged:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UIPress&lt;/span&gt; *&amp;gt; *)presses withEvent:(nullable &lt;span class=&quot;built_in&quot;&gt;UIPressesEvent&lt;/span&gt; *)event &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;_0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)pressesEnded:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UIPress&lt;/span&gt; *&amp;gt; *)presses withEvent:(nullable &lt;span class=&quot;built_in&quot;&gt;UIPressesEvent&lt;/span&gt; *)event &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;_0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)pressesCancelled:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UIPress&lt;/span&gt; *&amp;gt; *)presses withEvent:(nullable &lt;span class=&quot;built_in&quot;&gt;UIPressesEvent&lt;/span&gt; *)event &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;_0);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在上面 &lt;code&gt;&amp;lt;UIKit/UIResponder.h&amp;gt;&lt;/code&gt; 的文件中我们可以看出 &lt;code&gt;UIResponder&lt;/code&gt; 的类可以实现 &lt;code&gt;Touch&lt;/code&gt; 和 &lt;code&gt;Press&lt;/code&gt; 相关操作的做出监听&lt;/p&gt;
&lt;h5 id=&quot;UIKit-控件之间的继承关系&quot;&gt;&lt;a href=&quot;#UIKit-控件之间的继承关系&quot; class=&quot;headerlink&quot; title=&quot;UIKit 控件之间的继承关系&quot;&gt;&lt;/a&gt;UIKit 控件之间的继承关系&lt;/h5&gt;&lt;p&gt;下面是小编对 &lt;code&gt;UIKit&lt;/code&gt; 框架中点击相应控件有关 &lt;code&gt;Class&lt;/code&gt; (类)继承关系整理，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-faaebfb7fe3a7067.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-Responder Chain-UIKit.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由上面我们可以看出，在界面上我们平时使用控件时通过继承 &lt;code&gt;UIResponder&lt;/code&gt; 来实现对界面 &lt;code&gt;Touch&lt;/code&gt; 和 &lt;code&gt;Press&lt;/code&gt; 相关操作的做出监听&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;响应链的创建&quot;&gt;&lt;a href=&quot;#响应链的创建&quot; class=&quot;headerlink&quot; title=&quot;响应链的创建&quot;&gt;&lt;/a&gt;响应链的创建&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;控制器中的 &lt;code&gt;View&lt;/code&gt; 树状结构&lt;/li&gt;
&lt;li&gt;点击相应的测试&amp;amp;打印&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;控制器中的-View-树状结构&quot;&gt;&lt;a href=&quot;#控制器中的-View-树状结构&quot; class=&quot;headerlink&quot; title=&quot;控制器中的 View 树状结构&quot;&gt;&lt;/a&gt;控制器中的 &lt;code&gt;View&lt;/code&gt; 树状结构&lt;/h5&gt;&lt;p&gt;在手机的 GUI 中我们多数情况下使用 &lt;code&gt;UIViewController&lt;/code&gt; 和 &lt;code&gt;UINavigationViewController&lt;/code&gt; 控制器来实现界面控件的管理，其中以控制器的 &lt;code&gt;View&lt;/code&gt; 为界面显示创建和添加控件，最后形成 &lt;code&gt;View&lt;/code&gt; 的控件树状结构&lt;/p&gt;
&lt;p&gt;GUI 手机界面中，我们知道 &lt;code&gt;UIView&lt;/code&gt; 中用 &lt;code&gt;property&lt;/code&gt; (属性) &lt;code&gt;superView&lt;/code&gt; 可以用来添加新的 &lt;code&gt;UIView&lt;/code&gt; 到当前的 &lt;code&gt;View&lt;/code&gt; 中，添加的子类 &lt;code&gt;View&lt;/code&gt; 中 &lt;code&gt;property&lt;/code&gt; (属性) &lt;code&gt;nextResponder&lt;/code&gt; 可以指向父类 &lt;code&gt;View&lt;/code&gt; 的 &lt;code&gt;property&lt;/code&gt; (属性) &lt;code&gt;superView&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;每一个  &lt;code&gt;ViewController&lt;/code&gt; 中有 &lt;code&gt;property&lt;/code&gt;(属性) &lt;code&gt;view&lt;/code&gt; -&amp;gt; 既&lt;code&gt;self.view&lt;/code&gt; 来进行添加子类 &lt;code&gt;View&lt;/code&gt;，同样：&lt;code&gt;view&lt;/code&gt; 的 &lt;code&gt;property&lt;/code&gt; (属性) 通过   &lt;code&gt;property&lt;/code&gt; (属性) &lt;code&gt;nextResponder&lt;/code&gt; 来指向   &lt;code&gt;ViewController&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;下图是 &lt;code&gt;View&lt;/code&gt; 初始化布局：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-ff79d6261a13c062.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-Responder Chain-View-Front.png&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-bbfe167edcd04fed.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-Responder Chain-View-Hierarchy.png&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;点击相应的测试-amp-打印&quot;&gt;&lt;a href=&quot;#点击相应的测试-amp-打印&quot; class=&quot;headerlink&quot; title=&quot;点击相应的测试&amp;amp;打印&quot;&gt;&lt;/a&gt;点击相应的测试&amp;amp;打印&lt;/h5&gt;&lt;p&gt;在定义的 ViewA1 中重写&lt;code&gt;touch&lt;/code&gt;方法：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesBegan:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches withEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UIResponder&lt;/span&gt; *next = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; nextResponder];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMutableString&lt;/span&gt; *prefix  = &lt;span class=&quot;string&quot;&gt;@&quot;&quot;&lt;/span&gt;.mutableCopy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; != next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@%@&quot;&lt;/span&gt;, prefix, [next class]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [prefix appendString:&lt;span class=&quot;string&quot;&gt;@&quot;--&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        next = [next nextResponder];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;点击 &lt;code&gt;ViewA1&lt;/code&gt; 得到的打印结果：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-08&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;12.278&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;19441&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;727956&lt;/span&gt;] ViewA0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-08&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;12.278&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;19441&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;727956&lt;/span&gt;] --ViewA&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-08&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;12.278&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;19441&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;727956&lt;/span&gt;] ----&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-08&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;12.279&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;19441&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;727956&lt;/span&gt;] ------ViewController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-08&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;12.279&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;19441&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;727956&lt;/span&gt;] --------&lt;span class=&quot;built_in&quot;&gt;UIWindow&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-08&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;12.279&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;19441&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;727956&lt;/span&gt;] ----------&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-08&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;12.280&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;19441&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;727956&lt;/span&gt;] ------------AppDelegate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;基于上面：小编从上面代码打印的结果可以验证，子 View 的 property(属性) &lt;code&gt;nextResponder&lt;/code&gt; 指向父 View，父类的 View 的property(属性) &lt;code&gt;nextResponder&lt;/code&gt; 最后指向 ViewController &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;如何找打第一响应者&quot;&gt;&lt;a href=&quot;#如何找打第一响应者&quot; class=&quot;headerlink&quot; title=&quot;如何找打第一响应者&quot;&gt;&lt;/a&gt;如何找打第一响应者&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;探测器 &lt;code&gt;Hit - Test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;寻找第一相应的探测猜想&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;探测器-Hit-Test&quot;&gt;&lt;a href=&quot;#探测器-Hit-Test&quot; class=&quot;headerlink&quot; title=&quot;探测器 Hit - Test&quot;&gt;&lt;/a&gt;探测器 &lt;code&gt;Hit - Test&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;在响应链查找过程中，有两个函数起到很重要的作用&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *)hitTest:(&lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt;)point withEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)pointInside:(&lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt;)point withEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在响应链创建的情况下，我们在把寻找响应者的过程称为：&lt;code&gt;Hit - Testing View&lt;/code&gt; 在寻找相应 View 的过程称为：&lt;code&gt;Hit - Test&lt;/code&gt;&lt;br&gt;我们把 &lt;code&gt;Hit - Test&lt;/code&gt; 可以比作一个探测器，通过这个探测器来检测手指点击在哪个 &lt;code&gt;UIView&lt;/code&gt; 上面 &lt;/p&gt;
&lt;p&gt;通过上面的继承关系和点击后打印出的结果可以看到，当我们点击界面 &lt;code&gt;UIApplication&lt;/code&gt; 就会调用 &lt;code&gt;hitTest: withEvent&lt;/code&gt; 查看点击是否在 &lt;code&gt;UIWindow&lt;/code&gt; 中如果不在就返回 &lt;code&gt;nil&lt;/code&gt; , 如果在 &lt;code&gt;UIWindow&lt;/code&gt; 也会调用 &lt;code&gt;hitTest: withEvent&lt;/code&gt; 对&lt;code&gt;UIWindow&lt;/code&gt; 中 &lt;code&gt;subViews&lt;/code&gt; 进行探测&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;hitTest: withEvent&lt;/code&gt; 在探测过程中采用我们比较常见 递归的方式来查找点击 &lt;code&gt;UIView&lt;/code&gt;， 通过我们在初始化过程中最后被初始化的放在最上面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在点击 &lt;code&gt;ViewA1&lt;/code&gt; 来进行验证下一个 &lt;code&gt;nextResponder&lt;/code&gt; 过程中在每一个 &lt;code&gt;View&lt;/code&gt;重写 &lt;code&gt;hitTest&lt;/code&gt; 如下：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *)hitTest:(&lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt;)point withEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.isUserInteractionEnabled || &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.hidden || &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.alpha &amp;lt;= &lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ResponderChain : %@&quot;&lt;/span&gt;, [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; class]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; pointInside:point withEvent:event]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *subView &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.subviews reverseObjectEnumerator]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt; converPoin = [subView convertPoint:point fromView:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *hitTestView = [subView hitTest:converPoin withEvent:event];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hitTestView) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ViewA : hitTestView -&amp;gt; %@&quot;&lt;/span&gt;, [hitTestView class]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; hitTestView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;点击 &lt;code&gt;ViewA1&lt;/code&gt; 得到打印的结果如下：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-09&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;05.968&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;1197&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22554&lt;/span&gt;] ResponderChain : ViewB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-09&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;05.969&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;1197&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22554&lt;/span&gt;] ResponderChain : ViewA&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-09&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;05.969&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;1197&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22554&lt;/span&gt;] ResponderChain : ViewA0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-09&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;05.969&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;1197&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22554&lt;/span&gt;] ResponderChain : ViewA1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;寻找第一相应的探测猜想&quot;&gt;&lt;a href=&quot;#寻找第一相应的探测猜想&quot; class=&quot;headerlink&quot; title=&quot;寻找第一相应的探测猜想&quot;&gt;&lt;/a&gt;寻找第一相应的探测猜想&lt;/h5&gt;&lt;p&gt;根据打印的结果，我们可以验证点击具体查找的流程如下图所示：（实例是点击 viewA1）&lt;br&gt;UIApplication —&amp;gt; UIWindow  —&amp;gt; viewB —&amp;gt; viewA —&amp;gt; viewA0 —&amp;gt; viewA1&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-4b1f59d1c65500ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-Responder Chain-Hit-Testing-View.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;利用响应者在应用中的体现&quot;&gt;&lt;a href=&quot;#利用响应者在应用中的体现&quot; class=&quot;headerlink&quot; title=&quot;利用响应者在应用中的体现&quot;&gt;&lt;/a&gt;利用响应者在应用中的体现&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;改变控件的相应范围&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;改变控件的相应范围&quot;&gt;&lt;a href=&quot;#改变控件的相应范围&quot; class=&quot;headerlink&quot; title=&quot;改变控件的相应范围&quot;&gt;&lt;/a&gt;改变控件的相应范围&lt;/h5&gt;&lt;p&gt;我们可以利用 &lt;code&gt;hitTest&lt;/code&gt; 根据 &lt;code&gt;point&lt;/code&gt; 方式来重新设置 &lt;code&gt;ponit&lt;/code&gt; 的点击相应的范围大小&lt;br&gt;在 ViewB1 中实现点击相应范围在布局显示基础上下左右拓展 10 px，实现代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *)hitTest:(&lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt;)point withEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.isUserInteractionEnabled || &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.isHidden || &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.alpha &amp;lt;= &lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ResponderChain : %@&quot;&lt;/span&gt;, [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; class]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt; touchRect = &lt;span class=&quot;built_in&quot;&gt;CGRectInset&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.bounds, &lt;span class=&quot;number&quot;&gt;-10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;-10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;CGRectContainsPoint&lt;/span&gt;(touchRect, point)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *subView &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.subviews reverseObjectEnumerator]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt; converPoint = [subView convertPoint:point fromView:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *hitTestView = [subView hitTest:converPoint withEvent:event];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hitTestView) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;ViewB1 : hitTestView -&amp;gt; %@&quot;&lt;/span&gt;, [hitTestView class]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; hitTestView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;ViewB1&lt;/code&gt; 界面中实际范围，和点击相应的 &lt;code&gt;viewB1&lt;/code&gt; 外的虚框的范围也会做出相应的相应。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-f4e683de8d0ab2cb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-Responder Chain-Apply.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;打印的结果：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-09&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00.437&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;1197&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22554&lt;/span&gt;] ResponderChain : ViewB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-09&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00.437&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;1197&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22554&lt;/span&gt;] ResponderChain : ViewB1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-09&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00.437&lt;/span&gt; DesignPattern-Create[&lt;span class=&quot;number&quot;&gt;1197&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22554&lt;/span&gt;] ViewB : hitTestView -&amp;gt; ViewB1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;相关的测试的&lt;a href=&quot;https://github.com/boilWater/DesignPattern-Create.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dome&lt;/a&gt;下载地址&lt;/p&gt;
&lt;p&gt;时间：2017/5/8 23:58:44 (后面会继承写作)&lt;br&gt;修改时间： 2017/5/9 22:30:45&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;工作接近一年，很久没有更新博客。工作中学到很多知识点后面将花时间整理，作为对一年知识学习的总结：&lt;/p&gt;
&lt;p&gt;下面是本篇博客的写作思路：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-56a34538a5ab0e6b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS-Responder Chain.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;iOS-Responder-Chain-响应链&quot;&gt;&lt;a href=&quot;#iOS-Responder-Chain-响应链&quot; class=&quot;headerlink&quot; title=&quot;iOS-Responder Chain (响应链)&quot;&gt;&lt;/a&gt;iOS-Responder Chain (响应链)&lt;/h1&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS Runtime-替换方法 &amp; 消息发送转发</title>
    <link href="http://yoursite.com/2017/02/01/iOS%20Runtime-%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81%E5%92%8C%E8%BD%AC%E5%8F%91/"/>
    <id>http://yoursite.com/2017/02/01/iOS Runtime-消息发送和转发/</id>
    <published>2017-02-01T09:42:32.000Z</published>
    <updated>2017-08-25T09:21:06.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;总概&quot;&gt;&lt;a href=&quot;#总概&quot; class=&quot;headerlink&quot; title=&quot;总概&quot;&gt;&lt;/a&gt;总概&lt;/h2&gt;&lt;p&gt;在做公司项目过程中遇到一些需要进行替换原来方法情况。小编对 &lt;code&gt;Objc&lt;/code&gt; 在消息发送和转发过程整理，针对在消息发送和转发在 &lt;code&gt;runtime&lt;/code&gt; 层实现和提出的方法替换方案原理做出详细说明和记录。&lt;/p&gt;
&lt;p&gt;下面是小编本博文的写作思路：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-a56ae4460c575f24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS 消息发送和转发过程流程图.png&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;iOS-消息发送和转发过程&quot;&gt;&lt;a href=&quot;#iOS-消息发送和转发过程&quot; class=&quot;headerlink&quot; title=&quot;iOS 消息发送和转发过程&quot;&gt;&lt;/a&gt;iOS 消息发送和转发过程&lt;/h2&gt;&lt;p&gt;想要对现有的 &lt;code&gt;Method&lt;/code&gt; 进行替换找到比较可行的方案，其一可以从方法在执行过程中考虑。下面小编将整理的消息发送和转发的详细步骤进行整理。&lt;/p&gt;
&lt;h3 id=&quot;Objc-的动态特性&quot;&gt;&lt;a href=&quot;#Objc-的动态特性&quot; class=&quot;headerlink&quot; title=&quot;Objc 的动态特性&quot;&gt;&lt;/a&gt;Objc 的动态特性&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Objc&lt;/code&gt; 是基于 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;Smalltalk&lt;/code&gt; 为基础实现面向对象开发的动态语言，&lt;code&gt;Objc&lt;/code&gt;具有特色一点就是采纳了 &lt;code&gt;Smalltalk&lt;/code&gt; 语言消息的特性，所以我们在 &lt;code&gt;Objc&lt;/code&gt; 中经常使用 &lt;code&gt;[receiver message]&lt;/code&gt; 来进行消息传递。&lt;code&gt;Objc&lt;/code&gt; 的动态语言的特性可以根据 &lt;code&gt;NSObject&lt;/code&gt;方式之一来实现交互，下面看相关 &lt;code&gt;API&lt;/code&gt; （下面均可进行动态判断）：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)description;&lt;span class=&quot;comment&quot;&gt;//需要重载并为定义的类进行描述&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isKindOfClass:(Class)aClass;&lt;span class=&quot;comment&quot;&gt;//判断是否是同种类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isMemberOfClass:(Class)aClass;&lt;span class=&quot;comment&quot;&gt;//判断是否是一样成员&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)respondsToSelector:(SEL)aSelector;&lt;span class=&quot;comment&quot;&gt;//检查对象能否向相应指定的消息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)conformsToProtocol:(Protocol *)aProtocol;&lt;span class=&quot;comment&quot;&gt;//检查对象是否实现了指定协议类的方发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (IMP)methodForSelector:(SEL)aSelector;&lt;span class=&quot;comment&quot;&gt;//返回指定方法实现的地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//消息发送和转发过程调用的 API&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resolveClassMethod:(SEL)sel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resolveInstanceMethod:(SEL)sel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)forwardingTargetForSelector:(SEL)aSelector;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSMethodSignature&lt;/span&gt; *)methodSignatureForSelector:(SEL)aSelector;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)forwardInvocation:(&lt;span class=&quot;built_in&quot;&gt;NSInvocation&lt;/span&gt; *)anInvocation;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;iOS-消息发送转发机制&quot;&gt;&lt;a href=&quot;#iOS-消息发送转发机制&quot; class=&quot;headerlink&quot; title=&quot;iOS 消息发送转发机制&quot;&gt;&lt;/a&gt;iOS 消息发送转发机制&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;Objc&lt;/code&gt; 使用 Foundation 中 &lt;code&gt;NSObject&lt;/code&gt; 中实现动态特性中，上述列出消息发送和转发过程的调用的 &lt;code&gt;API&lt;/code&gt;。在整体消息从发送转发可以分为以下三个时段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动态解析&lt;/li&gt;
&lt;li&gt;快速转发&lt;/li&gt;
&lt;li&gt;慢速转发&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下图是消息发送和转发过程三个时段流程，后面给出详细说明：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-1dbe544a1221fb36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS 消息发送和转发过程流程图.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;下面是在 iOS 方法调用实现：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//未实现方法调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; performSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(finishMessage)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//消息发送和转发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resolveClassMethod:(SEL)sel &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;do method : %@&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(_cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; resolveClassMethod:sel];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resolveInstanceMethod:(SEL)sel &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;do method : %@&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(_cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; resolveInstanceMethod:sel];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)forwardingTargetForSelector:(SEL)aSelector &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;do method : %@&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(_cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; forwardingTargetForSelector:aSelector];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSMethodSignature&lt;/span&gt; *)methodSignatureForSelector:(SEL)aSelector &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;do method : %@&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(_cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMethodSignature&lt;/span&gt; *methodSignature = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; methodSignatureForSelector:aSelector];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; methodSignature;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)forwardInvocation:(&lt;span class=&quot;built_in&quot;&gt;NSInvocation&lt;/span&gt; *)anInvocation &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;do method : %@&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(_cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//打印结果：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RuntimeDemo[13659:1331712] do method : resolveInstanceMethod:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RuntimeDemo[13659:1331712] do method : resolveInstanceMethod:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RuntimeDemo[13659:1331712] do method : forwardingTargetForSelector:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RuntimeDemo[13659:1331712] do method : methodSignatureForSelector:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;动态解析&quot;&gt;&lt;a href=&quot;#动态解析&quot; class=&quot;headerlink&quot; title=&quot;动态解析&quot;&gt;&lt;/a&gt;动态解析&lt;/h4&gt;&lt;p&gt;如果要实现动态解析就要使用下面的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resolveClassMethod:(SEL)sel;&lt;span class=&quot;comment&quot;&gt;//解析类方法选择子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resolveInstanceMethod:(SEL)sel;&lt;span class=&quot;comment&quot;&gt;//解析实例方法选择子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当我们在实现 &lt;code&gt;[receiver message]&lt;/code&gt; 在没有相关实现的情况下，系统就会沿着 &lt;code&gt;resolveInstanceMethod:&lt;/code&gt; 顺着继承向上查找相关 &lt;code&gt;message&lt;/code&gt; 实现方法，如果没有找到相关实现就会返回 &lt;code&gt;NO&lt;/code&gt; 进行下一步操作。在这个过程中我们可以通过动态加载的方式，实现我们预先实现的方法。&lt;/p&gt;
&lt;p&gt;动态加载实现代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resolveInstanceMethod:(SEL)sel &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sel_isEqual(sel, &lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(finishMessage))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        class_addMethod([&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; class], &lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(finishMessage), (IMP)secondMessage, &lt;span class=&quot;string&quot;&gt;&quot;v@:&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; resolveInstanceMethod:sel];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; secondMessage(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, SEL _cmd) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;do method : %@&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(_cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//打印的结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RuntimeDemo[&lt;span class=&quot;number&quot;&gt;14426&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1422075&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; method : finishMessage&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从打印的结果来看：我们通过动态加载的方式实现预先方法的调用。但是在打印中 &lt;code&gt;SEL&lt;/code&gt; 还是原来的选择子，后面会讲解。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从上面的解决方式实现来看，严格意义上来说动态解析不是消息的转发。因为在指向过程中消息的接受的对象还是 &lt;code&gt;receiver&lt;/code&gt;， 只是把指向 &lt;code&gt;message&lt;/code&gt; 的 &lt;code&gt;IMP&lt;/code&gt; 的指针加入到 &lt;code&gt;receiver&lt;/code&gt; 的方法列表。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;快速转发&quot;&gt;&lt;a href=&quot;#快速转发&quot; class=&quot;headerlink&quot; title=&quot;快速转发&quot;&gt;&lt;/a&gt;快速转发&lt;/h4&gt;&lt;p&gt;快速转发相当于我们在请求网页是重新定向。&lt;code&gt;receiver&lt;/code&gt; 对象和其继承父类没有找到相应的实现方法，而把实现的转向其他的对象。&lt;/p&gt;
&lt;p&gt;快速转发实现代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//重定向的实现类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FarwardTarget&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)finishMessage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FarwardTarget&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)finishMessage &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;do method : %@&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(_cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//快速转发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)forwardingTargetForSelector:(SEL)aSelector &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;do method : %@&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(_cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    return [[FarwardTarget alloc] init];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class class = &lt;span class=&quot;built_in&quot;&gt;NSClassFromString&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;FarwardTarget&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt; *object = class.new;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sel_isEqual(aSelector, &lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(finishMessage))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; object;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//打印结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RuntimeDemo[15791:1601823] do method : forwardingTargetForSelector:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RuntimeDemo[15791:1601823] do method : finishMessage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;更具上面打印的结果：看出快速转发可以实现当前 &lt;code&gt;receiver&lt;/code&gt; 方法列表找不到相关的 &lt;code&gt;message&lt;/code&gt; 的 &lt;code&gt;IMP&lt;/code&gt;，可以通过制定其他的对象来进行实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;慢速转发&quot;&gt;&lt;a href=&quot;#慢速转发&quot; class=&quot;headerlink&quot; title=&quot;慢速转发&quot;&gt;&lt;/a&gt;慢速转发&lt;/h4&gt;&lt;p&gt;慢速转发过程中使用两个对象：&lt;code&gt;NSMethodSignature&lt;/code&gt; 和 &lt;code&gt;NSInvocation&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NSMethodSignature&lt;/code&gt;: 对象定义了方法的签名，签名中包含：方法的参数和返回值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NSInvocation&lt;/code&gt;: 保存了目标、选着子和参数等消息调用的必须的全部元素。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在转发过程中要是到到下面 &lt;code&gt;API&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSMethodSignature&lt;/span&gt; *)methodSignatureForSelector:(SEL)aSelector;&lt;span class=&quot;comment&quot;&gt;//在协议中实现，返回相关的方法签名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)forwardInvocation:(&lt;span class=&quot;built_in&quot;&gt;NSInvocation&lt;/span&gt; *)anInvocation;&lt;span class=&quot;comment&quot;&gt;//进行消息的委派&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)invokeWithTarget:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)anObject;&lt;span class=&quot;comment&quot;&gt;//唤醒接受者的同名方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)doesNotRecognizeSelector:(SEL)aSelector;&lt;span class=&quot;comment&quot;&gt;//不能识别方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面先直接把慢速转发的代码列出来：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//重定向的实现类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FarwardTarget&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)finishMessage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FarwardTarget&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)finishMessage &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;do method : %@&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(_cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//慢速转发实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSMethodSignature&lt;/span&gt; *)methodSignatureForSelector:(SEL)aSelector &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sel_isEqual(aSelector, &lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(finishMessage))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//创建新的方法签名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSMethodSignature&lt;/span&gt; *methodSignature = [&lt;span class=&quot;built_in&quot;&gt;NSMethodSignature&lt;/span&gt; signatureWithObjCTypes:&lt;span class=&quot;string&quot;&gt;&quot;v@:&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; methodSignature;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; methodSignatureForSelector:aSelector];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)forwardInvocation:(&lt;span class=&quot;built_in&quot;&gt;NSInvocation&lt;/span&gt; *)anInvocation &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;do method : %@&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(_cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FarwardTarget *target = [[FarwardTarget alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([target respondsToSelector:anInvocation.selector]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//唤醒接受者的同名方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [anInvocation invokeWithTarget:target];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; doesNotRecognizeSelector:anInvocation.selector];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//打印结果：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RuntimeDemo[16564:1706397] do method : forwardInvocation:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RuntimeDemo[16564:1706397] do method : finishMessage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;快速转发失败后，运行时系统先调用 &lt;code&gt;methodSignatureForSelector:&lt;/code&gt; 返回一个方法签名用于创建 &lt;code&gt;NSInvocation&lt;/code&gt; 对象，创建好后调用 &lt;code&gt;forwardInvocation:&lt;/code&gt; 方法，在改方法中 &lt;code&gt;NSInvocation&lt;/code&gt; 对象将调用 &lt;code&gt;invokeWithTarget:&lt;/code&gt; 方法唤醒新接受者中的同名方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;iOS-发送和转发小结&quot;&gt;&lt;a href=&quot;#iOS-发送和转发小结&quot; class=&quot;headerlink&quot; title=&quot;iOS 发送和转发小结&quot;&gt;&lt;/a&gt;iOS 发送和转发小结&lt;/h3&gt;&lt;p&gt;在消息发送和转发过程中没有发现实现 &lt;code&gt;message&lt;/code&gt; 的 &lt;code&gt;IMP&lt;/code&gt; 过程中三步骤中均可以实现相关的消息添加，也可以在三者中进行相关的方法替换。&lt;/p&gt;
&lt;p&gt;但是三者之间还是有各自的特点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;动态解析 : 适用于将原来的类中的方法替换掉或者延迟加载。&lt;/li&gt;
&lt;li&gt;快速转发 : 可以将消息处理转发给其他对象，使用范围更广，不只是限于原来的对象。&lt;/li&gt;
&lt;li&gt;慢速转发 : 跟快转发一样可以消息转发，但它能通过NSInvocation对象获取更多消息发送的信息，例如：target、selector、arguments和返回值等信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;iOS-消息-runtime-层实现过程&quot;&gt;&lt;a href=&quot;#iOS-消息-runtime-层实现过程&quot; class=&quot;headerlink&quot; title=&quot;iOS 消息 runtime 层实现过程&quot;&gt;&lt;/a&gt;iOS 消息 runtime 层实现过程&lt;/h2&gt;&lt;p&gt;小编在 iOS 消息发送和转发根据 &lt;code&gt;NSObject&lt;/code&gt; 方面讲述 &lt;code&gt;[receiver message]&lt;/code&gt; 消息调用处理，但是在 &lt;code&gt;runtime&lt;/code&gt; 层在怎样情形呢？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[receiver message]&lt;/code&gt; 这句的含义是：向 &lt;code&gt;receiver&lt;/code&gt; 发送名为 &lt;code&gt;message&lt;/code&gt; 的消息。&lt;/p&gt;
&lt;p&gt;打开&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html#//apple_ref/c/func/objc_msgSend&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发文档&lt;/a&gt;(在 &lt;code&gt;objc/message.h&lt;/code&gt; 中)&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[receiver message];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;是下面的表示方式：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//objc_msgSend(self, Selector);//基本表示方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc_msgSend(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, message);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中 &lt;code&gt;objc_msgSend&lt;/code&gt; 的真正实现代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;objc_msgSend(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nullable &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, SEL _Nonnull op, ...);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;小编下面简单的介绍下 &lt;code&gt;objc_msgSend&lt;/code&gt; 中的参数和如何使用 &lt;code&gt;runtime&lt;/code&gt; 实现方法替换。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;id&quot;&gt;&lt;a href=&quot;#id&quot; class=&quot;headerlink&quot; title=&quot;id&quot;&gt;&lt;/a&gt;id&lt;/h3&gt;&lt;p&gt;上面在 &lt;code&gt;objc_msgSend&lt;/code&gt; 中的第一参数 &lt;code&gt;id&lt;/code&gt;。 小编认为对于 &lt;code&gt;id&lt;/code&gt; 用该不会陌生，&lt;code&gt;id&lt;/code&gt; 是指向类实例一个指针。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_object *&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`Objc_object` 会是什么样类型呢？ [文档](https:&lt;span class=&quot;comment&quot;&gt;//opensource.apple.com/source/objc4/objc4-709/runtime/objc-private.h.auto.html)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```objc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_object &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    isa_t isa;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ISA() assumes this is NOT a tagged pointer object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class ISA();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// getIsa() allows this to be a tagged pointer object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class getIsa();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//省略 ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Objc_object&lt;/code&gt;中包含一个 &lt;code&gt;isa&lt;/code&gt; 的指针， &lt;code&gt;isa&lt;/code&gt; 是 &lt;code&gt;isa_t&lt;/code&gt; 的联合体。根据 &lt;code&gt;isa&lt;/code&gt; 指针可以获取对象所属的类。&lt;/p&gt;
&lt;h3 id=&quot;SEL&quot;&gt;&lt;a href=&quot;#SEL&quot; class=&quot;headerlink&quot; title=&quot;SEL&quot;&gt;&lt;/a&gt;SEL&lt;/h3&gt;&lt;p&gt;&lt;code&gt;objc_msgSend&lt;/code&gt; 中的第二个参数 &lt;code&gt;SEL&lt;/code&gt;，在 &lt;code&gt;Objc&lt;/code&gt; 中变现为 &lt;code&gt;selector&lt;/code&gt;。&lt;code&gt;selector&lt;/code&gt;是方法的选择器，可以视作系统用来区分方法的 &lt;code&gt;ID&lt;/code&gt;，而此 &lt;code&gt;ID&lt;/code&gt; 的类型为 &lt;code&gt;SEL&lt;/code&gt;结构。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_selector *SEL;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最本质的就是 &lt;code&gt;SEL&lt;/code&gt; 就是映射方法的字符串，小编记得可以在 &lt;code&gt;objc&lt;/code&gt; 中 &lt;code&gt;@selector()&lt;/code&gt; 和 &lt;code&gt;runtime&lt;/code&gt; 中的 &lt;code&gt;objc_registerName&lt;/code&gt; 来获取方法选着器。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：在不同类中方法名相同的 &lt;code&gt;SEL&lt;/code&gt; 相同，在同一个类中的方法名相同参数不同的 &lt;code&gt;SEL&lt;/code&gt; 相同。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;动态实现方法替换&quot;&gt;&lt;a href=&quot;#动态实现方法替换&quot; class=&quot;headerlink&quot; title=&quot;动态实现方法替换&quot;&gt;&lt;/a&gt;动态实现方法替换&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)swapMethods &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//获取要替换的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Method oldMethod = class_getInstanceMethod([&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; class], &lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(finishMessage));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!oldMethod) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//获取用来替换的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Method newMethod = class_getInstanceMethod([&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; class], &lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(secondMessage));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!newMethod) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//把两者方法进行替换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    method_exchangeImplementations(oldMethod, newMethod);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面是使用 &lt;code&gt;runtime&lt;/code&gt; 的形式用新的方法替换掉原来的方法，其中使用到的知识会在 &lt;code&gt;runtime&lt;/code&gt; 详解中解析讲解。&lt;/p&gt;
&lt;h2 id=&quot;提出替换方案&quot;&gt;&lt;a href=&quot;#提出替换方案&quot; class=&quot;headerlink&quot; title=&quot;提出替换方案&quot;&gt;&lt;/a&gt;提出替换方案&lt;/h2&gt;&lt;p&gt;在替换方法方案中，目前有 4 种：    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在消息动态解析中替换方式 ：动态解析替换的基础是没有找到实现文件，需要对实现进行屏蔽&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;runtime&lt;/code&gt; 实现动态加载替换方式 ：需要修改原来方法的名字或者修改参数&lt;/li&gt;
&lt;li&gt;使用子类继承的方式 ：不需要修改任何信息，但是如果在有子类情况下改动比较麻烦&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;Category&lt;/code&gt; 方式 ：不需要改动名字和参数，但是会引入新的文件数目&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;在替换方法过程中要根据具体的情景来进行选择合适的替换方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考资料：&lt;br&gt;&lt;a href=&quot;https://mikeash.com/pyblog/friday-qa-2009-03-27-objective-c-message-forwarding.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Message forwarding&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.mikeash.com/pyblog/friday-qa-2009-03-20-objective-c-messaging.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Objective-c-messaging&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.mulle-kybernetik.com/artikel/Optimization/opti-9.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The faster objc_msgSend&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://cocoasamurai.blogspot.com/2010/01/understanding-objective-c-runtime.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Understanding objective-c runtime&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://opensource.apple.com/source/objc4/objc4-709/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;objc4/objc4-709&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://opensource.apple.com/source/objc4/objc4-709/runtime/objc-private.h.auto.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;objc-private.h&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;总概&quot;&gt;&lt;a href=&quot;#总概&quot; class=&quot;headerlink&quot; title=&quot;总概&quot;&gt;&lt;/a&gt;总概&lt;/h2&gt;&lt;p&gt;在做公司项目过程中遇到一些需要进行替换原来方法情况。小编对 &lt;code&gt;Objc&lt;/code&gt; 在消息发送和转发过程整理，针对在消息发送和转发在 &lt;code&gt;runtime&lt;/code&gt; 层实现和提出的方法替换方案原理做出详细说明和记录。&lt;/p&gt;
&lt;p&gt;下面是小编本博文的写作思路：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-a56ae4460c575f24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS 消息发送和转发过程流程图.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS Catergory &amp; Extension(类目和类拓展)</title>
    <link href="http://yoursite.com/2017/01/25/iOS%20Categroy%20%20&%20Extension(%E7%B1%BB%E7%9B%AE%E5%92%8C%E7%B1%BB%E6%8B%93%E5%B1%95)/"/>
    <id>http://yoursite.com/2017/01/25/iOS Categroy  & Extension(类目和类拓展)/</id>
    <published>2017-01-25T09:42:32.000Z</published>
    <updated>2017-08-23T16:09:59.000Z</updated>
    
    <content type="html">&lt;p&gt;小编在做 iOS 开发过程中有时会遇到想要对现有的类添加新的方法，或者是覆盖替换原来方法情况。也在有的情况我们在类实现过程中想要隐藏一些方法和属性情况。&lt;br&gt;所以就对实现一些注意做下整理：&lt;/p&gt;
&lt;p&gt;Category : 运行期决议&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以把类实现分在不同类中实现。这样做有几个优点：1）可以减少单个类的体积 2）可以把不同的功能放在不同的 &lt;code&gt;Category&lt;/code&gt; 进行实现 3）可以多人同时开发一个类 4）可以更具具体的需要实现 &lt;code&gt;Category&lt;/code&gt; 加载等&lt;/li&gt;
&lt;li&gt;可以添加私有方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extension : 编译器决议&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以添加不想要暴露的类私有方法&lt;/li&gt;
&lt;li&gt;可以添加类属性和类实例变量&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Category-和-Extension-对比&quot;&gt;&lt;a href=&quot;#Category-和-Extension-对比&quot; class=&quot;headerlink&quot; title=&quot;Category 和 Extension 对比&quot;&gt;&lt;/a&gt;Category 和 Extension 对比&lt;/h2&gt;&lt;h3 id=&quot;Category-和-Extension-区别&quot;&gt;&lt;a href=&quot;#Category-和-Extension-区别&quot; class=&quot;headerlink&quot; title=&quot;Category 和 Extension 区别&quot;&gt;&lt;/a&gt;&lt;code&gt;Category&lt;/code&gt; 和 &lt;code&gt;Extension&lt;/code&gt; 区别&lt;/h3&gt;&lt;p&gt;Category(类目)和Extension(类拓展)有很大的区别。 &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Category&lt;/code&gt; 在运行期决定，不能对其进行添加实例变量(因为在编译器已经决定当前内存结构，如果可以添加实例变量就会造成当前类布局改变)。但是可以对现有的类进行添加类目。&lt;code&gt;SDWebImage&lt;/code&gt; 中就有大量的使用。&lt;br&gt;&lt;code&gt;Extension&lt;/code&gt; 可以看作是没有名字的 &lt;code&gt;Category&lt;/code&gt;，但是两者还是由本质的区别。&lt;code&gt;Extension&lt;/code&gt; 是在编译器就已经决定的，而且和 &lt;code&gt;interface&lt;/code&gt; 、 &lt;code&gt;implement&lt;/code&gt; 共同组成类的一部分，三者同时在编译器决定并且一起消亡。所以对 &lt;code&gt;iOS&lt;/code&gt; 中已经存在的实现类不能进行添加 &lt;code&gt;Estension&lt;/code&gt; 的拓展。注：主要作用是隐藏类的一些相关信息。&lt;a href=&quot;https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/CustomizingExistingClasses/CustomizingExistingClasses.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Category-和-Extension-具体实现&quot;&gt;&lt;a href=&quot;#Category-和-Extension-具体实现&quot; class=&quot;headerlink&quot; title=&quot;Category 和 Extension 具体实现&quot;&gt;&lt;/a&gt;&lt;code&gt;Category&lt;/code&gt; 和 &lt;code&gt;Extension&lt;/code&gt; 具体实现&lt;/h3&gt;&lt;p&gt;1）&lt;code&gt;Category&lt;/code&gt; 的实现&lt;/p&gt;
&lt;p&gt;下面是对 &lt;code&gt;NSString&lt;/code&gt; 添加类目，下面以 &lt;code&gt;NSString+Configuration&lt;/code&gt; 类目展示:&lt;/p&gt;
&lt;p&gt; &lt;code&gt;NSString+Configuration.h&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NSString&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;Configuration&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt; ,&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *name;&lt;span class=&quot;comment&quot;&gt;//添加属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)configuration;&lt;span class=&quot;comment&quot;&gt;//添加类方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)configurationWithName:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)name;&lt;span class=&quot;comment&quot;&gt;//添加实例方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;NSString+Configuration.m&lt;/code&gt;实现文件&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;NSString+Configuration.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NSString&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;Configuration&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@dynamic&lt;/span&gt; name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)configuration &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)configurationWithName:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)name &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2）&lt;code&gt;Extension&lt;/code&gt; 的具体实现，下面以 &lt;code&gt;Person&lt;/code&gt;类： &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Person.h&lt;/code&gt; 文件&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Person.m&lt;/code&gt;文件&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在这里可以添加隐藏：实例变量、实例方法、属性和类方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Category-真面目&quot;&gt;&lt;a href=&quot;#Category-真面目&quot; class=&quot;headerlink&quot; title=&quot;Category 真面目&quot;&gt;&lt;/a&gt;Category 真面目&lt;/h2&gt;&lt;p&gt;如果对 &lt;code&gt;runtime&lt;/code&gt; 有所了解，可以知道 OC 的很多是在 &lt;code&gt;struct&lt;/code&gt; 的基础上完成的。 &lt;code&gt;Category_t&lt;/code&gt; 在 &lt;code&gt;struct&lt;/code&gt; 的结构上如下(在&lt;a href=&quot;https://opensource.apple.com/source/objc4/objc4-709/runtime/objc-runtime-new.h.auto.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;objc_runtime_new.h&lt;/code&gt;&lt;/a&gt;中)：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;struct category_t &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const char *name;//Category 名字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classref_t cls;//类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct method_list_t *instanceMethods;//实例方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct method_list_t *classMethods;//类方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct protocol_list_t *protocols;//协议&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct property_list_t *instanceProperties;//类属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Fields below this point are not always present on disk.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct property_list_t *_classProperties;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    method_list_t *methodsForMeta(bool isMeta) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (isMeta) return classMethods;//返回类方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else return instanceMethods;//返回实例方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    property_list_t *propertiesForMeta(bool isMeta, struct header_info *hi);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;由上面可以看出：&lt;code&gt;Category&lt;/code&gt; 里面可以添加实例方法、类方法、协议和类属性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 &lt;code&gt;Category&lt;/code&gt; 中添加的方法会放在原来类方法的前面，在调用方法过程中会调用前面方法，就会形成被类被&lt;code&gt;覆盖&lt;/code&gt;的现象。原因是在调用类的过程中寻找调用方法是从上到下类进行查找的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;调用-Category-覆盖的方法&quot;&gt;&lt;a href=&quot;#调用-Category-覆盖的方法&quot; class=&quot;headerlink&quot; title=&quot;调用 Category 覆盖的方法&quot;&gt;&lt;/a&gt;调用 &lt;code&gt;Category&lt;/code&gt; 覆盖的方法&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;Category&lt;/code&gt; 覆盖的方法，是在查找过程中由于调用前面的方法而造成相关方法的覆盖。我们可以在调用前把 &lt;code&gt;Category&lt;/code&gt; 的方法跳过。&lt;/p&gt;
&lt;p&gt;具体实现如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Class currentClass = [Person class];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MyClass *my = [[Person alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentClass) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; methodCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Method *methodList = class_copyMethodList(currentClass, &amp;amp;methodCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IMP lastImp = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SEL lastSel = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; methodCount; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Method method = methodList[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *methodName = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithCString:sel_getName(method_getName(method)) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        encoding:&lt;span class=&quot;built_in&quot;&gt;NSUTF8StringEncoding&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([&lt;span class=&quot;string&quot;&gt;@&quot;printName&quot;&lt;/span&gt; isEqualToString:methodName]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lastImp = method_getImplementation(method);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lastSel = method_getName(method);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (*fn)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;,SEL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lastImp != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fn f = (fn)lastImp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f(my,lastSel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    free(methodList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Category-添加关联对象&quot;&gt;&lt;a href=&quot;#Category-添加关联对象&quot; class=&quot;headerlink&quot; title=&quot;Category 添加关联对象&quot;&gt;&lt;/a&gt;&lt;code&gt;Category&lt;/code&gt; 添加关联对象&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Category&lt;/code&gt; 中不能添加类的变量。但我们通常需要添加关联对象的值，可以实现关联对象来进行实现。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Person+Habit.h&lt;/code&gt;文件：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;Habit&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *dance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Person+Habit.m&lt;/code&gt;文件：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;Person+Habit.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;objc/runtime.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;Habit&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setDance:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)dance &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    objc_setAssociatedObject(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;dance&quot;&lt;/span&gt;, dance, OBJC_ASSOCIATION_COPY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)dance &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *danceObject = objc_getAssociatedObject(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;dance&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; danceObject;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考资料：&lt;br&gt;&lt;a href=&quot;https://opensource.apple.com/source/objc4/objc4-709/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;runtime&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/library/content/documentation/General/Conceptual/DevPedia-CocoaCore/Category.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Category&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/CustomizingExistingClasses/CustomizingExistingClasses.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Customizing Existing Classes&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://tech.meituan.com/DiveIntoCategory.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深入理解Objective-C&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cocoachina.com/ios/20161018/17784.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深入浅出理解分类(category）和类扩展(extension)&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;小编在做 iOS 开发过程中有时会遇到想要对现有的类添加新的方法，或者是覆盖替换原来方法情况。也在有的情况我们在类实现过程中想要隐藏一些方法和属性情况。&lt;br&gt;所以就对实现一些注意做下整理：&lt;/p&gt;
&lt;p&gt;Category : 运行期决议&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以把类实现分在不同类中实现。这样做有几个优点：1）可以减少单个类的体积 2）可以把不同的功能放在不同的 &lt;code&gt;Category&lt;/code&gt; 进行实现 3）可以多人同时开发一个类 4）可以更具具体的需要实现 &lt;code&gt;Category&lt;/code&gt; 加载等&lt;/li&gt;
&lt;li&gt;可以添加私有方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extension : 编译器决议&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以添加不想要暴露的类私有方法&lt;/li&gt;
&lt;li&gt;可以添加类属性和类实例变量&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS Deep Copy &amp; Shallow Copy(深层和浅层复制)</title>
    <link href="http://yoursite.com/2017/01/20/iOS%20%E5%A4%8D%E5%88%B6%E7%90%86%E8%A7%A3/"/>
    <id>http://yoursite.com/2017/01/20/iOS 复制理解/</id>
    <published>2017-01-20T09:42:32.000Z</published>
    <updated>2017-08-23T16:10:06.000Z</updated>
    
    <content type="html">&lt;p&gt;总概：在复制过程中有浅层 Copy和深层 Copy。从字面意思上理解：浅层 Copy 是仅仅复制指向内存对象，深层 Copy 是复制对象和对象指向的内存。&lt;/p&gt;
&lt;p&gt;下面展示浅层 Copy 和 深层 Copy 展示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-66733ce3e4c7d54d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS 深层复制和浅层复制.png&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;简言之：浅层 Copy 只复制对象内存地址不变，深层 Copy 既复制对象又复制指向的内存 &amp;amp; 内存地址发生改变。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;更具复制的对象不同可以分为两种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集合类对象复制&lt;/li&gt;
&lt;li&gt;非集合类对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;集合类复制&quot;&gt;&lt;a href=&quot;#集合类复制&quot; class=&quot;headerlink&quot; title=&quot;集合类复制&quot;&gt;&lt;/a&gt;集合类复制&lt;/h2&gt;&lt;h3 id=&quot;集合类的浅复制-Shallow-Copy&quot;&gt;&lt;a href=&quot;#集合类的浅复制-Shallow-Copy&quot; class=&quot;headerlink&quot; title=&quot;集合类的浅复制(Shallow Copy)&quot;&gt;&lt;/a&gt;集合类的浅复制(Shallow Copy)&lt;/h3&gt;&lt;p&gt;集合类在浅层复制即时 retain 计数进行 + 1，而且指向内存对象复制添加到新的集合之中。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *person = [&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; arrayWithObjects:&lt;span class=&quot;string&quot;&gt;@&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;school&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;company&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *personShallowCopy = [person copyWithZone:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;person : %p, personCopy : %p&quot;&lt;/span&gt;, person, personShallowCopy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//打印的结果：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//DeepShallowCopyDemo[31046:7675704] person : 0x604000443d20, personCopy : 0x604000443d20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;集合类的深复制-Deep-Copy&quot;&gt;&lt;a href=&quot;#集合类的深复制-Deep-Copy&quot; class=&quot;headerlink&quot; title=&quot;集合类的深复制(Deep Copy)&quot;&gt;&lt;/a&gt;集合类的深复制(Deep Copy)&lt;/h3&gt;&lt;p&gt;集合类深层复制有两种方法可以实现：&lt;/p&gt;
&lt;p&gt;1）使用 iOS 提供的 API 的接口&lt;/p&gt;
&lt;p&gt;2）使用归档(archive)和解档(unarchive)形式进行&lt;/p&gt;
&lt;p&gt;3) 使用系统的 &lt;code&gt;Copy&lt;/code&gt; 和 &lt;code&gt;MutableCopy&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;iOS-给定-API&quot;&gt;&lt;a href=&quot;#iOS-给定-API&quot; class=&quot;headerlink&quot; title=&quot;iOS 给定 API&quot;&gt;&lt;/a&gt;iOS 给定 API&lt;/h4&gt;&lt;p&gt;集合类的深层复制，只需要把 &lt;code&gt;initWithArray:copyItems:&lt;/code&gt; 的函数值设置为 &lt;code&gt;YES&lt;/code&gt; 就可以实现当前集合类实现深层复制。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *person = [&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; arrayWithObjects:&lt;span class=&quot;string&quot;&gt;@&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;school&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;company&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *personDeepCopy = [[&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; alloc] initWithArray:person copyItems:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;person : %p, personCopy : %p&quot;&lt;/span&gt;, person, personDeepCopy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//打印的结果：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//DeepShallowCopyDemo[31046:7675704] person : 0x604000443d20, personCopy : 0x604000444080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;归档-archive-和解档-unarchive&quot;&gt;&lt;a href=&quot;#归档-archive-和解档-unarchive&quot; class=&quot;headerlink&quot; title=&quot;归档(archive)和解档(unarchive)&quot;&gt;&lt;/a&gt;归档(archive)和解档(unarchive)&lt;/h4&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *person = [&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; arrayWithObjects:&lt;span class=&quot;string&quot;&gt;@&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;school&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;company&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *persionArchiveCopy = [&lt;span class=&quot;built_in&quot;&gt;NSKeyedUnarchiver&lt;/span&gt; unarchiveObjectWithData:[&lt;span class=&quot;built_in&quot;&gt;NSKeyedArchiver&lt;/span&gt; archivedDataWithRootObject:person]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;person : %p, personCopy : %p&quot;&lt;/span&gt;, person, persionArchiveCopy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//打印的结果：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//DeepShallowCopyDemo[31900:7726351] person : 0x6000004529f0, personCopy : 0x604000255a50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1）在集合类的深层复制过程中，需要满足一个前提条件：当前集合类需要实现 &lt;code&gt;NSCoping&lt;/code&gt; 或者 &lt;code&gt;NSMutableCopying&lt;/code&gt; 协议。否则会抛出异常。&lt;br&gt;（2）在使用 iOS 提供的 API 中完成的 &lt;code&gt;Copy&lt;/code&gt; 是 &lt;code&gt;one-level-deep copy&lt;/code&gt;，使用 &lt;code&gt;归档(archive)和解档(unarchive)&lt;/code&gt; 完成是真正的深层 &lt;code&gt;Copy&lt;/code&gt;。&lt;a href=&quot;https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Collections/Articles/Copying.html#//apple_ref/doc/uid/TP40010162-SW3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;苹果开发文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;使用系统的-Copy-和-MutableCopy&quot;&gt;&lt;a href=&quot;#使用系统的-Copy-和-MutableCopy&quot; class=&quot;headerlink&quot; title=&quot;使用系统的 Copy 和 MutableCopy&quot;&gt;&lt;/a&gt;使用系统的 &lt;code&gt;Copy&lt;/code&gt; 和 &lt;code&gt;MutableCopy&lt;/code&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;不可变对象的复制&lt;/li&gt;
&lt;li&gt;可变对象的复制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1)不可变对象的复制&lt;/p&gt;
&lt;p&gt;下面👇代码实现不可变对象：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *personCopy = [person &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *personMutableCopy = [person mutableCopy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;person:%p, personCopy:%p, personMutableCopy:%p&quot;&lt;/span&gt;, person, personCopy, personMutableCopy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//打印的结果:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//DeepShallowCopyDemo[33871:7842173] person:0x60000025a760, personCopy:0x60000025a760, personMutableCopy:0x60000025ab80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2)可变对象复制&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *family = [&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; arrayWithObjects:&lt;span class=&quot;string&quot;&gt;@&quot;father&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;mother&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;sister&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;brother&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;son&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;daughter&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *familyCopy = [family &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *familyMutableCopy = [family mutableCopy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;family:%p, familyCopy:%p, familyMutableCopy:%p&quot;&lt;/span&gt;, family, familyCopy, familyMutableCopy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//打印的结果:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//DeepShallowCopyDemo[33871:7842173] family:0x60000025a9d0, familyCopy:0x60000025aca0, familyMutableCopy:0x60000025abe0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;根据上面：&lt;br&gt;(1)不可变 copy 浅复制&lt;br&gt;(2)可变 copy 单层深复制&lt;br&gt;(3)不可变 mutableCopy 单层深复制&lt;br&gt;(4)可变 mutableCopy 单层深复制 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;非集合类复制&quot;&gt;&lt;a href=&quot;#非集合类复制&quot; class=&quot;headerlink&quot; title=&quot;非集合类复制&quot;&gt;&lt;/a&gt;非集合类复制&lt;/h2&gt;&lt;p&gt;在非集合类实现复制通常使用系统提供的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不可变对象的复制&lt;/li&gt;
&lt;li&gt;可变对象的复制&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;不可变对象复制&quot;&gt;&lt;a href=&quot;#不可变对象复制&quot; class=&quot;headerlink&quot; title=&quot;不可变对象复制&quot;&gt;&lt;/a&gt;不可变对象复制&lt;/h3&gt;&lt;p&gt;下面👇代码实现不可变对象：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *nameCopy = [name &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableString&lt;/span&gt; *nameMutableCopy = [name mutableCopy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;name:%p, nameCopy:%p, nameMutableCopy:%p&quot;&lt;/span&gt;, name, nameCopy, nameMutableCopy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//打印的结果:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//DeepShallowCopyDemo[32820:7780776] name:0x107356108, nameCopy:0x107356108, nameMutableCopy:0x604000247620&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;可变对象复制&quot;&gt;&lt;a href=&quot;#可变对象复制&quot; class=&quot;headerlink&quot; title=&quot;可变对象复制&quot;&gt;&lt;/a&gt;可变对象复制&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableString&lt;/span&gt; *mutableName = [&lt;span class=&quot;built_in&quot;&gt;NSMutableString&lt;/span&gt; stringWithString:&lt;span class=&quot;string&quot;&gt;@&quot;Jack Jin&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *mutableNameCopy = [mutableName &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableString&lt;/span&gt; *mutableNameMutableCopy = [mutableName mutableCopy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mutableNameCopy stringByAppendingString:&lt;span class=&quot;string&quot;&gt;@&quot;Bai&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mutableNameMutableCopy appendString:&lt;span class=&quot;string&quot;&gt;@&quot;Bai&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;mutableName:%p, mutableNameCopy:%p, mutableNameMutableCopy:%p&quot;&lt;/span&gt;, mutableName, mutableNameCopy, mutableNameMutableCopy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//打印的结果：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//DeepShallowCopyDemo[33102:7797073] mutableName:0x600000445dc0, mutableNameCopy:0xa00ec83923fb04b8, mutableNameMutableCopy:0x600000445fa0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;根据上面：&lt;br&gt;(1)不可变 copy 浅复制&lt;br&gt;(2)可变 copy 深复制&lt;br&gt;(3)不可变 mutableCopy 深复制&lt;br&gt;(4)可变 mutableCopy 深复制&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Collections/Articles/Copying.html#//apple_ref/doc/uid/TP40010162-SW3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Copying Collections&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/f84803356cbb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSCopying和NSMutableCopying协议&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Object_copying&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Object copying&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://stackoverflow.com/questions/184710/what-is-the-difference-between-a-deep-copy-and-a-shallow-copy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What is the difference between a deep copy and a shallow copy?
&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;总概：在复制过程中有浅层 Copy和深层 Copy。从字面意思上理解：浅层 Copy 是仅仅复制指向内存对象，深层 Copy 是复制对象和对象指向的内存。&lt;/p&gt;
&lt;p&gt;下面展示浅层 Copy 和 深层 Copy 展示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-66733ce3e4c7d54d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS 深层复制和浅层复制.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS 空间绘制原理</title>
    <link href="http://yoursite.com/2017/01/13/APP%E6%8E%A7%E4%BB%B6%E5%9C%A8%E5%B1%8F%E5%B9%95%E4%B8%8A%E6%98%BE%E7%A4%BA/"/>
    <id>http://yoursite.com/2017/01/13/APP控件在屏幕上显示/</id>
    <published>2017-01-13T13:57:36.000Z</published>
    <updated>2017-09-17T03:51:46.000Z</updated>
    
    <content type="html">&lt;p&gt;在每个 &lt;code&gt;App&lt;/code&gt; 中如果想要实现界面的精美，多数情况下我们需要对相关控件进行分装，采用&lt;code&gt;CocoaPods&lt;/code&gt; 进行插件化管理。&lt;br&gt;但是我们在程序里的空间是怎么显示在屏幕上的，下面将初略的讲述屏幕上显示控件的过程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下面给出整理的图形绘制思维导图：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-40724fb9be7691c4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图形绘制到屏幕上.jpg&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;使用 &lt;code&gt;Xmind&lt;/code&gt; 来展示博客讲述 &lt;code&gt;App&lt;/code&gt; 控件在屏幕上显示的思路和相关知识点的整理思路，具体思路看下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-420d6100d6bc6ea1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS 控件在屏幕上显示思维导图.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;屏幕显示图像的原理&quot;&gt;&lt;a href=&quot;#屏幕显示图像的原理&quot; class=&quot;headerlink&quot; title=&quot;屏幕显示图像的原理&quot;&gt;&lt;/a&gt;屏幕显示图像的原理&lt;/h2&gt;&lt;p&gt;记得第一台电视机是最老式的黑白电视机，上面具备天线、需要手动转动旋转调台那种，目前这种电视📺很少出现额。&lt;br&gt;上面那种老式的电视机画面的显示就是采用 &lt;code&gt;CRT&lt;/code&gt; 显示，显示的原理如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-94ee3d3de417be2c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;CRT.png&quot;&gt;&lt;br&gt;【图片来至于网络】&lt;/p&gt;
&lt;p&gt;其原理：&lt;code&gt;CRT&lt;/code&gt; 按照上面图片展示的那样，从上到下进行逐行扫描，当扫描完成就会显示一整张图像，随后电子枪回到原来的位置从头开始进行图像素材的扫描。具体的过程当显示器扫完一行换到新的一行，显示器就会发出一个水平信号：&lt;strong&gt;HSync&lt;/strong&gt;，当显示器扫完整张的图片后电子进行复位，开始下一次的重新扫描，显示器也会发出一个新的垂直信号：&lt;strong&gt;VSync&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们 &lt;code&gt;App&lt;/code&gt; 在屏幕上的刷新的频率就是 &lt;code&gt;VSync&lt;/code&gt; 信号产生的频率，所以我们在解决界面卡顿的过程就要根据 &lt;code&gt;VSync&lt;/code&gt; 的基础上进行相关的完善和优化。&lt;/p&gt;
&lt;p&gt;目前我们一般是采取双缓冲的机制， &lt;code&gt;GPU&lt;/code&gt; 会预先缓冲好一帧存放在缓冲中，让视频控制器读取。当下一阵渲染好，就直接把视频控制器的指针指向第二个缓冲器 ： 这样做的好处就是可以大大提高缓冲的效率问题。&lt;br&gt;👉🏿&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;采用双缓存可能会引入一个问题就是屏幕内容显示一半， &lt;code&gt;GPU&lt;/code&gt; 将新的内容提交到缓存区对其进行交换，视频控制器把新的下半段的显示在屏幕上&lt;br&gt;可能形成画面撕裂。&lt;/p&gt;
&lt;p&gt;解决方式：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;GPU&lt;/code&gt; 引入垂直同步&lt;code&gt;（V-Sync）&lt;/code&gt;当开启垂直同步后， &lt;code&gt;GPU&lt;/code&gt; 会等待 &lt;code&gt;VSync&lt;/code&gt; 信号发出，才会对缓存的内容进行更新，这样就可以是画面更加流畅，减少延迟&lt;/p&gt;
&lt;p&gt;iOS 设备采用双缓存 + 垂直同步； Android采用的三缓存 + 垂直同步&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在一些游戏中我们经常会见到一些场景如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-57d7c6a78203fe32.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕错位.png&quot;&gt;&lt;br&gt;【图片来至于网络】&lt;/p&gt;
&lt;h2 id=&quot;CPU-和-GPU-的工作原理&quot;&gt;&lt;a href=&quot;#CPU-和-GPU-的工作原理&quot; class=&quot;headerlink&quot; title=&quot;CPU 和 GPU 的工作原理&quot;&gt;&lt;/a&gt;CPU 和 GPU 的工作原理&lt;/h2&gt;&lt;h3 id=&quot;CPU-工作原理&quot;&gt;&lt;a href=&quot;#CPU-工作原理&quot; class=&quot;headerlink&quot; title=&quot;CPU 工作原理&quot;&gt;&lt;/a&gt;CPU 工作原理&lt;/h3&gt;&lt;p&gt;&lt;code&gt;CPU&lt;/code&gt;（中央处理器，&lt;code&gt;Central Processing Unit&lt;/code&gt;）主要是解释计算机中的指令，处理计算机软件中的数据。&lt;code&gt;CPU&lt;/code&gt; 内部存储器和输入/输出设备是计算机的三大核心组件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CPU&lt;/code&gt; 目前很大一部分是采用 冯·诺依曼结构，在工作的过程之中其过程一般可以分为四个阶段：提取、解码、执行和调回&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提取：&lt;/li&gt;
&lt;li&gt;解码：&lt;/li&gt;
&lt;li&gt;执行：&lt;/li&gt;
&lt;li&gt;调回：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-080f3f114f51b563.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;CPU.png&quot;&gt;&lt;br&gt;【图片来至于网络】&lt;/p&gt;
&lt;h3 id=&quot;GPU-工作原理&quot;&gt;&lt;a href=&quot;#GPU-工作原理&quot; class=&quot;headerlink&quot; title=&quot;GPU 工作原理&quot;&gt;&lt;/a&gt;GPU 工作原理&lt;/h3&gt;&lt;p&gt;&lt;code&gt;GPU&lt;/code&gt;（图形处理器，&lt;code&gt;Graphics Processing Unit&lt;/code&gt;）主要是进行绘图运算的微处理器，对图像进行处理和相关显示绘制工作&lt;br&gt;后面随着 &lt;code&gt;OpenGL APL&lt;/code&gt; 和 &lt;code&gt;DirectX&lt;/code&gt; 功能的出现，图形处理器可以增加可编程着色的能力，目前我们处理在屏幕上显示的任何像素，也可以在纹理在屏幕上显示前和每一个几何顶点在投射到屏幕前都可以进行相关的处理工作&lt;/p&gt;
&lt;h2 id=&quot;iOS-绘制像素在屏幕上&quot;&gt;&lt;a href=&quot;#iOS-绘制像素在屏幕上&quot; class=&quot;headerlink&quot; title=&quot;iOS 绘制像素在屏幕上&quot;&gt;&lt;/a&gt;iOS 绘制像素在屏幕上&lt;/h2&gt;&lt;h3 id=&quot;App绘制像素过程分析&quot;&gt;&lt;a href=&quot;#App绘制像素过程分析&quot; class=&quot;headerlink&quot; title=&quot;App绘制像素过程分析&quot;&gt;&lt;/a&gt;App绘制像素过程分析&lt;/h3&gt;&lt;p&gt;下面绘制像素在屏幕上的原理图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-de4eaec88c23be92.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;GPU显示.png&quot;&gt;&lt;br&gt;【图片来至于网络】&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iOS&lt;/code&gt; 界面上的内容大多是通过 &lt;code&gt;Core Animation&lt;/code&gt; 来完成绘制&lt;br&gt;在 &lt;code&gt;Mac OS&lt;/code&gt; 大多是绕过 &lt;code&gt;Core Animation&lt;/code&gt; 使用 &lt;code&gt;Core Graphics&lt;/code&gt; 来进行绘制&lt;br&gt;手游行业中直接使用 &lt;code&gt;OpenGL/OpenGL ES&lt;/code&gt; 来进行相关材质的内容绘制&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Core Animation&lt;/code&gt; 大多使用 &lt;code&gt;Core Graphics&lt;/code&gt; 来进行内容的渲染&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GPU Driver&lt;/code&gt; 是直接和 &lt;code&gt;GPU&lt;/code&gt; 进行相关交互的代码块，可以对对 &lt;code&gt;GPU&lt;/code&gt; 直接操作&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GPU&lt;/code&gt; 是专门为图形高并发计算量身定制的处理单元，优点：短时间可以实现图像浮点运算，耗电少，高效&lt;/p&gt;
&lt;h3 id=&quot;App-绘制像素硬件分析&quot;&gt;&lt;a href=&quot;#App-绘制像素硬件分析&quot; class=&quot;headerlink&quot; title=&quot;App 绘制像素硬件分析&quot;&gt;&lt;/a&gt;App 绘制像素硬件分析&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-618b4dfde6e991a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;GPU缓存.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;在图片显示的过程中，我们需要相关的 &lt;code&gt;GPU&lt;/code&gt; 对图片生成 &lt;code&gt;frame&lt;/code&gt; 的纹理，&lt;br&gt;我们在生成纹理的过程中会使用 &lt;code&gt;VRAM&lt;/code&gt; 的空间，所以在生成过程是有限制的&lt;br&gt;把相关的数据从 &lt;code&gt;CPU&lt;/code&gt; 上传输到 &lt;code&gt;GPU&lt;/code&gt; 上 ——&amp;gt; 既是把内容从 &lt;code&gt;RAM&lt;/code&gt; 上传到 &lt;code&gt;VRAM&lt;/code&gt; 上， 如果上传的纹理太大就会对性能有所影响。&lt;/p&gt;
&lt;p&gt;在文本显示的过程中，我们使用 &lt;code&gt;GPU&lt;/code&gt; 进行文本的绘制比较复杂，这会促使 &lt;code&gt;Core Text&lt;/code&gt; 和 &lt;code&gt;Core Graphics&lt;/code&gt; 来合成生成一个文本，然后上传到 &lt;code&gt;GPU&lt;/code&gt;。&lt;br&gt;但我们在界面滑动过程中， &lt;code&gt;CPU&lt;/code&gt; 只需要把相关的文本坐标发送到 &lt;code&gt;GPU&lt;/code&gt; 就行， &lt;code&gt;GPU&lt;/code&gt;会根据相关的信息进行绘制。&lt;/p&gt;
&lt;h2 id=&quot;APP绘制过程方式和细节讲解&quot;&gt;&lt;a href=&quot;#APP绘制过程方式和细节讲解&quot; class=&quot;headerlink&quot; title=&quot;APP绘制过程方式和细节讲解&quot;&gt;&lt;/a&gt;APP绘制过程方式和细节讲解&lt;/h2&gt;&lt;h3 id=&quot;合成：&quot;&gt;&lt;a href=&quot;#合成：&quot; class=&quot;headerlink&quot; title=&quot;合成：&quot;&gt;&lt;/a&gt;合成：&lt;/h3&gt;&lt;p&gt;在我们看到的所有的视图都是基于不同图片进行相关的合成而来&lt;br&gt;这里我么准守一切的图像皆纹理的概念，当把第二个纹理遮在第一个纹理上时， &lt;code&gt;GPU&lt;/code&gt; 就会把第二个纹理合成到第一个纹理中&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;合成方法很多种：&lt;/li&gt;
&lt;li&gt;如果两个纹理对其时：采用公式    ——&amp;gt;    &lt;code&gt;R&lt;/code&gt;(最终显示的色彩的值) = &lt;code&gt;S&lt;/code&gt;(上层纹理的相关的参数) +&lt;code&gt;D&lt;/code&gt;(下层纹理相关参数) * (1 - &lt;code&gt;Sa&lt;/code&gt;(上层纹理的透明度))&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;透明-VS-不透明：&quot;&gt;&lt;a href=&quot;#透明-VS-不透明：&quot; class=&quot;headerlink&quot; title=&quot;透明 VS 不透明：&quot;&gt;&lt;/a&gt;透明 VS 不透明：&lt;/h3&gt;&lt;p&gt;当纹理完全不透明时目标像素就是纹理的值， &lt;code&gt;GPU&lt;/code&gt; 就只会从目标像素直接取出纹理显示 不会做相关的操作&lt;br&gt;在加载一张没有  &lt;code&gt;alpha&lt;/code&gt; 的图片进行显示，会被默认为 &lt;code&gt;opaque&lt;/code&gt; 的属性是 &lt;code&gt;YES&lt;/code&gt; ； 加载一张图片 &lt;code&gt;alpha&lt;/code&gt; = 100%， &lt;code&gt;Core Animation&lt;/code&gt; 会认为是不为 100% 对其进行解析。&lt;/p&gt;
&lt;h3 id=&quot;像素对其-VS-不重合在一起：&quot;&gt;&lt;a href=&quot;#像素对其-VS-不重合在一起：&quot; class=&quot;headerlink&quot; title=&quot;像素对其 VS 不重合在一起：&quot;&gt;&lt;/a&gt;像素对其 VS 不重合在一起：&lt;/h3&gt;&lt;p&gt;当两个 &lt;code&gt;layer&lt;/code&gt; 完全重合在一起，这时就需要我们对其进行相关的计算&lt;br&gt;&lt;code&gt;layer&lt;/code&gt; 上所有的像素和屏幕上的像素完全对其，这就是 &lt;code&gt;layer&lt;/code&gt; 像素对其； &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;像素对不齐主要原因：&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;缩放，在图像进行缩方时，&lt;code&gt;layer&lt;/code&gt; 和屏幕的像素很难对其&lt;/li&gt;
&lt;li&gt;纹理的起点在在一个像素的边界 &lt;/li&gt;
&lt;li&gt;在像素不对其的情况下可能会要经过过多的运算， 在 &lt;code&gt;Core Animation&lt;/code&gt; 和 模拟器中 &lt;code&gt;color misaligned images&lt;/code&gt; 的选项可以进行相关的调节&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;离屏渲染：&quot;&gt;&lt;a href=&quot;#离屏渲染：&quot; class=&quot;headerlink&quot; title=&quot;离屏渲染：&quot;&gt;&lt;/a&gt;离屏渲染：&lt;/h3&gt;&lt;p&gt;离屏渲染会  合并/渲染 图层树一部分到一个新的缓存区，然后该缓冲区被渲染到屏幕上&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;离屏渲染也可能产生副作用。如果你正在直接或者间接的将mask应用到一个图层上，&lt;code&gt;Core Animation&lt;/code&gt; 为了应用这个 &lt;code&gt;mask&lt;/code&gt;，会强制进行屏幕外渲染。这会对 &lt;code&gt;GPU&lt;/code&gt; 产生重负。通常情况下 &lt;code&gt;mask&lt;/code&gt; 只能被直接渲染到帧的缓冲区中(在屏幕内)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Instrument&lt;/code&gt; 的 &lt;code&gt;Core Animation&lt;/code&gt; 工具有一个叫做 &lt;code&gt;Color Offscreen-Rendered Yellow&lt;/code&gt; 的选项，它会将已经被渲染到屏幕外缓冲区的区域标注为黄色(这个选项在模拟器中也可以用)。同时记得检查 &lt;code&gt;Color Hits Green and Misses Red&lt;/code&gt; 选项。绿色代表无论何时一个屏幕外缓冲区被复用，而红色代表当缓冲区被重新创建&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;rasterized layer&lt;/code&gt; 的缓冲区大小是有所限制的，大概是屏幕大小的两倍空间 屏幕外的缓冲区&lt;/p&gt;
&lt;h3 id=&quot;CALayer：&quot;&gt;&lt;a href=&quot;#CALayer：&quot; class=&quot;headerlink&quot; title=&quot;CALayer：&quot;&gt;&lt;/a&gt;CALayer：&lt;/h3&gt;&lt;p&gt;GPU 测试的步骤：&lt;br&gt;要告诉你，如果是 &lt;code&gt;GPU&lt;/code&gt; 限制了你的性能，你可以使用 &lt;code&gt;OpenGL ES Driver instrument&lt;/code&gt;。点击上面那个小的 i 按钮，配置一下，同时注意勾选 &lt;code&gt;Device Utilization%&lt;/code&gt;。现在，当你运行你的 &lt;code&gt;app&lt;/code&gt; 时，你可以看到你 &lt;code&gt;GPU&lt;/code&gt; 的负荷。如果这个值靠近 100%，那么你就需要把你工作的重心放在&lt;code&gt;GPU&lt;/code&gt;方面了。&lt;/p&gt;
&lt;h3 id=&quot;Core-Graphics-amp-Quartz-2D：&quot;&gt;&lt;a href=&quot;#Core-Graphics-amp-Quartz-2D：&quot; class=&quot;headerlink&quot; title=&quot;Core Graphics &amp;amp; Quartz 2D：&quot;&gt;&lt;/a&gt;Core Graphics &amp;amp; Quartz 2D：&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Core Graphics&lt;/code&gt; 是功能强大的绘图框架&lt;/p&gt;
&lt;p&gt;GPU加速下的图像处理：好的图像处理的开源第三方框架。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/BradLarson/GPUImage&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GPUImage:&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.shadertoy.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ShaderToy:&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.shaderific.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shaderific:&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;着色器的调试 ：是测算帧渲染的时间，不是 1s 渲染多少帧&lt;br&gt;FPS是帧时间的倒数，帧渲染的时间：是帧开始处理到完全结束并且渲染到屏幕或者一张图片所花费的时间。&lt;/p&gt;
&lt;p&gt;👉🏿 在移动端的 &lt;code&gt;GPU&lt;/code&gt; 中有很多是 把指令集中起来，最后统一做一次渲染  ——&amp;gt; 在测试时需要测试整个过程，而不是一个中间过程&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.sunsetlakesoftware.com/2013/10/21/optimizing-gaussian-blurs-mobile-gpu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;测试大🐮的博客 ：&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://community.imgtec.com/developers/powervr/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GPU 的测试框架：&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;想要保持高的帧速  就要保证着色器比较低的周期数  （如果是 60帧每秒， 那么在完成一个周期就需要仅仅 16.67 毫秒）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;降低着色器渲染周期方法：&quot;&gt;&lt;a href=&quot;#降低着色器渲染周期方法：&quot; class=&quot;headerlink&quot; title=&quot;降低着色器渲染周期方法：&quot;&gt;&lt;/a&gt;降低着色器渲染周期方法：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;消除条件逻辑 ：条件逻辑有时是必须的，但有时可以做优化。着色器中使用 &lt;code&gt;step()&lt;/code&gt;函数变通避免逻辑的运用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;减少依赖纹理的读取 ：在片段的着色器取样时，如果纹理坐标不是以 varying 的形式传入，而是在片段着色器中进行计算，就会发生纹理依赖。（👉🏿想从附近的像素取样，而不是计算和片段着色器中相邻像素的偏差，最好在顶点着色器中进行计算，然后把结果以 &lt;code&gt;varying&lt;/code&gt; 的方式传入片段着色器👈）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;让计算更加简单 ： 在计算过程中如果使用简单的计算可以得到一个足够近似的值，就需要避免昂贵的计算方式（例如：&lt;code&gt;sin()&lt;/code&gt;，&lt;code&gt;cos()&lt;/code&gt;，&lt;code&gt;tan()&lt;/code&gt; ）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果有可能的话，把相关计算使用到顶点着色器。😁 😀😁😀😁 😀 顶点着色器是每个顶点运行一次，片段着色器是每一个像素运行一次&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;参考资料：&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/中央处理器&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中央处理器&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/圖形處理器&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;圖形處理器&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.ibireme.com/author/ibireme/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不再安全的 OSSpinLock&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://objccn.io/issue-21-7/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GPU 加速下的图像处理&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://objccn.io/issue-21-8/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GPU 加速下的图像视觉&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://objccn.io/issue-3-1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;objccn.io-issue-3-1&lt;/a&gt;  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在每个 &lt;code&gt;App&lt;/code&gt; 中如果想要实现界面的精美，多数情况下我们需要对相关控件进行分装，采用&lt;code&gt;CocoaPods&lt;/code&gt; 进行插件化管理。&lt;br&gt;但是我们在程序里的空间是怎么显示在屏幕上的，下面将初略的讲述屏幕上显示控件的过程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下面给出整理的图形绘制思维导图：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1877765-40724fb9be7691c4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图形绘制到屏幕上.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
</feed>
