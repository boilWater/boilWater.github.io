<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JackJin&#39;s 博客</title>
  <subtitle>一位脚踏实地，拥有梦想的90后，想要一直努力追上你！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-06-04T09:01:35.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>JackJin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SDWebImage之图片缓存处理</title>
    <link href="http://yoursite.com/2016/06/04/SDWebImage%E4%B9%8B%E5%9B%BE%E7%89%87%E7%BC%93%E5%AD%98%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2016/06/04/SDWebImage之图片缓存分析/</id>
    <published>2016-06-04T08:55:11.000Z</published>
    <updated>2016-06-04T09:01:35.000Z</updated>
    
    <content type="html">&lt;p&gt;这篇文章我将接着节讲述关于SDWebImage图片下载后处理方式，缓存进行讲解。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章我将接着节讲述关于SDWebImage图片下载后处理方式，缓存进行讲解。&lt;/p&gt;

    
    </summary>
    
      <category term="第三方框架" scheme="http://yoursite.com/categories/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="三方框架解析" scheme="http://yoursite.com/tags/%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>SDWebImage之图片下载</title>
    <link href="http://yoursite.com/2016/06/03/SDWebImage/"/>
    <id>http://yoursite.com/2016/06/03/SDWebImage/</id>
    <published>2016-06-03T13:23:21.000Z</published>
    <updated>2016-06-04T08:57:52.000Z</updated>
    
    <content type="html">&lt;p&gt;我们经常使用SDWebImage在加载图片，但对于图片加载过程中怎么样实现不会深究。下面我们就对SDWebImage进行相应的分析：&lt;br&gt;&lt;a href=&quot;https://github.com/rs/SDWebImage&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;源码地址&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;SDWebImage的下载器&quot;&gt;&lt;a href=&quot;#SDWebImage的下载器&quot; class=&quot;headerlink&quot; title=&quot;SDWebImage的下载器&quot;&gt;&lt;/a&gt;SDWebImage的下载器&lt;/h2&gt;&lt;p&gt;SDWebImage的下载器是SDWebImageDownloader利用单例模式sharedDownloader，可以对下载的图片进行相关配置。可以配置的部分如下：&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;下载选项&lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;HTTP的头部&lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;压缩、下载超时、下载顺序、最大并发数等&lt;/li&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;下载选项&quot;&gt;&lt;a href=&quot;#下载选项&quot; class=&quot;headerlink&quot; title=&quot;下载选项&quot;&gt;&lt;/a&gt;下载选项&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_OPTIONS&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt;, SDWebImageDownloaderOptions) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//下载的优先级&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   SDWebImageDownloaderLowPriority = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//下载进度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   SDWebImageDownloaderProgressiveDownload = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//下载路径缓存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   SDWebImageDownloaderUseNSURLCache = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//下载过程的请求缓存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   SDWebImageDownloaderIgnoreCachedResponse = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//后台进行继续下载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   SDWebImageDownloaderContinueInBackground = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   SDWebImageDownloaderHandleCookies = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   SDWebImageDownloaderAllowInvalidSSLCertificates = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   SDWebImageDownloaderHighPriority = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;HTTP的头部设置&quot;&gt;&lt;a href=&quot;#HTTP的头部设置&quot; class=&quot;headerlink&quot; title=&quot;HTTP的头部设置&quot;&gt;&lt;/a&gt;HTTP的头部设置&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#ifdef SD_WEBP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _HTTPHeaders = [@&amp;#123;&lt;span class=&quot;string&quot;&gt;@&quot;Accept&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;@&quot;image/webp,image/*;q=0.8&quot;&lt;/span&gt;&amp;#125; mutableCopy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _HTTPHeaders = [@&amp;#123;&lt;span class=&quot;string&quot;&gt;@&quot;Accept&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;@&quot;image/*;q=0.8&quot;&lt;/span&gt;&amp;#125; mutableCopy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setValue:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)value forHTTPHeaderField:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)field &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.HTTPHeaders[field] = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.HTTPHeaders removeObjectForKey:field];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)valueForHTTPHeaderField:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)field &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.HTTPHeaders[field];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以通过上述forHTTPHeaderField的参数进行相应HTTPheader的设置，使用者可以对头部信息进行相关的添加或者是删除HTTP头部信息。&lt;/p&gt;
&lt;h3 id=&quot;线程安全&quot;&gt;&lt;a href=&quot;#线程安全&quot; class=&quot;headerlink&quot; title=&quot;线程安全&quot;&gt;&lt;/a&gt;线程安全&lt;/h3&gt;&lt;p&gt;在图片下载过程中我们要保线程访问的安全性，barrierQueue是实现网络响应的序列化实例。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// This queue is used to serialize the handling of the network responses of all&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;the download operation in a single queue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@property (SDDispatchQueueSetterSementics, nonatomic) dispatch_queue_t barrierQueue;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在保证线程安全的起见，我们对于URLCallbacks进行增改都需要放在dispatch_barrier_sync的形式放入到barrierQueue。但是如果我们只要进行相关的查询那就使用dispatch_sync放入barrierQueue中即可。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__block &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *callbacksForURL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_sync&lt;/span&gt;(sself.barrierQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    callbacksForURL = [sself.URLCallbacks[url] &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_barrier_sync(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.barrierQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; first = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.URLCallbacks[url]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.URLCallbacks[url] = [&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        first = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Handle single download of simultaneous download request for the same URL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *callbacksForURL = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.URLCallbacks[url];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; *callbacks = [&lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (progressBlock) callbacks[kProgressCallbackKey] = [progressBlock &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (completedBlock) callbacks[kCompletedCallbackKey] = [completedBlock &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[callbacksForURL addObject:callbacks];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.URLCallbacks[url] = callbacksForURL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (first) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      createCallback();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;回调&quot;&gt;&lt;a href=&quot;#回调&quot; class=&quot;headerlink&quot; title=&quot;回调&quot;&gt;&lt;/a&gt;回调&lt;/h3&gt;&lt;p&gt;在我们下载图片的过程中，每一张图片都需要开启一个线程，在每一个线程中都需要对执行一定的回调信息。这些回调的信息会以block的实行出现：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;typedef void(^SDWebImageDownloaderProgressBlock)(NSInteger receivedSize,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSInteger expectedSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typedef void(^SDWebImageDownloaderCompletedBlock)(UIImage *image, NSData *data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSError *error, BOOL finished);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typedef NSDictionary *(^SDWebImageDownloaderHeadersFilterBlock)(NSURL *url, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSDictionary *headers);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;图片下载的这些回调信息存储在SDWebImageDownloader类的URLCallbacks属性中，该属性是一个字典，key是图片的URL地址，value则是一个数组，包含每个图片的多组回调信息。&lt;/p&gt;
&lt;h3 id=&quot;下载器&quot;&gt;&lt;a href=&quot;#下载器&quot; class=&quot;headerlink&quot; title=&quot;下载器&quot;&gt;&lt;/a&gt;下载器&lt;/h3&gt;&lt;p&gt;整个下载过程中我们需要执行在本小结讲述的下载器中进行，下载器对于下载的管理都是放在-(id &lt;sdwebimageoperation&gt;)downloadImageWithURL:中的：&lt;/sdwebimageoperation&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (id &amp;lt;SDWebImageOperation&amp;gt;)downloadImageWithURL:(NSURL *)url options:(SDWebImageDownloaderOptions)options progress:(SDWebImageDownloaderProgressBlock)progressBlock completed:(SDWebImageDownloaderCompletedBlock)completedBlock &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__block SDWebImageDownloaderOperation *operation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__weak __typeof(self)wself = self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[self addProgressCallback:progressBlock completedBlock:completedBlock forURL:url createCallback:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSTimeInterval timeoutInterval = wself.downloadTimeout;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (timeoutInterval == 0.0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            timeoutInterval = 15.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// In order to prevent from potential duplicate caching (NSURLCache + SDImageCache) we disable the cache for image requests if told otherwise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSMutableURLRequest *request = [[NSMutableURLRequest alloc] initWithURL:url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cachePolicy:(options &amp;amp; SDWebImageDownloaderUseNSURLCache ? &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSURLRequestUseProtocolCachePolicy : NSURLRequestReloadIgnoringLocalCacheData)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timeoutInterval:timeoutInterval];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;request.HTTPShouldHandleCookies = (options &amp;amp; SDWebImageDownloaderHandleCookies);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;request.HTTPShouldUsePipelining = YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if (wself.headersFilter) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          request.allHTTPHeaderFields = wself.headersFilter(url, [wself.HTTPHeaders copy]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          request.allHTTPHeaderFields = wself.HTTPHeaders;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      operation = [[wself.operationClass alloc] initWithRequest:request&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        options:options&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                       progress:^(NSInteger receivedSize, NSInteger expectedSize) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                           SDWebImageDownloader *sself = wself;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                           if (!sself) return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                           __block NSArray *callbacksForURL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                           dispatch_sync(sself.barrierQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                               callbacksForURL = [sself.URLCallbacks[url] copy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                           &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                           for (NSDictionary *callbacks in callbacksForURL) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                               dispatch_async(dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                   SDWebImageDownloaderProgressBlock callback = callbacks[kProgressCallbackKey];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                   if (callback) callback(receivedSize, expectedSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                               &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      completed:^(UIImage *image, NSData *data, NSError *error, BOOL finished) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          SDWebImageDownloader *sself = wself;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          if (!sself) return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          __block NSArray *callbacksForURL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          dispatch_barrier_sync(sself.barrierQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                              callbacksForURL = [sself.URLCallbacks[url] copy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                              if (finished) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                  [sself.URLCallbacks removeObjectForKey:url];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          for (NSDictionary *callbacks in callbacksForURL) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                              SDWebImageDownloaderCompletedBlock callback = callbacks[kCompletedCallbackKey];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                              if (callback) callback(image, data, error, finished);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      cancelled:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          SDWebImageDownloader *sself = wself;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          if (!sself) return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          dispatch_barrier_async(sself.barrierQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                              [sself.URLCallbacks removeObjectForKey:url];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      operation.shouldDecompressImages = wself.shouldDecompressImages;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if (wself.urlCredential) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          operation.credential = wself.urlCredential;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125; else if (wself.username &amp;amp;&amp;amp; wself.password) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          operation.credential = [NSURLCredential credentialWithUser:wself.username password:wself.password persistence:NSURLCredentialPersistenceForSession];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if (options &amp;amp; SDWebImageDownloaderHighPriority) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          operation.queuePriority = NSOperationQueuePriorityHigh;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125; else if (options &amp;amp; SDWebImageDownloaderLowPriority) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          operation.queuePriority = NSOperationQueuePriorityLow;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [wself.downloadQueue addOperation:operation];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if (wself.executionOrder == SDWebImageDownloaderLIFOExecutionOrder) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          // Emulate LIFO execution order by systematically adding new operations as last operation&amp;apos;s dependency&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          [wself.lastAddedOperation addDependency:operation];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          wself.lastAddedOperation = operation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return operation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们在上面的方法中调用的方法(void)addProgressCallback:completedBlock:forURL:createCallback:将在访问图片请求的信息直接放入下载器。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)addProgressCallback:(SDWebImageDownloaderProgressBlock)progressBlock completedBlock:(SDWebImageDownloaderCompletedBlock)completedBlock forURL:(&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt;*)url createCallback:(SDWebImageNoParamsBlock)createCallback &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// The URL will be used as the key to the callbacks dictionary so it cannot be nil. If it is nil immediately call the completed block with no image or data.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (url == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (completedBlock != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            completedBlock(&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_barrier_sync(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.barrierQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; first = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.URLCallbacks[url]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.URLCallbacks[url] = [&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       first = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;// Handle single download of simultaneous download request for the same URL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *callbacksForURL = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.URLCallbacks[url];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; *callbacks = [&lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (progressBlock) callbacks[kProgressCallbackKey] = [progressBlock &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (completedBlock) callbacks[kCompletedCallbackKey] = [completedBlock &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [callbacksForURL addObject:callbacks];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.URLCallbacks[url] = callbacksForURL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (first) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       createCallback();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;下载操作&quot;&gt;&lt;a href=&quot;#下载操作&quot; class=&quot;headerlink&quot; title=&quot;下载操作&quot;&gt;&lt;/a&gt;下载操作&lt;/h3&gt;&lt;p&gt;在每张图片下载过程中都要调用一次具体的操作都会调用Operation，下面就分析一下中间的具体过程。&lt;br&gt;我们打开SDWebImage的文件夹可以到其中有一个SDWebImageOperation的类，如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@protocol SDWebImageOperation &amp;lt;NSObject&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)cancel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;其中我们使用NSOpation的子类来完成具体图片下载的过程，这个类就是SDWebImageDownloaderOperation。在SDWebImageDownloaderOperation类中继承NSOperation的类而且实现SDWebImageOperation的cancel的取消协议。除了继承而来的方法，该类只向外暴露了一个方法，即上面所用到的初始化方法initWithRequest:options:pregress:completed:cancelled:。&lt;/p&gt;
&lt;p&gt;对于图片的下载，SDWebImageDownloaderOperation完全依赖于URL加载系统中的NSURLConnection类（并未使用iOS7以后的NSURLSession类）。我们先来分析一下SDWebImageDownloaderOperation类中对于图片实际数据的下载处理，即NSURLConnection各代理方法的实现。&lt;/p&gt;
&lt;p&gt;首先，SDWebImageDownloaderOperation在Extention中采用了NSURLConnectionDataDelegate协议，并实现了协议的以下几个方法：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;connection:didReceiveResponse:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;connection:didReceiveData:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;connectionDidFinishLoading:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;connection:didFailWithError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;connection:willCacheResponse:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;connectionShouldUseCredentialStorage:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;connection:willSendRequestForAuthenticationChallenge:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这些方法我们就不逐一分析了，就终点分析一下connection:didReceiveResponse:和connection:didReceiveData:两个方法。&lt;/p&gt;
&lt;p&gt;connection:didReceiveResponse方法通过判断NSURLResponse的实际类型和状态码，对除304以外400以内的状态码反应。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)connection:(&lt;span class=&quot;built_in&quot;&gt;NSURLConnection&lt;/span&gt; *)connection didReceiveResponse:(&lt;span class=&quot;built_in&quot;&gt;NSURLResponse&lt;/span&gt; *)response &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//&#39;304 Not Modified&#39; is an exceptional one&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (![response respondsToSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(statusCode)] ||([((&lt;span class=&quot;built_in&quot;&gt;NSHTTPURLResponse&lt;/span&gt; *)response) statusCode] &amp;lt; &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; &amp;amp;&amp;amp; [((&lt;span class=&quot;built_in&quot;&gt;NSHTTPURLResponse&lt;/span&gt;  *)response) statusCode] != &lt;span class=&quot;number&quot;&gt;304&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; expected = response.expectedContentLength &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? (&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      response.expectedContentLength : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.expectedSize = expected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.progressBlock) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.progressBlock(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, expected);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageData = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableData&lt;/span&gt; alloc] initWithCapacity:expected];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.response = response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] postNotificationName:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      SDWebImageDownloadReceiveResponseNotification object:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt; code = [((&lt;span class=&quot;built_in&quot;&gt;NSHTTPURLResponse&lt;/span&gt; *)response) statusCode];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//This is the case when server returns &#39;304 Not Modified&#39;. It means that &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   remote image is not changed.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//In case of 304 we need just cancel the operation and return cached image       &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   from the cache.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (code == &lt;span class=&quot;number&quot;&gt;304&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; cancelInternal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.connection cancel];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] postNotificationName:SDWebImageDownloadStopNotification object:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.completedBlock) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.completedBlock(&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, [&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; errorWithDomain:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;NSURLErrorDomain&lt;/span&gt; code:[((&lt;span class=&quot;built_in&quot;&gt;NSHTTPURLResponse&lt;/span&gt; *)response) statusCode] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       userInfo:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;], &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;CFRunLoopStop&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;CFRunLoopGetCurrent&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; done];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;connection:didReceiveData:方法的主要任务是接受数据。每次接收到数据时，都会用现有的数据创建一个CGImageSourceRef对象以作处理。在首次获取到数据时（width+height==0）会从这些包含图像信息的数据中取出图像的长、宽、方向等信息以备使用。而后在图片下载完成之前，会使用CGImageSourceRef对象创建一个图像对象，经过缩放、解压缩操作后生成一个UIImage对象供完成回调使用。当然，在这个方法中还需要处理的就是进度信息。如果我们有设置进度回调的话，就调用进度回调以处理当前图片的下载进度。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)connection:(&lt;span class=&quot;built_in&quot;&gt;NSURLConnection&lt;/span&gt; *)connection didReceiveData:(&lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; *)data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageData appendData:data];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.options &amp;amp; SDWebImageDownloaderProgressiveDownload) &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.expectedSize &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.completedBlock) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// The following code is from http://www.cocoaintheshell.com/2011/05/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;progressive-images-download-imageio/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Thanks to the author @Nyx0uf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Get the total bytes downloaded &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; totalSize = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageData.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Update the data source, we must pass ALL the data, not just the new bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;CGImageSourceRef&lt;/span&gt; imageSource = &lt;span class=&quot;built_in&quot;&gt;CGImageSourceCreateWithData&lt;/span&gt;((__bridge &lt;span class=&quot;built_in&quot;&gt;CFDataRef&lt;/span&gt;)&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageData, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (width + height == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;CFDictionaryRef&lt;/span&gt; properties = &lt;span class=&quot;built_in&quot;&gt;CGImageSourceCopyPropertiesAtIndex&lt;/span&gt;(imageSource, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (properties) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; orientationValue = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;CFTypeRef&lt;/span&gt; val = &lt;span class=&quot;built_in&quot;&gt;CFDictionaryGetValue&lt;/span&gt;(properties, kCGImagePropertyPixelHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (val) &lt;span class=&quot;built_in&quot;&gt;CFNumberGetValue&lt;/span&gt;(val, kCFNumberLongType, &amp;amp;height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                val = &lt;span class=&quot;built_in&quot;&gt;CFDictionaryGetValue&lt;/span&gt;(properties, kCGImagePropertyPixelWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (val) &lt;span class=&quot;built_in&quot;&gt;CFNumberGetValue&lt;/span&gt;(val, kCFNumberLongType, &amp;amp;width);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                val = &lt;span class=&quot;built_in&quot;&gt;CFDictionaryGetValue&lt;/span&gt;(properties, kCGImagePropertyOrientation);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (val) &lt;span class=&quot;built_in&quot;&gt;CFNumberGetValue&lt;/span&gt;(val, kCFNumberNSIntegerType, &amp;amp;orientationValue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;CFRelease&lt;/span&gt;(properties);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// When we draw to Core Graphics, we lose orientation information,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// which means the image below born of initWithCGIImage will be&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// oriented incorrectly sometimes. (Unlike the image born of initWithData&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// in connectionDidFinishLoading.) So save it here and pass it on later.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                orientation = [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; class] orientationFromPropertyValue:(orientationValue == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt; ? &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : orientationValue)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (width + height &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; totalSize &amp;lt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.expectedSize) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Create the image&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;CGImageRef&lt;/span&gt; partialImageRef = &lt;span class=&quot;built_in&quot;&gt;CGImageSourceCreateImageAtIndex&lt;/span&gt;(imageSource, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#ifdef TARGET_OS_IPHONE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Workaround for iOS anamorphic image&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (partialImageRef) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; size_t partialHeight = &lt;span class=&quot;built_in&quot;&gt;CGImageGetHeight&lt;/span&gt;(partialImageRef);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;CGColorSpaceRef&lt;/span&gt; colorSpace = &lt;span class=&quot;built_in&quot;&gt;CGColorSpaceCreateDeviceRGB&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;CGContextRef&lt;/span&gt; bmContext = &lt;span class=&quot;built_in&quot;&gt;CGBitmapContextCreate&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, width, height, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, width * &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, colorSpace, kCGBitmapByteOrderDefault | kCGImageAlphaPremultipliedFirst);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;CGColorSpaceRelease&lt;/span&gt;(colorSpace);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bmContext) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;CGContextDrawImage&lt;/span&gt;(bmContext, (&lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt;)&amp;#123;.origin.x = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;f, .origin.y = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;f, .size.width = width, .size.height = partialHeight&amp;#125;, partialImageRef);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;CGImageRelease&lt;/span&gt;(partialImageRef);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    partialImageRef = &lt;span class=&quot;built_in&quot;&gt;CGBitmapContextCreateImage&lt;/span&gt;(bmContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;CGContextRelease&lt;/span&gt;(bmContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;CGImageRelease&lt;/span&gt;(partialImageRef);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    partialImageRef = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (partialImageRef) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *image = [&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; imageWithCGImage:partialImageRef scale:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; orientation:orientation];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *key = [[SDWebImageManager sharedManager] cacheKeyForURL:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.request.URL];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *scaledImage = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; scaledImageForKey:key image:image];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.shouldDecompressImages) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    image = [&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; decodedImageWithImage:scaledImage];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    image = scaledImage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;CGImageRelease&lt;/span&gt;(partialImageRef);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dispatch_main_sync_safe(^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.completedBlock) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.completedBlock(image, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CFRelease&lt;/span&gt;(imageSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.progressBlock) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.progressBlock(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageData.length, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.expectedSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们前面说过SDWebImageDownloaderOperation类是继承自NSOperation类。它没有简单的实现main方法，而是采用更加灵活的start方法，以便自己管理下载的状态。&lt;/p&gt;
&lt;p&gt;在start方法中，创建了我们下载所使用的NSURLConnection对象，开启了图片的下载，同时抛出一个下载开始的通知。start方法的具体实现如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)start &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;@synchronized&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.isCancelled) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.finished = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; reset];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#if TARGET_OS_IPHONE &amp;amp;&amp;amp; __IPHONE_OS_VERSION_MAX_ALLOWED &amp;gt;= __IPHONE_4_0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Class &lt;span class=&quot;built_in&quot;&gt;UIApplicationClass&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;NSClassFromString&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;UIApplication&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; hasApplication = &lt;span class=&quot;built_in&quot;&gt;UIApplicationClass&lt;/span&gt; &amp;amp;&amp;amp; [&lt;span class=&quot;built_in&quot;&gt;UIApplicationClass&lt;/span&gt; respondsToSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(sharedApplication)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hasApplication &amp;amp;&amp;amp; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; shouldContinueWhenAppEntersBackground]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            __&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; __typeof__ (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;) wself = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; * app = [&lt;span class=&quot;built_in&quot;&gt;UIApplicationClass&lt;/span&gt; performSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(sharedApplication)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.backgroundTaskId = [app beginBackgroundTaskWithExpirationHandler:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                __&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt; __&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; (wself) sself = wself;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sself) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [sself cancel];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [app endBackgroundTask:sself.backgroundTaskId];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sself.backgroundTaskId = &lt;span class=&quot;built_in&quot;&gt;UIBackgroundTaskInvalid&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.executing = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.connection = [[&lt;span class=&quot;built_in&quot;&gt;NSURLConnection&lt;/span&gt; alloc] initWithRequest:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.request delegate:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; startImmediately:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.thread = [&lt;span class=&quot;built_in&quot;&gt;NSThread&lt;/span&gt; currentThread];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.connection start];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.connection) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.progressBlock) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.progressBlock(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSURLResponseUnknownLength&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] postNotificationName:SDWebImageDownloadStartNotification object:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (floor(&lt;span class=&quot;built_in&quot;&gt;NSFoundationVersionNumber&lt;/span&gt;) &amp;lt;= &lt;span class=&quot;built_in&quot;&gt;NSFoundationVersionNumber_iOS_5_1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Make sure to run the runloop in our background thread so it can process downloaded data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Note: we use a timeout to work around an issue with NSURLConnection cancel under iOS 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//       not waking up the runloop, leading to dead threads (see https://github.com/rs/SDWebImage/issues/466)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;CFRunLoopRunInMode&lt;/span&gt;(kCFRunLoopDefaultMode, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;CFRunLoopRun&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.isFinished) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.connection cancel];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; connection:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.connection didFailWithError:[&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; errorWithDomain:&lt;span class=&quot;built_in&quot;&gt;NSURLErrorDomain&lt;/span&gt; code:&lt;span class=&quot;built_in&quot;&gt;NSURLErrorTimedOut&lt;/span&gt; userInfo:@&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSURLErrorFailingURLErrorKey&lt;/span&gt; : &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.request.URL&amp;#125;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.completedBlock) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.completedBlock(&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, [&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; errorWithDomain:&lt;span class=&quot;built_in&quot;&gt;NSURLErrorDomain&lt;/span&gt; code:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; userInfo:@&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLocalizedDescriptionKey&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;@&quot;Connection can&#39;t be initialized&quot;&lt;/span&gt;&amp;#125;], &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#if TARGET_OS_IPHONE &amp;amp;&amp;amp; __IPHONE_OS_VERSION_MAX_ALLOWED &amp;gt;= __IPHONE_4_0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class &lt;span class=&quot;built_in&quot;&gt;UIApplicationClass&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;NSClassFromString&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;UIApplication&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;built_in&quot;&gt;UIApplicationClass&lt;/span&gt; || ![&lt;span class=&quot;built_in&quot;&gt;UIApplicationClass&lt;/span&gt; respondsToSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(sharedApplication)]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.backgroundTaskId != &lt;span class=&quot;built_in&quot;&gt;UIBackgroundTaskInvalid&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; * app = [&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; performSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(sharedApplication)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [app endBackgroundTask:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.backgroundTaskId];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.backgroundTaskId = &lt;span class=&quot;built_in&quot;&gt;UIBackgroundTaskInvalid&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在下载完后或者是下载失败后都会停止当前调用的runloop，清楚链接随后就抛出下载停止的消息。&lt;br&gt;如果下载成功，则会处理完整的图片数据，对其进行适当的缩放与解压缩操作，以提供给完成回调使用。具体可参考-connectionDidFinishLoading:与-connection:didFailWithError:的实现。&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;我们在上面的介绍可以看出在下载图片的过程中，每次下载图片都会调用NSOperation的函数进行处理，每次数据实际实现是使用NSURLConnection。我们把具体实现的线程放置在队列中进行执行操作。如果下载成功，则会处理完整的图片数据，对其进行适当的缩放与解压缩操作，以提供给完成回调使用。具体可参考-connectionDidFinishLoading:与-connection:didFailWithError:的实现。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;&quot;&gt;下一节我们将讲述如何对下载的图片进行缓存处理&lt;/a&gt;;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我们经常使用SDWebImage在加载图片，但对于图片加载过程中怎么样实现不会深究。下面我们就对SDWebImage进行相应的分析：&lt;br&gt;&lt;a href=&quot;https://github.com/rs/SDWebImage&quot; target=&quot;_blank&quot; rel=&quot;ext
    
    </summary>
    
      <category term="第三方框架" scheme="http://yoursite.com/categories/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="三方框架解析" scheme="http://yoursite.com/tags/%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>IOS面试&amp;自己理解&amp;详细资料库</title>
    <link href="http://yoursite.com/2016/06/02/IOS%E9%9D%A2%E8%AF%95%E6%A2%B3%E7%90%86&%E8%87%AA%E5%B7%B1%E7%90%86%E8%A7%A3&%E8%AF%A6%E7%BB%86%E8%B5%84%E6%96%99%E5%BA%93/"/>
    <id>http://yoursite.com/2016/06/02/IOS面试梳理&自己理解&详细资料库/</id>
    <published>2016-06-02T11:01:41.000Z</published>
    <updated>2016-06-03T13:21:58.000Z</updated>
    
    <content type="html">&lt;p&gt;开启关于IOS面试之路总结，说实话目前IOS开发真是太多很多情况下大家情况良莠不齐很难分辨。目前还是在广州，其实还是很开心的，因为这里有自己😍事物所在。&lt;/p&gt;
&lt;h3 id=&quot;OC的理解和特性&quot;&gt;&lt;a href=&quot;#OC的理解和特性&quot; class=&quot;headerlink&quot; title=&quot;OC的理解和特性&quot;&gt;&lt;/a&gt;OC的理解和特性&lt;/h3&gt;&lt;p&gt;作为开发者我们都知道语言的特性包括：面对对象，面向过程。Objc就是关于面对对象语言，也就包括面向对象的特点：封装、继承、多态。下面是对三者优点列表😉&lt;/p&gt;
&lt;ul&gt;&lt;br&gt;&lt;li&gt;封装：对于要处理的问题进行模块开发，好处有利于我们对于功能的拓展&lt;/li&gt;&lt;br&gt;&lt;li&gt;继承：通过继承实现对父类方法的实现，也可以在子类中重写父类方法&lt;/li&gt;&lt;br&gt;&lt;li&gt;多态：通过同名函数但是输入形式参数的种类，数目，类型不同实现具体函数功能不同（具体实现可以参照C&amp;amp;C++在编译后形式~想了解的可以自己查找）&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;Objc的动态特性：动态类型、动态加载、动态绑定。其实前面我们在runtime的理解过程中有所讲解。&lt;a href=&quot;http://boilwater.github.io/2016/05/29/runtime理解/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考地址&lt;/a&gt;&lt;br&gt;&lt;ul&gt;&lt;br&gt;&lt;li&gt;动态类型：在IOS中我们经常见到id类型，id类型指在Objc中动态类型。在实际应用中我们一般使用静态类型，静态类型：固定和可预知性。静态类型是强类型，动态类型是弱类型。例如：我们经常见到的protrcol委托协议就是采取@proerty(nonatomic, weak) id&lt;protrcol&gt; delegate&lt;/protrcol&gt;&lt;/li&gt;&lt;br&gt;&lt;li&gt;动态加载：基于动态类型，在某个实例对象被确定后，其类型便被确定了，该对象对应的属性和响应消息也被完全确定。&lt;/li&gt;&lt;br&gt;&lt;li&gt;动态绑定：是我们在适配机型加载过程中，动态实现图片的实现。例如，在Retina设备上加载@2x的图片。&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;

&lt;h3 id=&quot;内存管理原则&quot;&gt;&lt;a href=&quot;#内存管理原则&quot; class=&quot;headerlink&quot; title=&quot;内存管理原则&quot;&gt;&lt;/a&gt;内存管理原则&lt;/h3&gt;&lt;ul&gt;&lt;br&gt;&lt;li&gt;IOS5.0之前：在IOS 5.0之前Objc内存管理试行谁创建，谁释放的原则。如果要对是初始化的类型进行alloc,retain,copy，就需要手动进行release进行释放。当计数为0时才会释放对应的初始化内存空间和指针，我们称为MRC时代。&lt;/li&gt;&lt;br&gt;&lt;li&gt;IOS 5.0之后：使用戏言IOS开发那就是一个字：爽。在ARC：自动计数模式开发程序，我们不用再手动释放申请的对象，程序开发过程终于见不到release,autorelease,retain语句。不过我们这是就该注意到strong和weak的细微区别。&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;—&lt;br&gt;strong &amp;amp; weak区别&lt;br&gt;&lt;ul&gt;&lt;br&gt;&lt;li&gt;strong:用来修饰强引用属性&lt;/li&gt;&lt;br&gt;&lt;li&gt;weak:用来修饰弱引用属性&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;strong &amp;amp; weak实现具体情况&lt;br&gt;&lt;ul&gt;&lt;br&gt;&lt;li&gt;我们知道strong的使用时强引用，使用强引用使我们在赋值时会使计数器+1；&lt;br&gt;&lt;br&gt;&lt;br&gt;释放时间：当指针指向新值或者指针不存在，指针不存在一般是在自动计数为0时指针会自动释放。&lt;/li&gt;&lt;br&gt;&lt;li&gt;weak是弱引用，悲剧的是弱引用是不会再计数+1的。不过这也使我们在使用时很方便，因为我们如果要防止block中发生循环引用的时候，可以在block外使用_weak进行修饰。&lt;br&gt;&lt;br&gt;&lt;br&gt;释放时间：对象的拥有者指向新值或者不存在时weak修饰的指针会自动置为nil。&lt;br&gt;&lt;br&gt;&lt;br&gt;weak的实现原理：在每一个类中都有一个弱引用的列表，在释放时都会对列表进行访问。如果找到相应的对象就执行释放。&lt;br&gt;&lt;br&gt;&lt;br&gt;Strong：是通过ARC的自动计数来实现对于对象的释放。&lt;br&gt;&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;—&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/leikezhu1981/article/details/42697977&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考资料&lt;/a&gt;&lt;br&gt;&lt;ul&gt;&lt;br&gt;&lt;li&gt;在想一个对象发送autorelease消息时，其实目标不会立即释放，会有一个具体的时间值。在autorelease调用的时候，会对其中的对象挨个发送release语句对于每个对象进行相应的释放。后面会对于autorelease进行专项讲解，不过这里可以给大牛资料，下文&lt;/li&gt;&lt;br&gt;&lt;li&gt;在ARC中我们不用手动向实例化对象发送release进行释放，但是在MRC中就需要我们对申请的对象进行手动释放对象。那么问题来啦，对象会立即释放吗？&lt;br&gt;&lt;br&gt;&lt;br&gt;记住一点在MRC也是对象有时也不会立即释放，需要当前对象的计数为0时才会使用dealloc进行对象中所有的内容。&lt;br&gt;&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;&lt;a href=&quot;http://www.cocoachina.com/ios/20150610/12093.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AutoreleasePool大牛的资料&lt;/a&gt;&lt;br&gt;#### 其他注意事项&lt;br&gt;&lt;ul&gt;&lt;br&gt;&lt;li&gt;当一个对象被_strong指向时，该对象是不会被释放的。但是当对象在超出其作用区域时（在C++中局部变量在超出作用区域就会nil），此时指针也会被置为nil于此同时指针所指的内存空间也会被释放。&lt;br&gt;&lt;br&gt;&lt;br&gt;还有就是当试图控制器（ViewController）进行释放，其中的全局变量和局部变量都会被释放。也有意外就是实现循环引用，恭喜你好好修改下吧，因为这是个BUG。&lt;br&gt;&lt;/li&gt;&lt;br&gt;&lt;li&gt;局部变量：上面讲到的局部变量如果超出其范围就会置为nil&lt;/li&gt;&lt;br&gt;&lt;li&gt;在方法中对象创建，为啦使内存能够尽可能的减少可以使用autoreleasepool。使用方法：@autoreleasepool{};&lt;/li&gt;&lt;br&gt;&lt;li&gt;block中为了避免循环引用就会使用_weak进行修饰&lt;/li&gt;&lt;br&gt;&lt;li&gt;ARC不是万能的🔑：ARC是基于在Foundation之上进行的变量的管理，如果是CGtypeRef类型就无法进行管理。例如：CGImageRef的图片的信息&lt;/li&gt;&lt;br&gt;&lt;li&gt;同样我们可以实现ARC和非ARC之间的进行混合编译，具体操作如下：&lt;br&gt;&lt;br&gt;&lt;br&gt;在ARC中进行非ARC程序的混合编译：-fno-fobjc-arc;&lt;br&gt;&lt;br&gt;&lt;br&gt;在非ARC中进行ARC的混合编译：-fobjc-arc;&lt;br&gt;&lt;br&gt;&lt;br&gt;不过目前我们使用ARC较多，所以使用第一种的情形较多。swift毕竟也发布两年之久，很多创业公司已经开始使用swift&lt;br&gt;&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;#### 拓展介绍&lt;br&gt;—&lt;br&gt;&lt;ul&gt;&lt;br&gt;&lt;li&gt;nonatomic:&lt;/li&gt;&lt;br&gt;&lt;li&gt;atomic:&lt;/li&gt;&lt;br&gt;&lt;li&gt;assign:&lt;/li&gt;&lt;br&gt;&lt;li&gt;readwrite:&lt;/li&gt;&lt;br&gt;&lt;li&gt;readonly:&lt;/li&gt;&lt;br&gt;&lt;li&gt;copy:&lt;/li&gt;&lt;br&gt;&lt;li&gt;retain:&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;

&lt;hr&gt;
&lt;h3 id=&quot;设计模式&quot;&gt;&lt;a href=&quot;#设计模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式&quot;&gt;&lt;/a&gt;设计模式&lt;/h3&gt;&lt;p&gt;开发过程中我们都会使用到设计模式，这里就以两种设计模式进行举例：&lt;/p&gt;
&lt;h4 id=&quot;MVC设计模式&quot;&gt;&lt;a href=&quot;#MVC设计模式&quot; class=&quot;headerlink&quot; title=&quot;MVC设计模式&quot;&gt;&lt;/a&gt;MVC设计模式&lt;/h4&gt;&lt;p&gt;MVC是一种架构模式，M表示MOdel，V表示视图View，C表示控制器Controller：&lt;br&gt;其实重要的还是需要自己动手亲自实现，这样可以锻炼自己的编码能力。&lt;a href=&quot;http://www.cocoachina.com/design/20130917/7009.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资料点击&lt;/a&gt;。&lt;/p&gt;
&lt;ul&gt;&lt;br&gt;&lt;li&gt;Model负责存储、定义、操作数据；&lt;/li&gt;&lt;br&gt;&lt;li&gt;View用来展示书给用户，和用户进行操作交互；&lt;/li&gt;&lt;br&gt;&lt;li&gt;Controller是Model和View的协调者，Controller把Model中的数据拿过来给View用。Controller可以直接与Model和View进行通信，而View不能和Controller直接通信。View与Controller通信需要利用代理协议的方式，当有数据更新时，MOdel也要与Controller进行通信，这个时候就要用Notification和KVO，这个方式就像一个广播一样，MOdel发信号，Controller设置监听接受信号，当有数据更新时就发信号给Controller，Model和View不能直接进行通信，这样会违背MVC设计模式。&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;





























</content>
    
    <summary type="html">
    
      &lt;p&gt;开启关于IOS面试之路总结，说实话目前IOS开发真是太多很多情况下大家情况良莠不齐很难分辨。目前还是在广州，其实还是很开心的，因为这里有自己😍事物所在。&lt;/p&gt;
&lt;h3 id=&quot;OC的理解和特性&quot;&gt;&lt;a href=&quot;#OC的理解和特性&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="IOS" scheme="http://yoursite.com/categories/IOS/"/>
    
    
      <category term="IOS基础知识" scheme="http://yoursite.com/tags/IOS%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>UIView &amp; CALayer &amp; Core Animation</title>
    <link href="http://yoursite.com/2016/05/30/UIView&CALayer/"/>
    <id>http://yoursite.com/2016/05/30/UIView&CALayer/</id>
    <published>2016-05-30T04:55:50.000Z</published>
    <updated>2016-06-02T00:36:33.000Z</updated>
    
    <content type="html">&lt;p&gt;一直想做个dome来实践自己所学的知识，看到网上有很多资料感觉压力比较大，所以决定站在巨人肩膀上对于UIView&amp;amp;CALayer&amp;amp;Core Animation 进行分装做出一个dome。&lt;/p&gt;
&lt;div style=&quot;color:#008B8B&quot;&gt;&lt;br&gt;&lt;p&gt;今天也打算写关于图片、音频和视频在深层原理，以及图像在屏幕显示原理以及后面提出如何进行在此方面优化。&lt;br&gt;下面就讲述在IOS开发过程中经常使用的UIView和CALayer两者之间的关系和在动画使用过程的具体封装（网上也有许多关于这个话题的文章，也是站在巨人肩膀上）。&lt;/p&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;UIView和CALayer之间的关系&quot;&gt;&lt;a href=&quot;#UIView和CALayer之间的关系&quot; class=&quot;headerlink&quot; title=&quot;UIView和CALayer之间的关系&quot;&gt;&lt;/a&gt;UIView和CALayer之间的关系&lt;/h3&gt;&lt;p&gt;打开UIView和CALyer中实际实现的代码，下面是UIView实现源码&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NS_CLASS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;_0) &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIView&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;UIResponder&lt;/span&gt; &amp;lt;&lt;span class=&quot;title&quot;&gt;NSCoding&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;UIAppearance&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;UIAppearanceContainer&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;UIDynamicItem&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;UITraitEnvironment&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;UICoordinateSpace&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;UIFocusEnvironment&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;readonly&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;)                 &lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt;  *layer; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;CALayer实现源码：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CALayer&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt; &amp;lt;&lt;span class=&quot;title&quot;&gt;NSCoding&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;CAMediaTiming&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@private&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _CALayerIvars &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t refcount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t magic;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *layer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#if TARGET_OS_MAC &amp;amp;&amp;amp; !TARGET_RT_64_BIT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *unused1[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; _attr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;我们可以看出UIView是继承自UIResponder，而CALayer继承自NSObject。这也是UIView可以相应触摸事件，并实现响应链中最后一环所在后面我们会具体讲述。CALayer继承自NSObject，其中UIView中又包含自己所特有的layer。我们可以看做CALayer是UIView的具体内容细节的实现，两者具有平行关系。&lt;div style=&quot;color:#008B8B&quot;&gt;&lt;p&gt;为什么不把两者何在一起进行实现呢，分开实现具体功能呢？&lt;br&gt;我想可能是为啦分层需要，把功能具体分隔开来。UIView实现触摸响应，CALayer实现具体的内容展示。&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CoreAnimation_guide/CoreAnimationBasics/CoreAnimationBasics.html#//apple_ref/doc/uid/TP40004514-CH2-SW12&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIVie和CALayer关系源码&lt;/a&gt;;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一直想做个dome来实践自己所学的知识，看到网上有很多资料感觉压力比较大，所以决定站在巨人肩膀上对于UIView&amp;amp;CALayer&amp;amp;Core Animation 进行分装做出一个dome。&lt;/p&gt;
&lt;div style=&quot;color:#008B8B&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="IOS" scheme="http://yoursite.com/categories/IOS/"/>
    
    
      <category term="图片视频" scheme="http://yoursite.com/tags/%E5%9B%BE%E7%89%87%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>cocoaPods使用和静态库的建立</title>
    <link href="http://yoursite.com/2016/05/29/cocoaPods%E4%BD%BF%E7%94%A8%E5%92%8C%E9%9D%99%E6%80%81%E5%BA%93%E7%9A%84%E5%BB%BA%E7%AB%8B/"/>
    <id>http://yoursite.com/2016/05/29/cocoaPods使用和静态库的建立/</id>
    <published>2016-05-29T11:47:03.000Z</published>
    <updated>2016-05-29T12:02:59.000Z</updated>
    
    <content type="html">&lt;p&gt;cocoaPods个人介绍：是基于Ruby的基础之上的，cocoaPods个人作用是可以帮助苦逼的码农对第三方库和框架进行管理，让码农专注于自己APP方面优化&lt;/p&gt;
&lt;p&gt;一般我们复制三方框架到项目有两种方式：（1）直接进行复制，（2）使用cocoaPods来进行管理，本人建议可以学习使用cocoaPods这样更加方便，下面讲直接复制问题&lt;/p&gt;
&lt;p&gt;但是直接复制存在问题：&lt;/p&gt;
&lt;p&gt;(1)库更新存在问题，如果一个库引用另一个库，需要对于库全部更新&lt;/p&gt;
&lt;p&gt;(2)对于我们引用的第三方库进行修改，在做更新比较困难。例如：我在使用SedWebImage时对图片进行截图得到圆形图片，如果进行更新就有问题&lt;/p&gt;
&lt;p&gt;(3)比较难判断在APP引进库的具体版本，除非在以前APP中进行记录&lt;/p&gt;
&lt;p&gt;(4)没有中心管理，很难对于所有的第三方库进行统一管理&lt;br&gt;cocoaPods（&lt;a href=&quot;https://realm.io/cn/news/gotocph-rackwitz-therox-learnings-from-cocoapods/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cocoaPods链接&lt;/a&gt;）对于上面问题有很好处理：可以解决库之间存在依赖关系，而且帮忙发现是新的库，以最简单方式为我们码农配置环&lt;/p&gt;
&lt;p&gt;废话不多说，下面开始在mac中配置安装cocoaPods&lt;/p&gt;
&lt;p&gt;如果系统是10.7之后系统中带有配置Ruby环境，只需安装cocoaPods即可，如果不是可以搜索下Ruby环境安装&lt;/p&gt;
&lt;p&gt;方法一：(1)打开终端：control+空格键，然后搜索“终端”&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo gem install cocoaPods &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(2)然后在终端中进行设置&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ pod setup --verbose&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果在执行一时比较慢我们就需要执行其他安装，通过只用淘宝的Ruby进行访问cocoaPod，&lt;/p&gt;
&lt;p&gt;方法二：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ gem sources --remove https://rubygems.org/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;//等有反应之后再敲入以下命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ gem sources -a http://ruby.taobao.org/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果要查看是否是taobao镜像&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ gem source -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果显示一下情况&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*** CURRENT SOURCES ***&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/ruby.taobao.org/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后执行：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo gem install cocoaPods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;经过上述爽过之后，我们就成功安装cocosPods，接下来我们来看下怎么使用&lt;br&gt;（1）使用cocoaPods查看相关框架信息，查看AFNetWorking信息&lt;/p&gt;
&lt;p&gt;$ pod search AFNetWorking&lt;br&gt;下面在项目中使用cocoaPods加入第三方框架&lt;br&gt;（1）打开终端，进行项目文件的根目录然后使用vim创建podFile文件：例如我们项目放在 文档/项目名&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$cd /users/用户名/documents/项目名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$vim podFile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）再输如框中输入加入平台和相关框架以及框架版本号（如果出现不能输入就要按键a后者是i，进行文本编辑）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;paltform : iOS, &amp;apos;7.0&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod &amp;quot;AFNetworking&amp;quot;, &amp;quot;~&amp;gt; 2.0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（3）输入上述文本，后保存并退出编辑按键esc进行退出，输入下面文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;:wq&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（4）最后下载AFNetWorking文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$pod install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大功告成，这样就可以在我们文件中生成一个pods文件，打开项目就可以看到下面除啦我们项目外还多余一个pods文件&lt;/p&gt;
&lt;p&gt;注：可以在文件中放置多个框架，只要在上面（2）中pod “框架名”, “~&amp;gt;3.0”&lt;br&gt;cocosPods后续产生问题解析：&lt;/p&gt;
&lt;p&gt;如果我们从github上下载开源项目有的项目时需要我们重新更新配置开源框架；&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd ~/desktop/项目名                  //我的项目放在桌面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod install &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果出现&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[!] The dependency &lt;span class=&quot;string&quot;&gt;`Masonry (~&amp;gt; 0.6.2)`&lt;/span&gt; is &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; used &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; any concrete target.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The dependency &lt;span class=&quot;string&quot;&gt;`SDWebImage (~&amp;gt; 3.7)`&lt;/span&gt; is &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; used &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; any concrete target.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The dependency &lt;span class=&quot;string&quot;&gt;`GPUImage`&lt;/span&gt; is &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; used &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; any concrete target.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;打开配置文件Podfile文件修改配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target &lt;span class=&quot;string&quot;&gt;&#39;BeautifyFaceDemo&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod &lt;span class=&quot;string&quot;&gt;&#39;Masonry&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt; 0.6.2&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod &lt;span class=&quot;string&quot;&gt;&#39;SDWebImage&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt;3.7&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod &lt;span class=&quot;string&quot;&gt;&#39;GPUImage&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;既可以解决生面的问题。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;cocoaPods个人介绍：是基于Ruby的基础之上的，cocoaPods个人作用是可以帮助苦逼的码农对第三方库和框架进行管理，让码农专注于自己APP方面优化&lt;/p&gt;
&lt;p&gt;一般我们复制三方框架到项目有两种方式：（1）直接进行复制，（2）使用cocoaPods来进行管理，本
    
    </summary>
    
      <category term="IOS" scheme="http://yoursite.com/categories/IOS/"/>
    
    
      <category term="IOS" scheme="http://yoursite.com/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>IOS的永久话储存</title>
    <link href="http://yoursite.com/2016/05/29/IOS%E7%9A%84%E6%B0%B8%E4%B9%85%E8%AF%9D%E5%82%A8%E5%AD%98/"/>
    <id>http://yoursite.com/2016/05/29/IOS的永久话储存/</id>
    <published>2016-05-29T11:32:04.000Z</published>
    <updated>2016-06-02T08:39:20.000Z</updated>
    
    <content type="html">&lt;p&gt;沙盒：IOS应用中每个应用均有自己沙盒，用来储存APP自己的数据，每个应用的沙盒均是应用特有的不能交叉访问。&lt;/p&gt;
&lt;p&gt;沙盒中有三个文件夹：document，library，temp&lt;/p&gt;
&lt;p&gt;(1)document：保存应用运行时生成重要的数据，Itunes也会同步到进行备份数据。一般储存比较重要数据（数据使用手机连接mac可以在itunes中进行查看）&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *path = &lt;span class=&quot;built_in&quot;&gt;NSHomeDirectory&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *docPath = [path stringByAppendingString:&lt;span class=&quot;string&quot;&gt;@&quot;/saveMessage&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *docPath1 = [path stringByAppendingPathComponent:&lt;span class=&quot;string&quot;&gt;@&quot;saveMessage&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *docPath2 = [&lt;span class=&quot;built_in&quot;&gt;NSSearchPathForDirectoriesInDomains&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSDocumentDirectory&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSUserDomainMask&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;)lastObject];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;对于数据相关的path 进行操作，判断其是否存在，如果存在就可以进行相关操作&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt; *fileManger = [&lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt; defaultManager];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *pathLists = [fileManger contentsOfDirectoryAtPath:path error:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; flag = [fileManger fileExistsAtPath:docPath1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[fileManger removeItemAtPath:docPath1 error:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(2)temp：保存运行时需要的临时数据，当APP结束后就会清楚其中的数据。当APP没有运行时其中数据也可能被删除&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NSString *temp =  NSTemporaryDirectory();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(3)library：其中有两个文件caches和preference。caches中存放临时程序运行时临时数据，就像我们在每个APP中的缓存可以进行清除。preference中存放我们自己设置是plist文件存放地址&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *library = [&lt;span class=&quot;built_in&quot;&gt;NSSearchPathForDirectoriesInDomains&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSLibraryDirectory&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSUserDomainMask&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;)lastObject];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *chches = [&lt;span class=&quot;built_in&quot;&gt;NSSearchPathForDirectoriesInDomains&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSCachesDirectory&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSUserDomainMask&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;)lastObject];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;访问上面三个文件夹方法（&lt;a href=&quot;http://www.cnblogs.com/xiejw/p/5196798.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考链接&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;上述是关于在IOS储存数据是具体储存位置和其获取的方法，过程大同小异。但是在储存数据是我们要注意细节：比如是使用NSSarry是我们需要储存array数据，如果是其他数据例如NSdata需要将其转化&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *arr1 = [[&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; alloc]initWithObjects:&lt;span class=&quot;string&quot;&gt;@&quot;0&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;@&quot;5&quot;&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; *data = [&lt;span class=&quot;built_in&quot;&gt;NSKeyedArchiver&lt;/span&gt; archivedDataWithRootObject:arr1];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;除沙盒外IOS还向我们提供其他的储存方式：Sqlite，Core data, NSKeyedArchiver(coding)归档，NSUserDefaults&lt;/p&gt;
&lt;p&gt;(1)Sqlite：iOS自带数据库，可以保存数据&lt;/p&gt;
&lt;h3 id=&quot;使用的第三方的库FMDB&quot;&gt;&lt;a href=&quot;#使用的第三方的库FMDB&quot; class=&quot;headerlink&quot; title=&quot;使用的第三方的库FMDB&quot;&gt;&lt;/a&gt;使用的第三方的库&lt;a href=&quot;https://github.com/ccgus/fmdb.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FMDB&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;(2)Core data：是苹果提出的基于sqlite储存数据的结构，实际是sqlite只不过对其进行简化&lt;/p&gt;
&lt;p&gt;(3)NSkeyedArchiver(coding)：&lt;/p&gt;
&lt;p&gt;(4)NSUserDefaults：就是我们上述所说的放在library/preference中的偏好设置，实际是存放在plist文件中。存储数据类型是NSString,NSData,NSInteger,NSDictionary,NSArray,NSNumber,bool和其他的基本数据类型（但是NSUserDefaults有个缺点：在储存过程中可能由于时间问题结束存储，而且如果修改其中一项数据整个数据都要重新加载）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSUserDefaults_Class/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;The &lt;span class=&quot;built_in&quot;&gt;NSUserDefaults&lt;/span&gt; class provides convenience methods &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; accessing common types such as floats, doubles, integers, Booleans, and URLs. A &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; object must be a property list, that is, an instance of (or &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; collections a combination of instances of): &lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt;, or &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt;. If you want to store any other type of object, you should typically archive it to create an instance of &lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;文章是对于数据储存初次探究，后面会对文章进行修改有详细的使用方法和具体官方文档补充&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;沙盒：IOS应用中每个应用均有自己沙盒，用来储存APP自己的数据，每个应用的沙盒均是应用特有的不能交叉访问。&lt;/p&gt;
&lt;p&gt;沙盒中有三个文件夹：document，library，temp&lt;/p&gt;
&lt;p&gt;(1)document：保存应用运行时生成重要的数据，Itunes也会同
    
    </summary>
    
      <category term="IOS" scheme="http://yoursite.com/categories/IOS/"/>
    
    
      <category term="IOS" scheme="http://yoursite.com/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>IOS整体框架</title>
    <link href="http://yoursite.com/2016/05/29/IOS%E6%95%B4%E4%BD%93%E6%A1%86%E6%9E%B6/"/>
    <id>http://yoursite.com/2016/05/29/IOS整体框架/</id>
    <published>2016-05-29T11:21:14.000Z</published>
    <updated>2016-06-02T08:36:24.000Z</updated>
    
    <content type="html">&lt;p&gt;感觉在博客上有大牛介绍IOS框架讲解的比较详细，在此向大牛致敬写篇文章。&lt;a href=&quot;http://www.cnblogs.com/kenshincui/p/3885689.html#foundation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;大牛文章关于框架&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们在做IOS开发过程针对对象来进行类的分装，然后实现具体方法解决问题。但是我们整体语言框架不是很清楚，废话不多说开始：&lt;/p&gt;
&lt;p&gt;下面是关于OS X的结构图（&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/OSX_Technology_Overview/About/About.html#//apple_ref/doc/uid/TP40001067-CH204-TPXREF101&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网地址&lt;/a&gt;）：&lt;br&gt;&lt;img src=&quot;/path/to/img.jpg&quot; alt=&quot;alt text&quot; title=&quot;Title&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;官方文档的具体内容：&quot;&gt;&lt;a href=&quot;#官方文档的具体内容：&quot; class=&quot;headerlink&quot; title=&quot;官方文档的具体内容：&quot;&gt;&lt;/a&gt;官方文档的具体内容：&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;The Cocoa (Application) layer（应用层） includes technologies &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; building an &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app’s user interface, &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; responding to user events, and &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; managing app &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;behavior.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;The Media layer （媒体层）encompasses specialized technologies &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; playing, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;recording, and editing audiovisual media and &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; rendering and animating &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;D and &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;D graphics.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;The Core Services layer（核心服务层） contains many fundamental services and &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;technologies that range from Automatic Reference Counting and low-level network &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;communication to string manipulation and data formatting.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;The Core OS layer （核心系统操作层）defines programming interfaces that are &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;related to hardware and networking, including interfaces &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; running high-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performance computation tasks on a computer’s CPU and GPU.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;The Kernel and Device Drivers layer（内核和驱动层） consists of the Mach kernel &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;environment, device drivers, BSD library functions (libSystem), and other low-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;level components. The layer includes support &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; file systems, networking, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;security, interprocess communication, programming languages, device drivers, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;and extensions to the kernel.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;下面对于每层的讲解：&quot;&gt;&lt;a href=&quot;#下面对于每层的讲解：&quot; class=&quot;headerlink&quot; title=&quot;下面对于每层的讲解：&quot;&gt;&lt;/a&gt;下面对于每层的讲解：&lt;/h3&gt;&lt;p&gt;（1）应用层即可触摸层（cocoa touch layer）&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/OSX_Technology_Overview/CocoaApplicationLayer/CocoaApplicationLayer.html#//apple_ref/doc/uid/TP40001067-CH274-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地址&lt;/a&gt;:提供接口为应用，主要用于touch和管理应用的操作。其中我们最常用的UIKit的框架在Cocoa Touch层&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/path/to/img.jpg&quot; alt=&quot;alt text&quot; title=&quot;Title&quot;&gt;&lt;/p&gt;
&lt;p&gt;（2）媒体层（media layer）&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/OSX_Technology_Overview/MediaLayer/MediaLayer.html#//apple_ref/doc/uid/TP40001067-CH273-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方地址&lt;/a&gt;：包括多种多样的媒体文件，录音，播放，图像绘制，2D和3D图形基础动画&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/path/to/img.jpg&quot; alt=&quot;alt text&quot; title=&quot;Title&quot;&gt;&lt;/p&gt;
&lt;p&gt;主要包括以下：AV Foundation, Core Animation, Core Audio, Core Image, Core Text, OpenAl, OpenGL, Quartez&lt;/p&gt;
&lt;p&gt;（3）核心服务层（Core Service Layer）&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/OSX_Technology_Overview/CoreServicesLayer/CoreServicesLayer.html#//apple_ref/doc/uid/TP40001067-CH270-BCICAIFJ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方地址&lt;/a&gt;：通过提供一些接口进行网络连接，包括一些在CPU和GPU更高计算性能，使用广泛的Foundation框架位于本层&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/path/to/img.jpg&quot; alt=&quot;alt text&quot; title=&quot;Title&quot;&gt;&lt;/p&gt;
&lt;p&gt;只要包括以下：Address Book, Core Foundation, Foundation, Core Data, Quick Look&lt;/p&gt;
&lt;p&gt;, Social, WebKit, Security&lt;/p&gt;
&lt;p&gt;(4)核心系统操作层（Core OS Layer）&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/OSX_Technology_Overview/CoreOSLayer/CoreOSLayer.html#//apple_ref/doc/uid/TP40001067-CH9-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方地址&lt;/a&gt;：内存管理、文件系统、电源管理以及一些其他的操作系统任务。它可以直接和硬件设备进行交互&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/path/to/img.jpg&quot; alt=&quot;alt text&quot; title=&quot;Title&quot;&gt;&lt;/p&gt;
&lt;p&gt;只要包括以下：Accelerate, Open CL, Directory Services, System Configuration, Disk Arbitration&lt;/p&gt;
&lt;p&gt;这只是写出基本的层次模型，后续将对此进行相关的更新和总结。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;感觉在博客上有大牛介绍IOS框架讲解的比较详细，在此向大牛致敬写篇文章。&lt;a href=&quot;http://www.cnblogs.com/kenshincui/p/3885689.html#foundation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;
    
    </summary>
    
      <category term="IOS" scheme="http://yoursite.com/categories/IOS/"/>
    
    
      <category term="IOS" scheme="http://yoursite.com/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>runtime理解</title>
    <link href="http://yoursite.com/2016/05/29/runtime%E7%90%86%E8%A7%A3/"/>
    <id>http://yoursite.com/2016/05/29/runtime理解/</id>
    <published>2016-05-29T04:15:38.000Z</published>
    <updated>2016-06-02T08:35:19.000Z</updated>
    
    <content type="html">&lt;p&gt;网上其实有很多关于讲述runtime的学习资料，也是站在巨人肩上看的更远。写这篇文章也是对于其他人借鉴和翻阅源码，向源码寻求解释吧。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;网上其实有很多关于讲述runtime的学习资料，也是站在巨人肩上看的更远。写这篇文章也是对于其他人借鉴和翻阅源码，向源码寻求解释吧。&lt;/p&gt;
&lt;h3 id=&quot;runtime简介&quot;&gt;&lt;a href=&quot;#runtime简介&quot; class=&quot;headerlink&quot; title=&quot;runtime简介&quot;&gt;&lt;/a&gt;runtime简介&lt;/h3&gt;&lt;p&gt;Objc被我们成为动态语言，换句话说就是把我们平时看到一些关键方法由编译连接推迟到运行时执行。Objc底层是基于C/C++的编译语言，在C/C++项目运行过程中编译、链接生成可执行文件。而Objc语言是在执行过程中进行编译源码，这也是Objc中自己特色：动态类型，动态绑定和动态加载。获runtime的源码点击&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Cocoa/Reference/ObjCRuntimeRef/index.html#//apple_ref/doc/uid/TP40001418&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里我们主要探究runtime.h和message.h两个文件夹中一些使用方法。&lt;br&gt;下面列出runtime.h文件中代码：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_method *Method;  &lt;span class=&quot;comment&quot;&gt;//代表类定义当中的使用方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_ivar *Ivar;  &lt;span class=&quot;comment&quot;&gt;//代表类定义中实例变量和属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_category *Category; &lt;span class=&quot;comment&quot;&gt;//代表添加成员函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_property *objc_property_t; &lt;span class=&quot;comment&quot;&gt;//声明的属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_class &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class isa;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#if !__OBJC2__&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class super_class                                        OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name                                         OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; version                                             OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; info                                                OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; instance_size                                       OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_ivar_list *ivars                             OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_method_list **methodLists                    OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_cache *cache                                 OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_protocol_list *protocols                     OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;meta&quot;&gt;#endif&amp;#125; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;看其中一种实现方式&quot;&gt;&lt;a href=&quot;#看其中一种实现方式&quot; class=&quot;headerlink&quot; title=&quot;看其中一种实现方式&quot;&gt;&lt;/a&gt;看其中一种实现方式&lt;/h3&gt;&lt;p&gt;其中我们就以类中struct objc_ivar_list *ivars ,为例来看是怎样实现&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_ivar_list &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ivar_count                                           OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#ifdef __LP64__&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; space                                                OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* variable length structure */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_ivar ivar_list[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]                            OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;                                                            OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看出实例变量和属性是存放时一个struct的list的数组中，其中包括list的数目、所占空间和基本储存objc_ivar。&lt;br&gt;&lt;br&gt;上面objc_ivar在runtime.h中形式：&lt;br&gt;typedef struct objc_ivar Ivar;&lt;br&gt;objc_ivar中实例变量储存方式：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_ivar &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *ivar_name                       OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *ivar_type                       OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ivar_offset                      OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#indef _LP64_&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; space                             OBJC2_UNAVAILABLE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;从上面可以看出类的实例变量和属性经过runtime编译后是以struct的储存形式存在，并且单个实例变量保存其名字、类型、偏移量和储存空间。类中所有实例变量是以list类型进行储存。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通过对runtime.h文件源码分析我们可以看出，在IOS程序运行过程中把我们类中元素编译为C/C++形式。且编译过程是一个动态过程，所以我们可以通过此方式对我们程序进行动态操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;runtime动态操作&quot;&gt;&lt;a href=&quot;#runtime动态操作&quot; class=&quot;headerlink&quot; title=&quot;runtime动态操作&quot;&gt;&lt;/a&gt;runtime动态操作&lt;/h3&gt;&lt;ul&gt;在动态编译过程中无论是属性、实例变量、成员函数、类方法的均可以操作，一下就以比较简单的进行讲解&lt;br&gt;&lt;li&gt;获取类的对象名&lt;/li&gt;&lt;br&gt;&lt;li&gt;获取类中成实例变量和属性&lt;/li&gt;&lt;br&gt;&lt;li&gt;动态添加方法&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;

&lt;h3 id=&quot;获取类的对象名&quot;&gt;&lt;a href=&quot;#获取类的对象名&quot; class=&quot;headerlink&quot; title=&quot;获取类的对象名&quot;&gt;&lt;/a&gt;获取类的对象名&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class *classes = objc_copyClassList(&amp;amp;count);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name = class_getName(classes[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%s&quot;&lt;/span&gt;, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印出的内容可能出乎你的意料！&lt;/p&gt;
&lt;h3 id=&quot;获取类的实例变量和属性&quot;&gt;&lt;a href=&quot;#获取类的实例变量和属性&quot; class=&quot;headerlink&quot; title=&quot;获取类的实例变量和属性&quot;&gt;&lt;/a&gt;获取类的实例变量和属性&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Class clazz = &lt;span class=&quot;built_in&quot;&gt;NSClassFromString&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;Graduater&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Ivar *var = class_copyIvarList(clazz, &amp;amp;count);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name = ivar_getName(var[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%s&quot;&lt;/span&gt;, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我定义一个毕业生类，然后就可以打印出其中的函数实例变量和属性（不多记得要引入&lt;objc runtime.h=&quot;&quot;&gt;的头文件）；&lt;/objc&gt;&lt;/p&gt;
&lt;h3 id=&quot;动态的添加方法&quot;&gt;&lt;a href=&quot;#动态的添加方法&quot; class=&quot;headerlink&quot; title=&quot;动态的添加方法&quot;&gt;&lt;/a&gt;动态的添加方法&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;objc/runtime.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; abc(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, SEL _cmd)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@hello&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Graduater&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resolveInstanceMethod:(SEL)sel&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([&lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(sel) isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;sihai&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        class_addMethod(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, sel, abc, &lt;span class=&quot;string&quot;&gt;&quot;v@:&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在函数调用时执行下列：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Graduater *graduate = [[Graduater alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[graduate performSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(sihai) withObject:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;执行的结果可以条用我们添加的@select(abc)的方法。&lt;/p&gt;
&lt;h3 id=&quot;runtime使用API的介绍：&quot;&gt;&lt;a href=&quot;#runtime使用API的介绍：&quot; class=&quot;headerlink&quot; title=&quot;runtime使用API的介绍：&quot;&gt;&lt;/a&gt;runtime使用API的介绍：&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * class_getName(Class cls) &lt;span class=&quot;comment&quot;&gt;//获取class的名字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; class_addIvar(Class cls, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name, size_t size, uint8_t alignment, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *types)  &lt;span class=&quot;comment&quot;&gt;//增添实例变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc_property_t  class_getProperty(Class cls, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name) &lt;span class=&quot;comment&quot;&gt;//获取属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc_property_t * class_copyPropertyList(Class cls, &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *outCount) &lt;span class=&quot;comment&quot;&gt;//获取属性列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Method class_getInstanceMethod(Class aClass, SEL aSelector) &lt;span class=&quot;comment&quot;&gt;//获取方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc_allocateClassPair(Class superclass, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name, size_t extraBytes) &lt;span class=&quot;comment&quot;&gt;//添加动态类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;除去上面我们列举其中极少数的调用实例，如果想了解更多点击&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Cocoa/Reference/ObjCRuntimeRef/index.html#//apple_ref/doc/uid/TP40001418-CH1g-211911&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在使用runtime过程，对于操作对象实行方法改善&lt;br&gt;对于对象进行相关操作一般以objc&lt;em&gt;开头&lt;br&gt;对于类的对象进行操作一般以class&lt;/em&gt;开头&lt;br&gt;对于使用方法对象操作一般以method&lt;em&gt;开头&lt;br&gt;对于使用申明属性（property）一般是以property&lt;/em&gt;开头&lt;br&gt;对于使用类成员变量一般使用ivar_开头&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;消息传送机制&quot;&gt;&lt;a href=&quot;#消息传送机制&quot; class=&quot;headerlink&quot; title=&quot;消息传送机制&quot;&gt;&lt;/a&gt;消息传送机制&lt;/h3&gt;&lt;p&gt;在IOS的一个类中我们调用方法使用也是比较多，如&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; method];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;但是在runtime编译过程中具体实现的方式是什么呢？&lt;br&gt;首先我们看先message.h中的源码&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* Basic Messaging Primitives&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * On some architectures, use objc_msgSend_stret for some struct return types.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * On some architectures, use objc_msgSend_fpret for some float return types.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * These functions must be cast to an appropriate function pointer type &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * before being called. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OBJC_EXPORT &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; objc_msgSend(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, SEL op, ...);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OBJC_EXPORT &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; objc_msgSendSuper(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_super *&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;, SEL op, ...);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;从上面的解释我们可以的出如果返回类型为float调用objc_msgSend_fpret，如果是数据结构返回使用objc_msgSend_stret。而我们讲解时使用 objc_msgSend(id self, SEL op, …)，就像我们上面的例子就会转化为objc_msgSend(self @select(method))，但是找到我们所使用的方法具体是怎么实现的？&lt;/p&gt;
&lt;h3 id=&quot;消息转发机制具体实现&quot;&gt;&lt;a href=&quot;#消息转发机制具体实现&quot; class=&quot;headerlink&quot; title=&quot;消息转发机制具体实现&quot;&gt;&lt;/a&gt;消息转发机制具体实现&lt;/h3&gt;&lt;p&gt;在动态添加方法过程中，我们使用如下方式：&lt;/p&gt;
&lt;h3 id=&quot;1动态解析方法&quot;&gt;&lt;a href=&quot;#1动态解析方法&quot; class=&quot;headerlink&quot; title=&quot;1动态解析方法&quot;&gt;&lt;/a&gt;1动态解析方法&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resolveInstanceMethod:(SEL)sel;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;具体实例如下：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resolveInstanceMethod:(SEL)sel&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([&lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(sel) isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;sihai&quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   class_addMethod(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, sel, abc, &lt;span class=&quot;string&quot;&gt;&quot;v@:&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;从这里我们就可以看出在函数调用过程中runtime会根据SEl识别子进行寻找，在例子中我们有相应的识别可以查询，如果没有相应的识别子呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在系统中如果在查找过程中没有找到相应的选择子，就会调用上面的函数&lt;br&gt;+(BOOL)resolveInstanceMethod:(SEL)sel；生成实例方法，如上面例子（添加相应的实例方法可以实现，就跳转方法实现）。把添加方法放入到缓存中，可以供我们进行下次的调用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果上面我们找到相应的识别子，就会进行第二次对选择子进行相关的处理。&lt;/p&gt;
&lt;h3 id=&quot;2备援接收到&quot;&gt;&lt;a href=&quot;#2备援接收到&quot; class=&quot;headerlink&quot; title=&quot;2备援接收到&quot;&gt;&lt;/a&gt;2备援接收到&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)forwardingTargetForSelector:(SEL)aSelector;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;具体实例如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)forwardingTargetForSelector:(SEL)aSelector&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([&lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(aSelector) isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;sihai&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; forwardingTargetForSelector:aSelector];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;系统会把选择子作为参数，返回给我们一个选择子对象。运行的系统就会对相关方法实例进行查找，如果找到相关方法就实行，找不到就结束转发。&lt;/p&gt;
&lt;h3 id=&quot;3完整的消息传递&quot;&gt;&lt;a href=&quot;#3完整的消息传递&quot; class=&quot;headerlink&quot; title=&quot;3完整的消息传递&quot;&gt;&lt;/a&gt;3完整的消息传递&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)forwardInvocation:(&lt;span class=&quot;built_in&quot;&gt;NSInvocation&lt;/span&gt; *)anInvocation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;实现的具体方法如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;built_in&quot;&gt;NSMethodSignature&lt;/span&gt;*)methodSignatureForSelector:(SEL)aSelector&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([&lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(aSelector) isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;sihai&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSMethodSignature&lt;/span&gt; signatureWithObjCTypes:&lt;span class=&quot;string&quot;&gt;&quot;v@:&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; methodSignatureForSelector:aSelector];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)forwardInvocation:(&lt;span class=&quot;built_in&quot;&gt;NSInvocation&lt;/span&gt; *)anInvocation&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        anInvocation.selector = &lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(fly);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [anInvocation invokeWithTarget:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果上面2步骤中返回依然是nil，也会执行完整的消息传输消息机制。在该方法中我们可以改变其目标，然后运行系统就会根据改变的目标，在其目标中查询实现方法别调用。当然也可以进行修改选择子。&lt;/p&gt;
&lt;h3 id=&quot;如果方法调用失败&quot;&gt;&lt;a href=&quot;#如果方法调用失败&quot; class=&quot;headerlink&quot; title=&quot;如果方法调用失败&quot;&gt;&lt;/a&gt;如果方法调用失败&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)doesNotRecognizeSelector:(SEL)aSelector;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过对于[self method];方法的实现过程的进行探究我们我们可以了解到在消息传递过程是如何实现的，而且我们可以更具我们需求对其中的方法进行相应的而修改。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;runtime是Objc语言特性，本人通过对于的研究理解是：通过runtime我们可以等到我们类中所有元素的资料信息，可以使用期同工的API对类进行我们想到达到的目的；在我们调试过程中也可以通过打印来简化我们调试信息；最棒的就是我们可以了解程序运行过程可以在开发中使我们更加得心应手。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;参考来之：&quot;&gt;&lt;a href=&quot;#参考来之：&quot; class=&quot;headerlink&quot; title=&quot;参考来之：&quot;&gt;&lt;/a&gt;参考来之：&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.cocoachina.com/ios/20151015/13769.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Runtime初涉之消息转发&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://www.cocoachina.com/ios/20150901/13173.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;学习runtime的理解和心得&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Cocoa/Reference/ObjCRuntimeRef/index.html#//apple_ref/doc/uid/TP40001418-CH1g-88778&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;runtime 源码&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;网上其实有很多关于讲述runtime的学习资料，也是站在巨人肩上看的更远。写这篇文章也是对于其他人借鉴和翻阅源码，向源码寻求解释吧。&lt;/p&gt;
    
    </summary>
    
      <category term="IOS" scheme="http://yoursite.com/categories/IOS/"/>
    
    
      <category term="IOS" scheme="http://yoursite.com/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>Fastlane讲解</title>
    <link href="http://yoursite.com/2016/05/29/Fastlane%E8%AE%B2%E8%A7%A3/"/>
    <id>http://yoursite.com/2016/05/29/Fastlane讲解/</id>
    <published>2016-05-29T04:13:46.000Z</published>
    <updated>2016-06-02T08:40:32.000Z</updated>
    
    <content type="html">&lt;p&gt;大概在一个月左右写过关于cocoaPods安装和使用方法，如果说cocoaPods是我们盾牌（可以让我们在开发过程中专注实现代码部分），那么fastlane就会是我们开发过程中的长矛（帮助我们在开发过程中提交测试、快速发布）。&lt;br&gt;想知道fastlane了解点击&lt;a href=&quot;https://fastlane.tools&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;br&gt;&lt;/a&gt;获取fastlan的github下载点击&lt;a href=&quot;https://github.com/fastlane/fastlane&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;fastlane安装&quot;&gt;&lt;a href=&quot;#fastlane安装&quot; class=&quot;headerlink&quot; title=&quot;fastlane安装&quot;&gt;&lt;/a&gt;fastlane安装&lt;/h3&gt;&lt;p&gt;fastlane是基于Ruby的开发脚本集合有助于我们在IOS开发过程中达到简便的开发。如果你在自己MAC上已经安装Ruby及其环境，只需要执行下列安装就可以实现&lt;br&gt;    sudo gem install fastlane –verbose&lt;br&gt;确定自己安装的是最新版本的Xcode:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Xcode-select --install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果在启动fastlane比较慢的情况可以执行:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gem cleanup&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;fastlane使用具体方法和具体功能&quot;&gt;&lt;a href=&quot;#fastlane使用具体方法和具体功能&quot; class=&quot;headerlink&quot; title=&quot;fastlane使用具体方法和具体功能&quot;&gt;&lt;/a&gt;fastlane使用具体方法和具体功能&lt;/h3&gt;&lt;p&gt;了解具体使用点击&lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/deliver&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;br&gt;&lt;li&gt;deliver：上传屏幕截图、二进制程序数据和应用程序到AppStore&lt;/li&gt;&lt;br&gt;&lt;li&gt;snapshot：自动截取你的程序在每个设备上的图片&lt;/li&gt;&lt;br&gt;&lt;li&gt;frameit：应用截屏外添加设备框架&lt;/li&gt;&lt;br&gt;&lt;li&gt;pem：可以自动化地生成和更新应用推送通知描述文件&lt;/li&gt;&lt;br&gt;&lt;li&gt;sigh：生成下载开发商店的配置文件&lt;/li&gt;&lt;br&gt;&lt;li&gt;pilot：最好的在终端管理测试和建立的文件&lt;/li&gt;&lt;br&gt;&lt;li&gt;boarding：很容易的方式邀请你测试beta测试&lt;/li&gt;&lt;br&gt;&lt;li&gt;gyp：建立新的发布的版本&lt;/li&gt;&lt;br&gt;&lt;li&gt;match：使用git同步你成员间的开发者证书和文件配置&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;

&lt;h3 id=&quot;fastlane举例：&quot;&gt;&lt;a href=&quot;#fastlane举例：&quot; class=&quot;headerlink&quot; title=&quot;fastlane举例：&quot;&gt;&lt;/a&gt;fastlane举例：&lt;/h3&gt;&lt;p&gt;使用deliver自动打包我们App提交到AppStore，官方使用点击&lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/deliver&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;br&gt;打开终端进行我们项目所在的floder，我的项目是在桌面上名称是hello&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd ~/desktop/hello&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;然后输入：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deliver init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;然后输入我们的Apple ID Username:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;再输入我们的Password &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;fastlane使用场景&quot;&gt;&lt;a href=&quot;#fastlane使用场景&quot; class=&quot;headerlink&quot; title=&quot;fastlane使用场景&quot;&gt;&lt;/a&gt;fastlane使用场景&lt;/h3&gt;&lt;ul&gt;&lt;br&gt;&lt;li&gt;在我们开发后每次提交时执行的测试（有team的单元测试和团队开发的集成测试）(pilot)&lt;/li&gt;&lt;br&gt;&lt;li&gt;构建我们使用的Bate版本时（boarding）&lt;/li&gt;&lt;br&gt;&lt;li&gt;开发好项目需要提给界面截图时(snapshot)&lt;/li&gt;&lt;br&gt;&lt;li&gt;构建并分发至应用商店（这包括更新配置文件，创建新的屏幕截图，上传应用至应用商店并提交应用）(deliver)&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;

&lt;h3 id=&quot;fastlane典型的开发流程&quot;&gt;&lt;a href=&quot;#fastlane典型的开发流程&quot; class=&quot;headerlink&quot; title=&quot;fastlane典型的开发流程&quot;&gt;&lt;/a&gt;fastlane典型的开发流程&lt;/h3&gt;&lt;p&gt;此开发流程也是我们团队开发过程中基本开发顺序&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lane :appstore &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  increment_build_number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  cocoapods&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  xctool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  snapshot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  sigh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  deliver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  frameit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  sh &lt;span class=&quot;string&quot;&gt;&quot;./customScript.sh&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  slack&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;cocoaPods帮助我们管理三方开源库，fastlane可以在我们开发过程中简化我们开发过程以及简化我们发布流程。如果要提高自己IOS方面能力需要我们进一步深入研究。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;大概在一个月左右写过关于cocoaPods安装和使用方法，如果说cocoaPods是我们盾牌（可以让我们在开发过程中专注实现代码部分），那么fastlane就会是我们开发过程中的长矛（帮助我们在开发过程中提交测试、快速发布）。&lt;br&gt;想知道fastlane了解点击&lt;a hr
    
    </summary>
    
      <category term="IOS" scheme="http://yoursite.com/categories/IOS/"/>
    
    
      <category term="IOS" scheme="http://yoursite.com/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>block，注册监听，委托协议和KVO</title>
    <link href="http://yoursite.com/2016/05/29/block%EF%BC%8C%E6%B3%A8%E5%86%8C%E7%9B%91%E5%90%AC%EF%BC%8C%E5%A7%94%E6%89%98%E5%8D%8F%E8%AE%AE%E5%92%8CKVO/"/>
    <id>http://yoursite.com/2016/05/29/block，注册监听，委托协议和KVO/</id>
    <published>2016-05-29T04:12:40.000Z</published>
    <updated>2016-06-02T08:44:49.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;IOS中关于信息传递过程中经常会使用block，委托代理，NSNotification，KVO进行调用，但是查找资料后有些资料不是很全。&lt;/p&gt;
&lt;h3 id=&quot;四者总体比较然后进行一一详解进行讲解：&quot;&gt;&lt;a href=&quot;#四者总体比较然后进行一一详解进行讲解：&quot; class=&quot;headerlink&quot; title=&quot;四者总体比较然后进行一一详解进行讲解：&quot;&gt;&lt;/a&gt;四者总体比较然后进行一一详解进行讲解：&lt;/h3&gt;&lt;p&gt;block：一对一进行通信，比起其他三者更加简洁，但是事件比较多时可以使用delegate。&lt;br&gt;委托代理：和block一样是一对一，我们使用时要先进行协议方法然后实现协议代理，如果需要通信就需要实现代理。&lt;br&gt;NSNotification：在进行注册监听时，可以进行一对多的情况，一个进行注册可以多种情况下进行监听。&lt;br&gt;KVO：就是我们所说的键值监听模式，其主要是在KVC基础上完后才能。&lt;/p&gt;
&lt;p&gt;以前读过一个砍柴的故事，如果我们想要追求搞得效率就要对所用到的工具了解，下面我们就开始磨我们搜中的刀。 &lt;/p&gt;
&lt;h3 id=&quot;block的来龙去脉：&quot;&gt;&lt;a href=&quot;#block的来龙去脉：&quot; class=&quot;headerlink&quot; title=&quot;block的来龙去脉：&quot;&gt;&lt;/a&gt;block的来龙去脉：&lt;/h3&gt;&lt;p&gt;block是IOS SDK 4.0中引入的，block在IOS中实际就是一个代码块，有点像C++中内联函数inline有点相似，最让人惊奇的是我们还可以向其传递参数。闲来没事想要知道block在C++中的具体实现就是用Clang编辑^{printf”Hello, World!”}()，此时我们在block仅仅是输出一个语句。&lt;br&gt;//hello.c是我们把想要编辑的内容放置的文件名称&lt;/p&gt;
&lt;h3 id=&quot;block在没有传入参数情况&quot;&gt;&lt;a href=&quot;#block在没有传入参数情况&quot; class=&quot;headerlink&quot; title=&quot;block在没有传入参数情况&quot;&gt;&lt;/a&gt;block在没有传入参数情况&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;$ clang -rewrite-objc hello.c &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;在编译后再文件后会生成 hello.cpp文件&lt;/p&gt;&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __block_impl impl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_desc_0* Desc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; __mian_block_impl_0(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *fp, &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_desc_0 *desc, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; flags=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;    impl.isa = &amp;amp;_NSConcreteStackBlock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          impl.Flags = flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          impl.FuncPtr = fp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Desc = desc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; __mian_block_func_0(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0 *__cself) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     printf(&lt;span class=&quot;string&quot;&gt;&quot;Hello, World!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_desc_0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  size_t reserved;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  size_t Block_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__mian_block_desc_0_DATA = &amp;#123; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mian()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     ((&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (*)())&amp;amp;__mian_block_impl_0((&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__mian_block_func_0, &amp;amp;__mian_block_desc_0_DATA)) ();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; IMAGE_INFO &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; version; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; flag; &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_OBJC_IMAGE_INFO = &amp;#123; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;上面的代码既是我们通过编译截取的hello.cpp的具体代码，根据上面代码我们可以看到block实际是struct结构。看出_mian_block_impl_0 其中传入其中也是block_impl&amp;amp;mian_block_desc_0两个block，下面是_mian_block_impl_0的构造函数。&lt;/p&gt;
&lt;h3 id=&quot;block在有传入参数情况&quot;&gt;&lt;a href=&quot;#block在有传入参数情况&quot; class=&quot;headerlink&quot; title=&quot;block在有传入参数情况&quot;&gt;&lt;/a&gt;block在有传入参数情况&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;clang -rewrite-objc hello1.c&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;同样在我们编译过后会生成hello.cpp&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __block_impl impl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_desc_0* Desc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; perperson;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  __mian_block_impl_0(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *fp, &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_desc_0 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*desc, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; _perperson, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; flags=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) : perperson(_perperson)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    impl.isa = &amp;amp;_NSConcreteStackBlock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    impl.Flags = flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    impl.FuncPtr = fp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Desc = desc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; __mian_block_func_0(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0 *__cself, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; totalNum) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; perperson = __cself-&amp;gt;perperson; &lt;span class=&quot;comment&quot;&gt;// bound by copy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; perperson * totalNum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_desc_0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  size_t reserved;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  size_t Block_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; __mian_block_desc_0_DATA = &amp;#123; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0)&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mian()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; perperson = &lt;span class=&quot;number&quot;&gt;34.5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; (*sunClassFee)(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) = ((&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; (*)(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;__mian_block_impl_0((&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)__mian_block_func_0, &amp;amp;__mian_block_desc_0_DATA, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;perperson));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; IMAGE_INFO &amp;#123; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; version; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; flag; &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_OBJC_IMAGE_INFO = &amp;#123; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看出在block中使用外部变量perperson时，block初始化时这样的：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;是在__mian_block_impl_0进行初始化perperson，在block构造时作为block的其中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;一个成员初始。在访问时通过__cself-&amp;gt;perperson指针进行访问。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;block在有传入参数情况-1&quot;&gt;&lt;a href=&quot;#block在有传入参数情况-1&quot; class=&quot;headerlink&quot; title=&quot;block在有传入参数情况&quot;&gt;&lt;/a&gt;block在有传入参数情况&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;clang -rewrite-objc hello2.c&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __Block_byref_perperson_0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *__isa;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; __Block_byref_perperson_0 *__forwarding;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; __flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; __size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; perperson;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __block_impl impl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_desc_0* Desc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  __Block_byref_perperson_0 *perperson; &lt;span class=&quot;comment&quot;&gt;// by ref&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  __mian_block_impl_0(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *fp, &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_desc_0 *desc, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; __Block_byref_perperson_0 *_perperson, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; flags=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) : &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;perperson(_perperson-&amp;gt;__forwarding) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    impl.isa = &amp;amp;_NSConcreteStackBlock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    impl.Flags = flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    impl.FuncPtr = fp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Desc = desc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; __mian_block_func_0(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0 *__cself,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; totalNum) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    __Block_byref_perperson_0 *perperson = __cself-&amp;gt;perperson; &lt;span class=&quot;comment&quot;&gt;// bound by ref&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (perperson-&amp;gt;__forwarding-&amp;gt;perperson) = (perperson-&amp;gt;__forwarding-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;perperson) + &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (perperson-&amp;gt;__forwarding-&amp;gt;perperson) * totalNum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; __mian_block_copy_0(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0*dst, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0*src) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;_Block_object_assign((&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*)&amp;amp;dst-&amp;gt;perperson, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*)src-&amp;gt;perperson, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/*BLOCK_FIELD_IS_BYREF*/&lt;/span&gt;);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; __mian_block_dispose_0(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0*src) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_Block_object_dispose((&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*)src-&amp;gt;perperson, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/*BLOCK_FIELD_IS_BYREF*/&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_desc_0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  size_t reserved;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  size_t Block_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (*&lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;)(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0*, &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0*);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (*dispose)(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0*);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; __mian_block_desc_0_DATA = &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __mian_block_impl_0), __mian_block_copy_0, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__mian_block_dispose_0&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mian()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    __attribute__((__blocks__(&lt;span class=&quot;keyword&quot;&gt;byref&lt;/span&gt;))) __Block_byref_perperson_0 perperson = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*)&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,(__Block_byref_perperson_0 *)&amp;amp;perperson, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(__Block_byref_perperson_0), &lt;span class=&quot;number&quot;&gt;34.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; (*sunClassFee)(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) = ((&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; (*)(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;))&amp;amp;__mian_block_impl_0((&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__mian_block_func_0, &amp;amp;__mian_block_desc_0_DATA, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(__Block_byref_perperson_0 *)&amp;amp;perperson, &lt;span class=&quot;number&quot;&gt;570425344&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; IMAGE_INFO &amp;#123; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; version; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; flag; &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_OBJC_IMAGE_INFO = &amp;#123; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们在对于block外的perperson计算重新复制，和上面在block仅仅在block中使用外面的参数。两者经过对比可以看出：在block中对于外部值进行复制，会出现下面的情况。使用clang对于block进行编码，可以看书对于perperson进行_block的修饰后编码生成Block_byref_perperson_0的struct结构体，其中__Block_byref_perperson_0的指针指向在block中perperson的地址。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; __Block_byref_perperson_0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *__isa;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; __Block_byref_perperson_0 *__forwarding;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; __flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; __size; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; perperson;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;block的使用方法-传入参数：&quot;&gt;&lt;a href=&quot;#block的使用方法-传入参数：&quot; class=&quot;headerlink&quot; title=&quot;block的使用方法~传入参数：&quot;&gt;&lt;/a&gt;block的使用方法~传入参数：&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; (^isInputEven)(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) = ^(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n*isInputEven(n&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面我们定义一个block代码段，代码的实现功能是利用递归计算n的基乘。代码可以作为整个代码块进行调用，而且在调用过程中我们只需isInputEven（）函数名和传入参数即可实现。&lt;/p&gt;
&lt;h3 id=&quot;block的使用方法-使用外部参数参数：&quot;&gt;&lt;a href=&quot;#block的使用方法-使用外部参数参数：&quot; class=&quot;headerlink&quot; title=&quot;block的使用方法~使用外部参数参数：&quot;&gt;&lt;/a&gt;block的使用方法~使用外部参数参数：&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; perperson = &lt;span class=&quot;number&quot;&gt;34.5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; (^sunClassFee)(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) = ^(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; totalNum)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; perperson * totalNum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用外部参数perperson，让我们感觉block可以想一个类一样使用socpe里面的变量目前无法做到。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;主要原因是因为：在block的编译过程中我们看到，在block中进行访问其中元素时需要是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;block默认构造函数对于block其中的元素访问。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;block的使用方法-使用外部参数参数：-1&quot;&gt;&lt;a href=&quot;#block的使用方法-使用外部参数参数：-1&quot; class=&quot;headerlink&quot; title=&quot;block的使用方法~使用外部参数参数：&quot;&gt;&lt;/a&gt;block的使用方法~使用外部参数参数：&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;__block &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; perperson = &lt;span class=&quot;number&quot;&gt;34.5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; (^sunClassFee)(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) = ^(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; totalNum)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        perperson = perperson + &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; perperson * totalNum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;block的使用方法-在（UIView）的动画中使用：&quot;&gt;&lt;a href=&quot;#block的使用方法-在（UIView）的动画中使用：&quot; class=&quot;headerlink&quot; title=&quot;block的使用方法~在（UIView）的动画中使用：&quot;&gt;&lt;/a&gt;block的使用方法~在（UIView）的动画中使用：&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; animateWithDuration:&lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;f animations:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        view.alpha = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;IOS的开发到今天差不多已经有7年之久，block在开发中使用广度越来越广泛：&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;枚举–来过去对象。例如：NSDictionary的枚举过程&lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;UIView–对于UIView的动画设置，后面有机会会对动画专门讲述…&lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;通知–在本文讲述的就是在调用过程中与其他通知不同点所在&lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;完成处理–在相应程序结束后，需要对于程序结果的处理。例如：AFNetWork在访问网络后，对于成功和失败进行处理&lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;GCD–在GCD的过程中都是含有block使用的方法&lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;li&gt;排序–平时我们使用的一些简单算法均可以block进行相关处理&lt;/li&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;委托代理详解&quot;&gt;&lt;a href=&quot;#委托代理详解&quot; class=&quot;headerlink&quot; title=&quot;委托代理详解&quot;&gt;&lt;/a&gt;委托代理详解&lt;/h3&gt;&lt;p&gt;在发C++过程中经常见到多组继承，但是在IOS开发过程中只能进行单继承，很多方法我们需要实现接口的形式。正如我们在使用UITableView时，经常会用到UITableViewDataSource和UITableViewDelegate。&lt;br&gt;如果要使用使用委托代理，需要知道协议和委托两者关系。&lt;/p&gt;
&lt;h3 id=&quot;协议&quot;&gt;&lt;a href=&quot;#协议&quot; class=&quot;headerlink&quot; title=&quot;协议&quot;&gt;&lt;/a&gt;协议&lt;/h3&gt;&lt;p&gt;协议一般分为两种：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@ required:        //是我们在继承过程中必须实现的&lt;br&gt;   @optional :        //在实现接口中需要进行选择性实现的方式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;委托&quot;&gt;&lt;a href=&quot;#委托&quot; class=&quot;headerlink&quot; title=&quot;委托&quot;&gt;&lt;/a&gt;委托&lt;/h3&gt;&lt;p&gt;常见的一种设计模式，身为老板一般负责管理员工、打电话、发薪水，这样由于公司业务发展就请一个秘书负责：打电话和发薪水。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;首先进行协议提取（需要员工所得事情）：(boss.h文件中声明)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@protocol&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;protocol&lt;/span&gt; &amp;lt;&lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)payoff;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)tel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boss&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;protocol&amp;gt; delegate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)manage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)payoff;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)tel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;对于老板在具体工作的实现：(boss.m文件中实现)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boss&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)manage&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;boss--&amp;gt;manage&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)payoff&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.delegate payoff];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)tel&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.delegate tel];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;委托秘书所要做的事物：（在sec.m的文件中实现完成boss的代理）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Sec&lt;/span&gt; ()&amp;lt;&lt;span class=&quot;title&quot;&gt;protocol&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Sec&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)payoff&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;sec--&amp;gt;payoff&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)tel&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;sec--&amp;gt;tel&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;注册监听小试&quot;&gt;&lt;a href=&quot;#注册监听小试&quot; class=&quot;headerlink&quot; title=&quot;注册监听小试&quot;&gt;&lt;/a&gt;注册监听小试&lt;/h3&gt;&lt;p&gt;NSNotificationCenter就相当于广播一样，可以对对象进行一次注册然后有多个监听。就像我们知道如果有注册的话，就需要我们对于对象进行释放（remove）。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] postNotificationName:&lt;span class=&quot;string&quot;&gt;@&quot;clickbt&quot;&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] addObserver:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; selector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(click) name:&lt;span class=&quot;string&quot;&gt;@&quot;clickbt&quot;&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在上面的代码可以看出我们在使用注册监听时可以进行相关内容传递，需要传递的内容放在object（为id类型）。&lt;br&gt;在remove监听的方法，经过查找资料：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; -(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewWillAppear:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)animated&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewWillAppear:animated];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] addObserver:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; selector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(test) name:&lt;span class=&quot;string&quot;&gt;@&quot;clickbt&quot;&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewWillDisappear:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)animated&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewWillDisappear:animated];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] removeObserver:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; name:&lt;span class=&quot;string&quot;&gt;@&quot;clickbt&quot;&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;KVO简史&quot;&gt;&lt;a href=&quot;#KVO简史&quot; class=&quot;headerlink&quot; title=&quot;KVO简史&quot;&gt;&lt;/a&gt;KVO简史&lt;/h3&gt;&lt;p&gt;当我们说起KVO(key-value-observe)时不免想起他的孪生大哥KVC（key-value-coding）。KVO是观察者模式的继承者，基于键值变化监听者，基于KVC基础完成之一。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下列对于界面的UILabel进行监听：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label addObserver:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; forKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;narcotics&quot;&lt;/span&gt; options:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptionNew&lt;/span&gt; |&lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptionOld&lt;/span&gt; context:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;一旦UILabel发生变化就会调用方法：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)observeValueForKeyPath:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)keyPath ofObject:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)object &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;change:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)change context:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)context&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//一旦有所变化调用方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;附带：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;KVC：通过设置key值，进行标记。然后通过key值找到进行重新设置，说的通俗点点就是键值对。类似NSDictionary相似。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以前经常看些大牛写的博客，在看博客过程中也学到很多知识。心向往之，开始动手写关于自己在IOS成长路上见证。&lt;/p&gt;
&lt;h3 id=&quot;简述block和delegation使用场景的比较&quot;&gt;&lt;a href=&quot;#简述block和delegation使用场景的比较&quot; class=&quot;headerlink&quot; title=&quot;简述block和delegation使用场景的比较&quot;&gt;&lt;/a&gt;简述block和delegation使用场景的比较&lt;/h3&gt;&lt;p&gt;我们知道&lt;code&gt;block&lt;/code&gt;和&lt;code&gt;delegation&lt;/code&gt;是关于通信方面，在开发的过程中我们也经常会使用两者。面对具体情况我们需要怎么样做出选着呢？&lt;/p&gt;
&lt;h3 id=&quot;1-当在一个方法的参数中需要多个对象时使用delegation&quot;&gt;&lt;a href=&quot;#1-当在一个方法的参数中需要多个对象时使用delegation&quot; class=&quot;headerlink&quot; title=&quot;1.当在一个方法的参数中需要多个对象时使用delegation&quot;&gt;&lt;/a&gt;1.当在一个方法的参数中需要多个对象时使用delegation&lt;/h3&gt;&lt;p&gt;我们在开发过程中经常使用&lt;code&gt;UITableView&lt;/code&gt;，这时我们就要实现接口协议&lt;code&gt;UITableViewDataSource&lt;/code&gt;, &lt;code&gt;UITableViewDelegate&lt;/code&gt;两者是我们在使用&lt;code&gt;UITableView&lt;/code&gt;的相关数据协议和相关协议。从tableView角度出发：实现展示需要数据、对一些展示过程的控制等，这些可以使用&lt;code&gt;block&lt;/code&gt;来进行实现。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;void (^ showTableView)(NSData *data, NSInteger number, CGFloat heightForRowAtIndexPath);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面我们定义告诉过程需要参数在&lt;code&gt;NSIndexPath&lt;/code&gt;,所以第三个参数应该是 &lt;code&gt;block&lt;/code&gt;形式。我们上面知道block在编译过程会被编译为&lt;strong&gt;struct&lt;/strong&gt;结构，在相互嵌套过程中使用&lt;code&gt;delegation&lt;/code&gt;更加方便。&lt;/p&gt;
&lt;h3 id=&quot;2-一个对象只能有一个delegation&quot;&gt;&lt;a href=&quot;#2-一个对象只能有一个delegation&quot; class=&quot;headerlink&quot; title=&quot;2. 一个对象只能有一个delegation&quot;&gt;&lt;/a&gt;2. 一个对象只能有一个delegation&lt;/h3&gt;&lt;p&gt;由于一个对象只能有一个delegate，而且它只能与这个delegate通信。让我们看看CLLocationManager 这个类，当发现地理位置后，location manager 只会通知一个对象（有且只有一个）。当然，如果我们需要更多的对象去知道这个更新，我们最好创建其他的location manager。&lt;/p&gt;
&lt;p&gt;这里有的人可能想到，如果CLLocationManager是个单例呢？如果我们不能创建CLLocationManager的其他实例，就必须不断地切换delegate指针到需要地理数据的对象上（或者创建一个只有你理解的精密的广播系统）。因此，这样看起来，delegatetion在单例上没有多大意义。&lt;/p&gt;
&lt;p&gt;关于这点，最好的印证例子就是UIAccelerometer。在早期版本的iOS中，单例的 accelerometer 实例有一个delegate，导致我们必须偶尔切换一下。这个愚蠢的问题在之后的IOS版本被修改了，现在，任意一个对象都可以访问CMMotionManager block，而不需要阻止其他的对象来接收更新。&lt;/p&gt;
&lt;p&gt;因此，我们可以得出另一个结论：“如果一个对象是单例，不要使用delegation”。&lt;/p&gt;
&lt;h3 id=&quot;3-一般delegation都有自己的而返回值&quot;&gt;&lt;a href=&quot;#3-一般delegation都有自己的而返回值&quot; class=&quot;headerlink&quot; title=&quot;3. 一般delegation都有自己的而返回值&quot;&gt;&lt;/a&gt;3. 一般delegation都有自己的而返回值&lt;/h3&gt;&lt;p&gt;还是拿上面的例子说明：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView numberOfRowsInSection:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)section;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt; *)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView cellForRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面是&lt;code&gt;UITableViewDataSource&lt;/code&gt;协议中必须实现协议，可看出是使用返回值。而我们也可以看其他的一些协议表示情况，一般均是需要返回值的。&lt;/p&gt;
&lt;h3 id=&quot;4-delegation偏向于使用的过程-VS-block偏向于使用结果&quot;&gt;&lt;a href=&quot;#4-delegation偏向于使用的过程-VS-block偏向于使用结果&quot; class=&quot;headerlink&quot; title=&quot;4.delegation偏向于使用的过程 VS block偏向于使用结果&quot;&gt;&lt;/a&gt;4.delegation偏向于使用的过程 VS block偏向于使用结果&lt;/h3&gt;&lt;p&gt;如果查看&lt;code&gt;NSURLConnectionDelegate&lt;/code&gt; 以及 &lt;code&gt;NSURLConnectionDataDelegate&lt;/code&gt;，我们在可以&lt;strong&gt;protocol&lt;/strong&gt;中看到这样的消息：我将要做什么（如： &lt;strong&gt;willSendRequest&lt;/strong&gt;，将要发送请求）、到目前为止我知道的信息（如：&lt;code&gt;canAuthenticateAgainstProtectionSpace&lt;/code&gt;）、我已经完成这些啦（ &lt;strong&gt;didReceiveResponse&lt;/strong&gt;，收到请求的回复，即完成请求）。这些消息组成一个流程，而那些对流程感兴趣的&lt;strong&gt;delegate&lt;/strong&gt;将会在每一步得到相应的通知。&lt;/p&gt;
&lt;p&gt;当我们观察&lt;strong&gt;handler&lt;/strong&gt;和完整的方法时，我们发现一个&lt;strong&gt;block&lt;/strong&gt;包含一个响应对象和一个错误对象。显然这里没有任何有关“我在哪里，我正在做什么的”的交互。&lt;/p&gt;
&lt;p&gt;因此我们可以这样认为，&lt;strong&gt;delegate&lt;/strong&gt;的回调更多的面向过程，而&lt;strong&gt;block&lt;/strong&gt;则是面向结果的。如果你需要得到一条多步进程的通知，你应该使用&lt;strong&gt;delegation&lt;/strong&gt;。而当你只是希望得到你请求的信息（或者获取信息时的错误提示），你应该使用&lt;strong&gt;block&lt;/strong&gt;。（如果你结合之前的3个结论，你会发现&lt;strong&gt;delegate&lt;/strong&gt;可以在所有事件中维持&lt;strong&gt;state&lt;/strong&gt;，而多个独立的&lt;strong&gt;block&lt;/strong&gt;确不能）。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;参考：&quot;&gt;&lt;a href=&quot;#参考：&quot; class=&quot;headerlink&quot; title=&quot;参考：&quot;&gt;&lt;/a&gt;参考：&lt;/h3&gt;&lt;p&gt;&lt;a herf=&quot;http://www.cocoachina.com/ios/20150925/13525.html&quot;&gt;开发该选择Blocks还是Delegates&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;IOS中关于信息传递过程中经常会使用block，委托代理，NSNotification，KVO进行调用，但是查找资料后有些资料不是很全。&lt;/
    
    </summary>
    
      <category term="IOS" scheme="http://yoursite.com/categories/IOS/"/>
    
    
      <category term="IOS" scheme="http://yoursite.com/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>从叮叮CTO采访演讲随笔</title>
    <link href="http://yoursite.com/2016/05/29/%E4%BB%8E%E5%8F%AE%E5%8F%AECTO%E9%87%87%E8%AE%BF%E6%BC%94%E8%AE%B2%E9%9A%8F%E7%AC%94/"/>
    <id>http://yoursite.com/2016/05/29/从叮叮CTO采访演讲随笔/</id>
    <published>2016-05-29T04:09:11.000Z</published>
    <updated>2016-06-02T08:57:27.000Z</updated>
    
    <content type="html">&lt;p&gt;今天在看One’s Cat大神的博客时讲到如何创建我们个人的开源框架，就涉及到fastlane就找来看下，无意中看到叮叮的CTO朱鸿大神（又一尊大神）讲述自己的产品。短短22：05的视频让自己感触很大，写这篇文章也就是无聊说下自己所学知识吧。&lt;/p&gt;
&lt;h3 id=&quot;总的来说以技术来简化我们生活，目前比想象中要难。&quot;&gt;&lt;a href=&quot;#总的来说以技术来简化我们生活，目前比想象中要难。&quot; class=&quot;headerlink&quot; title=&quot;总的来说以技术来简化我们生活，目前比想象中要难。&quot;&gt;&lt;/a&gt;总的来说以技术来简化我们生活，目前比想象中要难。&lt;/h3&gt;&lt;h3 id=&quot;人员配置方面&quot;&gt;&lt;a href=&quot;#人员配置方面&quot; class=&quot;headerlink&quot; title=&quot;人员配置方面&quot;&gt;&lt;/a&gt;人员配置方面&lt;/h3&gt;&lt;p&gt;首先朱大神讲述团队人数有120人，而在客户端和后端比例2：1估计这样的标配也只有像阿里这样想要在移动端尤其社交这块站住一定地位强悍标配。&lt;/p&gt;
&lt;h3 id=&quot;踩过的大坑&quot;&gt;&lt;a href=&quot;#踩过的大坑&quot; class=&quot;headerlink&quot; title=&quot;踩过的大坑&quot;&gt;&lt;/a&gt;踩过的大坑&lt;/h3&gt;&lt;p&gt;朱大神讲述在数据解析方便曾经踩过一个大坑，所谓大坑就是在IOS&amp;amp;Android两个客户端对于数据解析有所不同。就是在于基本数据类型方面对于数据解析产生不同的结果，估计是使用加密方式在服务器得到数据解析有一定乱码想象只是不知道是Json还是Xml得解析（小编自己猜测）。&lt;/p&gt;
&lt;h3 id=&quot;企业电话方面&quot;&gt;&lt;a href=&quot;#企业电话方面&quot; class=&quot;headerlink&quot; title=&quot;企业电话方面&quot;&gt;&lt;/a&gt;企业电话方面&lt;/h3&gt;&lt;p&gt;大神说出目前我们移动的端所在2G用户比重挺大，采用融合通信方向期间还是用阿里的线路。关于在WiFi情况下测试使用OA通信方式，随便讲述在手机网络提供商不同的情况下具体情况（联通网络通信一旦打开网络就会占用一条信道进行通信，所以在数据较大时带宽就是占用较大问题~小心脏作为客户端开发的小编之前竟没有听说过）。&lt;/p&gt;
&lt;h3 id=&quot;发布机制和团队意思&quot;&gt;&lt;a href=&quot;#发布机制和团队意思&quot; class=&quot;headerlink&quot; title=&quot;发布机制和团队意思&quot;&gt;&lt;/a&gt;发布机制和团队意思&lt;/h3&gt;&lt;p&gt;由于叮叮是基于企业通信服务的行业应用性能方便真是个大问题。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; 嗨，记得去年的暑假在参加深圳一个活动时，黄老大奔去深圳创业~那时我们住在旅社&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;他说要做企业OA，我随口说现在创业那么火要不做一个给创业者做个服务型的应用提高效率。看到这个感觉&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;事情真的不想我们想象的那么简单！&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;作为开发人员我们都知道如何做到流畅滚动界面和通信方面及时，这个是很大的挑战。这个后面有所涉及大家还是耐心看下去。&lt;br&gt;其实真正触动💘项目组技术、产品和运营拆分为7个team，实行竞争估计机制。产品经理对于自己team负责的功能进行跟进，技术和运营负责相关技术开发。这样完成每天都可以进行一个bate的提交，三周进行产品的一次迭代。项目开发之快。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; 最让小编疑惑的是产品之间功能可以进行模块开发~基于面向对象有点（针对功能实现&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;可以进行模块划分），但是运营是怎么在一个大的team然后7个小团队之间实现😂&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;记得不久前有个标题党：BAT未来还会存在吗？中间就是利用“二八法则”来讲述大企业面对科技什么鬼突变时难以进行改革，小企业更有活力。来辩证讲述自己的观点，看小编微微一笑就喝下水平静平静。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; 不过目前看来这个定理估计是有自己价值，以后如果是自己出来尝试就可以试验下，此&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;处可以hulue&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;灰度用户&quot;&gt;&lt;a href=&quot;#灰度用户&quot; class=&quot;headerlink&quot; title=&quot;灰度用户&quot;&gt;&lt;/a&gt;灰度用户&lt;/h3&gt;&lt;p&gt;听到的第一感觉就是“恩？”请问和37度灰有关系不。我可是窦文涛的粉丝啊，难道是自己见识太少。认认真&lt;br&gt;真百度一下关于灰度的问题，所说没有找到灰度用户说法但是却看到关于QQ传授灰度法则：需求度、速度、灵活度、冗余度、开放协作度、创新度和进化度。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;小编下面就为大家讲述下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;需求度：用户需求就是使用者最想要。例如：只从去年国家放开二胎政策，我们就会看到今年母婴行业天天&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;火爆的行业，毕竟70，80后大叔和阿姨估计从那天就开始人类伟大的传承奋斗啦😛&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;速度：这个估计大家都知道，刘翔110跨栏成为亚洲飞人的称号。对于互联网而言速度就更难能可贵的，估&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;计这也是面对微信的叮叮三周一个版本更新具体体现吧。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;灵活度：面对当前局势有所判断和对未知的预见，就像神雕侠侣里的段誉，面对强大恶老三（一直都自称老&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;二来着）虽说武术哥不行。但是好在凌波微步，照样在打赌中成为你小子的师傅不是。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;冗余度：看到这心里凉把把的，QQ老大你也是程序员开始的，冗余度是在程序开发过程中我们想法设法解&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;决。后来定睛一看，哦，原来是是试错啊，好吧奉上我的膝盖👍🏻。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;开放协作度：在互联网中把自家的资源拿来共享合作，大家都知道蜜蜂一般蜂巢中只有一个蜂后无数工蜂，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;蜂后向工蜂提供生命工蜂负责具体事务。之后大家在一个集体里把自己越做越大，蜂后后期几乎可以独资。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;创新度：只记得去年克强大大所得万众创新，大众创业。后面身边很多人就去啦，一路好走🌵&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;进化度：QQ大佬说6个如果做到的话，这个会自动完成。有点生物进化的味道，但是缺少物竞天择。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;问题调试&quot;&gt;&lt;a href=&quot;#问题调试&quot; class=&quot;headerlink&quot; title=&quot;问题调试&quot;&gt;&lt;/a&gt;问题调试&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;这里之所使用代码格式是真的有重要，仅对于码农来说，比方说本人。&lt;br&gt;还像是Android段可以进行fix后台自动修复功能，IOS客户端是在IOS端直接进行修改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;性能优化要求&quot;&gt;&lt;a href=&quot;#性能优化要求&quot; class=&quot;headerlink&quot; title=&quot;性能优化要求&quot;&gt;&lt;/a&gt;性能优化要求&lt;/h3&gt;&lt;p&gt;省电和顺滑，具体怎么完成和实现，朱大神微微😃。当讲到在图片下载处理时主要将海外，朱大神说我们在海外有简历服务器然后跟具体的路由优化选择可以对图片下载加快速度。&lt;/p&gt;
&lt;h3 id=&quot;企业群聊处理&quot;&gt;&lt;a href=&quot;#企业群聊处理&quot; class=&quot;headerlink&quot; title=&quot;企业群聊处理&quot;&gt;&lt;/a&gt;企业群聊处理&lt;/h3&gt;&lt;p&gt;假设一种情况：当很多在一个群组中一起聊天，一秒可以让数据达到几千条。请问你怎么解决？&lt;br&gt;朱大神解决方式：一起把数据下载下来，保存不至于丢失。但是最后显示的数据大多是最后十几二十几条。这样可以减少屏幕的刷屏率，优化性能。至少在GPU渲染显示方面肯定有所优化🙅🏻&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;之所以写这些随笔，是想让自己记住自己看过知识。毕竟好记性是在不如一个烂笔头，写的过程也是在记忆&lt;br&gt;中重新思考的过程。&lt;/p&gt;
&lt;/blockquote&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;今天在看One’s Cat大神的博客时讲到如何创建我们个人的开源框架，就涉及到fastlane就找来看下，无意中看到叮叮的CTO朱鸿大神（又一尊大神）讲述自己的产品。短短22：05的视频让自己感触很大，写这篇文章也就是无聊说下自己所学知识吧。&lt;/p&gt;
&lt;h3 id=&quot;总的来
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="视频心得" scheme="http://yoursite.com/tags/%E8%A7%86%E9%A2%91%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title>博客搬家感觉</title>
    <link href="http://yoursite.com/2016/05/28/%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%90%AF/"/>
    <id>http://yoursite.com/2016/05/28/博客开启/</id>
    <published>2016-05-28T13:44:27.000Z</published>
    <updated>2016-06-03T13:22:06.000Z</updated>
    
    <content type="html">&lt;p&gt; &lt;br&gt;&lt;br&gt; &lt;br&gt; &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;博客地址有经常使p用的博客园搬至简书，从简书搬到Hexo建立的Github上面。从此开启自己在跟人博客学&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;习和分享征程，要是说写这些对我最大驱动力是一条自己一直对技术喜爱和完成自己蜕变之路。 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;昨天把博客搬至自己的博客，虽说花费的时间有点多，但是看着自己花费的时间有所收获还是很开心&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;的。而且自己也将要离开生活四年头大开始新的征程，有的同学说自己上大学优劣，不过我是真心感&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;谢头大。在四年间自己做过很多事情，也收获很多。其实最大的收获是有一件事值得自己一直去等待&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这也需是自己在大学最大的收获，也是在大学最开心大三下半学期╮(╯▽╰)╭。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:right;&quot;&gt;&lt;br&gt;    – &lt;a href=&quot;&quot;&gt; 后面会简历自己独自的介绍😘&lt;/a&gt;&lt;br&gt;&lt;/p&gt;


</content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;br&gt;&lt;br&gt; &lt;br&gt; &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="博客之初" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%88%9D/"/>
    
  </entry>
  
</feed>
